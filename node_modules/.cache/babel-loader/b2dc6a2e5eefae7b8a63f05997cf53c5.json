{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nvar _excluded = [\"cdnSuffix\", \"cdnUrl\", \"countryCode\", \"style\", \"svg\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nvar DEFAULT_CDN_URL = 'https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/3.4.3/flags/4x3/';\nvar DEFAULT_CDN_SUFFIX = 'svg'; // offset between uppercase ascii and regional indicator symbols\n\nvar OFFSET = 127397;\nfunction ReactCountryFlag(_ref) {\n  _ref.cdnSuffix;\n  var cdnUrl = _ref.cdnUrl,\n    countryCode = _ref.countryCode,\n    style = _ref.style,\n    svg = _ref.svg,\n    props = _objectWithoutProperties(_ref, _excluded);\n  if (typeof countryCode !== 'string') {\n    return null;\n  }\n  if (svg) {\n    var flagUrl = \"\".concat(cdnUrl).concat(countryCode.toLowerCase(), \".\").concat(DEFAULT_CDN_SUFFIX);\n    return /*#__PURE__*/React.createElement(\"img\", _extends({}, props, {\n      src: flagUrl,\n      style: _objectSpread({\n        display: 'inline-block',\n        width: '1em',\n        height: '1em',\n        verticalAlign: 'middle'\n      }, style)\n    }));\n  }\n  var emoji = countryCode.toUpperCase().replace(/./g, function (char) {\n    return String.fromCodePoint(char.charCodeAt(0) + OFFSET);\n  });\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    role: \"img\"\n  }, props, {\n    style: _objectSpread({\n      display: 'inline-block',\n      fontSize: '1em',\n      lineHeight: '1em',\n      verticalAlign: 'middle'\n    }, style)\n  }), emoji);\n}\nReactCountryFlag.propTypes = {\n  cdnUrl: PropTypes.string,\n  countryCode: PropTypes.string.isRequired,\n  style: PropTypes.object,\n  svg: PropTypes.bool\n};\nReactCountryFlag.defaultProps = {\n  cdnUrl: DEFAULT_CDN_URL,\n  svg: false\n};\nexport default ReactCountryFlag;","map":{"version":3,"names":["DEFAULT_CDN_URL","DEFAULT_CDN_SUFFIX","OFFSET","ReactCountryFlag","_ref","cdnSuffix","cdnUrl","countryCode","style","svg","props","_objectWithoutProperties","_excluded","flagUrl","concat","toLowerCase","React","createElement","_extends","src","_objectSpread","display","width","height","verticalAlign","emoji","toUpperCase","replace","char","String","fromCodePoint","charCodeAt","role","fontSize","lineHeight","propTypes","PropTypes","string","isRequired","object","bool","defaultProps"],"sources":["../src/index.js"],"sourcesContent":["import * as React from 'react'\nimport PropTypes from 'prop-types'\n\nconst DEFAULT_CDN_URL =\n    'https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/3.4.3/flags/4x3/'\nconst DEFAULT_CDN_SUFFIX = 'svg'\n\n// offset between uppercase ascii and regional indicator symbols\nconst OFFSET = 127397\n\nfunction ReactCountryFlag({\n    cdnSuffix,\n    cdnUrl,\n    countryCode,\n    style,\n    svg,\n    ...props\n}) {\n    if (typeof countryCode !== 'string') {\n        return null\n    }\n\n    if (svg) {\n        const flagUrl = `${cdnUrl}${countryCode.toLowerCase()}.${DEFAULT_CDN_SUFFIX}`\n\n        return (\n            <img\n                {...props}\n                src={flagUrl}\n                style={{\n                    display: 'inline-block',\n                    width: '1em',\n                    height: '1em',\n                    verticalAlign: 'middle',\n                    ...style\n                }}\n            />\n        )\n    }\n\n    const emoji = countryCode\n        .toUpperCase()\n        .replace(/./g, (char) =>\n            String.fromCodePoint(char.charCodeAt(0) + OFFSET)\n        )\n\n    return (\n        <span\n            role=\"img\"\n            {...props}\n            style={{\n                display: 'inline-block',\n                fontSize: '1em',\n                lineHeight: '1em',\n                verticalAlign: 'middle',\n                ...style\n            }}\n        >\n            {emoji}\n        </span>\n    )\n}\n\nReactCountryFlag.propTypes = {\n    cdnUrl: PropTypes.string,\n    countryCode: PropTypes.string.isRequired,\n    style: PropTypes.object,\n    svg: PropTypes.bool\n}\n\nReactCountryFlag.defaultProps = {\n    cdnUrl: DEFAULT_CDN_URL,\n    svg: false\n}\n\nexport default ReactCountryFlag\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAMA,eAAe,GACjB,uEADJ;AAEA,IAAMC,kBAAkB,GAAG,KAA3B;;AAGA,IAAMC,MAAM,GAAG,MAAf;AAEA,SAASC,gBAATA,CAAAC,IAAA,EAOG;EAAAA,IAAA,CANCC,SAMD;EAAA,IALCC,MAKD,GAAAF,IAAA,CALCE,MAKD;IAJCC,WAID,GAAAH,IAAA,CAJCG,WAID;IAHCC,KAGD,GAAAJ,IAAA,CAHCI,KAGD;IAFCC,GAED,GAAAL,IAAA,CAFCK,GAED;IADIC,KACJ,GAAAC,wBAAA,CAAAP,IAAA,EAAAQ,SAAA;EACC,IAAI,OAAOL,WAAP,KAAuB,QAA3B,EAAqC;IACjC,OAAO,IAAP;EACH;EAED,IAAIE,GAAJ,EAAS;IACL,IAAMI,OAAO,MAAAC,MAAA,CAAMR,MAAN,EAAAQ,MAAA,CAAeP,WAAW,CAACQ,WAAZ,EAAf,OAAAD,MAAA,CAA4Cb,kBAA5C,CAAb;IAEA,oBACIe,KAAA,CAAAC,aAAA,QAAAC,QAAA,KACQR,KADR;MAEIS,GAAG,EAAEN,OAFT;MAGIL,KAAK,EAAAY,aAAA;QACDC,OAAO,EAAE,cADR;QAEDC,KAAK,EAAE,KAFN;QAGDC,MAAM,EAAE,KAHP;QAIDC,aAAa,EAAE;MAJd,GAKEhB,KALF;IAHT,GADJ;EAaH;EAED,IAAMiB,KAAK,GAAGlB,WAAW,CACpBmB,WADS,GAETC,OAFS,CAED,IAFC,EAEK,UAACC,IAAD;IAAA,OACXC,MAAM,CAACC,aAAP,CAAqBF,IAAI,CAACG,UAAL,CAAgB,CAAhB,IAAqB7B,MAA1C,CADW;EAAA,CAFL,CAAd;EAMA,oBACIc,KAAA,CAAAC,aAAA,SAAAC,QAAA;IACIc,IAAI,EAAC;EADT,GAEQtB,KAFR;IAGIF,KAAK,EAAAY,aAAA;MACDC,OAAO,EAAE,cADR;MAEDY,QAAQ,EAAE,KAFT;MAGDC,UAAU,EAAE,KAHX;MAIDV,aAAa,EAAE;IAJd,GAKEhB,KALF;EAHT,IAWKiB,KAXL,CADJ;AAeH;AAEDtB,gBAAgB,CAACgC,SAAjB,GAA6B;EACzB7B,MAAM,EAAE8B,SAAS,CAACC,MADO;EAEzB9B,WAAW,EAAE6B,SAAS,CAACC,MAAV,CAAiBC,UAFL;EAGzB9B,KAAK,EAAE4B,SAAS,CAACG,MAHQ;EAIzB9B,GAAG,EAAE2B,SAAS,CAACI;AAJU,CAA7B;AAOArC,gBAAgB,CAACsC,YAAjB,GAAgC;EAC5BnC,MAAM,EAAEN,eADoB;EAE5BS,GAAG,EAAE;AAFuB,CAAhC"},"metadata":{},"sourceType":"module"}