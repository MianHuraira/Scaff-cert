{"ast":null,"code":"var _jsxFileName = \"D:\\\\Utecho\\\\Scaff-cert\\\\src\\\\views\\\\extensions\\\\swiper\\\\SwiperVirtual.js\";\n// ** Third Party Components\nimport { Swiper, SwiperSlide } from 'swiper/react/swiper-react';\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Button } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SwiperVirtual = _ref => {\n  let {\n    isRtl\n  } = _ref;\n  const slides = [];\n  for (let i = 0; i < 10; i += 1) {\n    slides.push( /*#__PURE__*/_jsxDEV(SwiperSlide, {\n      children: [\"Slide \", i + 1]\n    }, `slide-${i + 1}`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }, this));\n  }\n  let instance = null;\n  const appendSlide = () => {\n    if (instance !== null) {\n      slides.push( /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        children: [\"Slide \", slides.length + 1]\n      }, `slide-${slides.length + 1}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 19\n      }, this));\n      instance.update(true);\n    }\n  };\n  const removeSlide = () => {\n    if (instance !== null) {\n      instance.removeAllSlides();\n      slides.length = 0;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CardTitle, {\n        tag: \"h4\",\n        children: \"Virtual\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(Swiper, {\n        dir: isRtl ? 'rtl' : 'ltr',\n        className: \"swiper-virtual\",\n        spaceBetween: 50,\n        slidesPerView: 3,\n        centeredSlides: true,\n        pagination: {\n          clickable: true\n        },\n        onSwiper: swiper => instance = swiper.virtual,\n        virtual: true,\n        children: slides\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"demo-inline-spacing\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          outline: true,\n          onClick: appendSlide,\n          children: \"Append Slide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"me-0\",\n          color: \"primary\",\n          outline: true,\n          onClick: removeSlide,\n          children: \"Remove All Slides\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_c = SwiperVirtual;\nexport default SwiperVirtual;\nvar _c;\n$RefreshReg$(_c, \"SwiperVirtual\");","map":{"version":3,"names":["Swiper","SwiperSlide","Card","CardHeader","CardTitle","CardBody","Button","jsxDEV","_jsxDEV","SwiperVirtual","_ref","isRtl","slides","i","push","children","fileName","_jsxFileName","lineNumber","columnNumber","instance","appendSlide","length","update","removeSlide","removeAllSlides","tag","dir","className","spaceBetween","slidesPerView","centeredSlides","pagination","clickable","onSwiper","swiper","virtual","color","outline","onClick","_c","$RefreshReg$"],"sources":["D:/Utecho/Scaff-cert/src/views/extensions/swiper/SwiperVirtual.js"],"sourcesContent":["// ** Third Party Components\r\nimport { Swiper, SwiperSlide } from 'swiper/react/swiper-react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardBody, Button } from 'reactstrap'\r\n\r\nconst SwiperVirtual = ({ isRtl }) => {\r\n  const slides = []\r\n  for (let i = 0; i < 10; i += 1) {\r\n    slides.push(<SwiperSlide key={`slide-${i + 1}`}>Slide {i + 1}</SwiperSlide>)\r\n  }\r\n\r\n  let instance = null\r\n\r\n  const appendSlide = () => {\r\n    if (instance !== null) {\r\n      slides.push(<SwiperSlide key={`slide-${slides.length + 1}`}>Slide {slides.length + 1}</SwiperSlide>)\r\n      instance.update(true)\r\n    }\r\n  }\r\n\r\n  const removeSlide = () => {\r\n    if (instance !== null) {\r\n      instance.removeAllSlides()\r\n      slides.length = 0\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Virtual</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Swiper\r\n          dir={isRtl ? 'rtl' : 'ltr'}\r\n          className='swiper-virtual'\r\n          spaceBetween={50}\r\n          slidesPerView={3}\r\n          centeredSlides\r\n          pagination={{ clickable: true }}\r\n          onSwiper={swiper => (instance = swiper.virtual)}\r\n          virtual\r\n        >\r\n          {slides}\r\n        </Swiper>\r\n\r\n        <div className='demo-inline-spacing'>\r\n          <Button color='primary' outline onClick={appendSlide}>\r\n            Append Slide\r\n          </Button>\r\n          <Button className='me-0' color='primary' outline onClick={removeSlide}>\r\n            Remove All Slides\r\n          </Button>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default SwiperVirtual\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}