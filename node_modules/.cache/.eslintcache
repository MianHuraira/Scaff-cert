[{"D:\\Utecho\\Scaff-cert\\src\\index.js":"1","D:\\Utecho\\Scaff-cert\\src\\App.js":"2","D:\\Utecho\\Scaff-cert\\src\\serviceWorker.js":"3","D:\\Utecho\\Scaff-cert\\src\\redux\\store.js":"4","D:\\Utecho\\Scaff-cert\\src\\configs\\acl\\ability.js":"5","D:\\Utecho\\Scaff-cert\\src\\utility\\context\\ThemeColors.js":"6","D:\\Utecho\\Scaff-cert\\src\\utility\\context\\Can.js":"7","D:\\Utecho\\Scaff-cert\\src\\@core\\components\\spinner\\Fallback-spinner.js":"8","D:\\Utecho\\Scaff-cert\\src\\@fake-db\\index.js":"9","D:\\Utecho\\Scaff-cert\\src\\configs\\i18n\\index.js":"10","D:\\Utecho\\Scaff-cert\\src\\@core\\components\\ripple-button\\index.js":"11","D:\\Utecho\\Scaff-cert\\src\\redux\\rootReducer.js":"12","D:\\Utecho\\Scaff-cert\\src\\router\\Router.js":"13","D:\\Utecho\\Scaff-cert\\src\\configs\\acl\\initialAbility.js":"14","D:\\Utecho\\Scaff-cert\\src\\@fake-db\\mock.js":"15","D:\\Utecho\\Scaff-cert\\src\\@fake-db\\pages\\profile.js":"16","D:\\Utecho\\Scaff-cert\\src\\@fake-db\\pages\\faq.js":"17","D:\\Utecho\\Scaff-cert\\src\\@fake-db\\pages\\pricing-data.js":"18","D:\\Utecho\\Scaff-cert\\src\\@fake-db\\pages\\blog-data.js":"19","D:\\Utecho\\Scaff-cert\\src\\@fake-db\\pages\\knowledge-base.js":"20","D:\\Utecho\\Scaff-cert\\src\\@fake-db\\apps\\chat.js":"21","D:\\Utecho\\Scaff-cert\\src\\@fake-db\\pages\\account-settings.js":"22","D:\\Utecho\\Scaff-cert\\src\\@fake-db\\apps\\email.js":"23","D:\\Utecho\\Scaff-cert\\src\\@fake-db\\apps\\invoice.js":"24","D:\\Utecho\\Scaff-cert\\src\\@fake-db\\apps\\permissionsList.js":"25","D:\\Utecho\\Scaff-cert\\src\\@fake-db\\apps\\todo.js":"26","D:\\Utecho\\Scaff-cert\\src\\@fake-db\\apps\\calendar.js":"27","D:\\Utecho\\Scaff-cert\\src\\@fake-db\\apps\\userList.js":"28","D:\\Utecho\\Scaff-cert\\src\\@fake-db\\apps\\eCommerce.js":"29","D:\\Utecho\\Scaff-cert\\src\\@fake-db\\tables\\datatables.js":"30","D:\\Utecho\\Scaff-cert\\src\\@fake-db\\navbar\\navbarSearch.js":"31","D:\\Utecho\\Scaff-cert\\src\\@fake-db\\cards\\card-analytics.js":"32","D:\\Utecho\\Scaff-cert\\src\\@fake-db\\cards\\card-statistics.js":"33","D:\\Utecho\\Scaff-cert\\src\\@fake-db\\autoComplete\\autoComplete.js":"34","D:\\Utecho\\Scaff-cert\\src\\redux\\navbar.js":"35","D:\\Utecho\\Scaff-cert\\src\\redux\\layout.js":"36","D:\\Utecho\\Scaff-cert\\src\\redux\\authentication.js":"37","D:\\Utecho\\Scaff-cert\\src\\utility\\Utils.js":"38","D:\\Utecho\\Scaff-cert\\src\\utility\\hooks\\useRouterTransition.js":"39","D:\\Utecho\\Scaff-cert\\src\\utility\\hooks\\useLayout.js":"40","D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\BlankLayout.js":"41","D:\\Utecho\\Scaff-cert\\src\\layouts\\VerticalLayout.js":"42","D:\\Utecho\\Scaff-cert\\src\\layouts\\HorizontalLayout.js":"43","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\misc\\Error.js":"44","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\misc\\NotAuthorized.js":"45","D:\\Utecho\\Scaff-cert\\src\\@fake-db\\jwt\\index.js":"46","D:\\Utecho\\Scaff-cert\\src\\@fake-db\\utils.js":"47","D:\\Utecho\\Scaff-cert\\src\\router\\routes\\index.js":"48","D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\components\\layout-wrapper\\index.js":"49","D:\\Utecho\\Scaff-cert\\src\\configs\\themeConfig.js":"50","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\store\\index.js":"51","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\invoice\\store\\index.js":"52","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\todo\\store\\index.js":"53","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\ecommerce\\store\\index.js":"54","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\chat\\store\\index.js":"55","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\email\\store\\index.js":"56","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\roles-permissions\\store\\index.js":"57","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\calendar\\store\\index.js":"58","D:\\Utecho\\Scaff-cert\\src\\views\\tables\\data-tables\\store\\index.js":"59","D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\HorizontalLayout.js":"60","D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\VerticalLayout.js":"61","D:\\Utecho\\Scaff-cert\\src\\utility\\hooks\\useSkin.js":"62","D:\\Utecho\\Scaff-cert\\src\\auth\\jwt\\useJwt.js":"63","D:\\Utecho\\Scaff-cert\\src\\router\\routes\\PageLayouts.js":"64","D:\\Utecho\\Scaff-cert\\src\\router\\routes\\Dashboards.js":"65","D:\\Utecho\\Scaff-cert\\src\\router\\routes\\Charts.js":"66","D:\\Utecho\\Scaff-cert\\src\\router\\routes\\Extensions.js":"67","D:\\Utecho\\Scaff-cert\\src\\router\\routes\\UiElements.js":"68","D:\\Utecho\\Scaff-cert\\src\\router\\routes\\Tables.js":"69","D:\\Utecho\\Scaff-cert\\src\\router\\routes\\Pages.js":"70","D:\\Utecho\\Scaff-cert\\src\\router\\routes\\Forms.js":"71","D:\\Utecho\\Scaff-cert\\src\\navigation\\horizontal\\index.js":"72","D:\\Utecho\\Scaff-cert\\src\\navigation\\vertical\\index.js":"73","D:\\Utecho\\Scaff-cert\\src\\router\\routes\\Apps.js":"74","D:\\Utecho\\Scaff-cert\\src\\utility\\hooks\\useFooterType.js":"75","D:\\Utecho\\Scaff-cert\\src\\utility\\hooks\\useNavbarColor.js":"76","D:\\Utecho\\Scaff-cert\\src\\utility\\hooks\\useRTL.js":"77","D:\\Utecho\\Scaff-cert\\src\\utility\\hooks\\useNavbarType.js":"78","D:\\Utecho\\Scaff-cert\\src\\@core\\auth\\jwt\\useJwt.js":"79","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\page-layouts\\LayoutBlank.js":"80","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\misc\\Maintenance.js":"81","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\misc\\ComingSoon.js":"82","D:\\Utecho\\Scaff-cert\\src\\navigation\\horizontal\\forms-tables.js":"83","D:\\Utecho\\Scaff-cert\\src\\navigation\\horizontal\\ui-elements.js":"84","D:\\Utecho\\Scaff-cert\\src\\navigation\\vertical\\ui-elements.js":"85","D:\\Utecho\\Scaff-cert\\src\\navigation\\vertical\\dashboards.js":"86","D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\components\\navbar\\index.js":"87","D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\components\\footer\\index.js":"88","D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\components\\menu\\vertical-menu\\index.js":"89","D:\\Utecho\\Scaff-cert\\src\\@core\\components\\scrolltop\\index.js":"90","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Job_detail.js":"91","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Branch_inventory.js":"92","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Hire_job.js":"93","D:\\Utecho\\Scaff-cert\\src\\@core\\components\\customizer\\index.js":"94","D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\components\\menu\\horizontal-menu\\index.js":"95","D:\\Utecho\\Scaff-cert\\src\\@core\\auth\\jwt\\jwtService.js":"96","D:\\Utecho\\Scaff-cert\\src\\views\\dashboard\\analytics\\index.js":"97","D:\\Utecho\\Scaff-cert\\src\\views\\charts\\recharts\\index.js":"98","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\i18n\\index.js":"99","D:\\Utecho\\Scaff-cert\\src\\views\\components\\toasts\\index.js":"100","D:\\Utecho\\Scaff-cert\\src\\views\\components\\tooltips\\index.js":"101","D:\\Utecho\\Scaff-cert\\src\\views\\components\\timeline\\index.js":"102","D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabs\\index.js":"103","D:\\Utecho\\Scaff-cert\\src\\views\\tables\\data-tables\\advance\\index.js":"104","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-repeater\\index.js":"105","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\roles-permissions\\permissions\\index.js":"106","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\roles-permissions\\roles\\index.js":"107","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\list\\index.js":"108","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\view\\index.js":"109","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\ecommerce\\checkout\\index.js":"110","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\ecommerce\\detail\\index.js":"111","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\ecommerce\\wishlist\\index.js":"112","D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\components\\menu\\vertical-menu\\VerticalNavMenuItems.js":"113","D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\components\\menu\\vertical-menu\\VerticalMenuHeader.js":"114","D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\components\\menu\\horizontal-menu\\HorizontalNavMenuItems.js":"115","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\ecommerce\\shop\\index.js":"116","D:\\Utecho\\Scaff-cert\\src\\@core\\auth\\jwt\\jwtDefaultConfig.js":"117","D:\\Utecho\\Scaff-cert\\src\\views\\tables\\data-tables\\advance\\TableServerSide.js":"118","D:\\Utecho\\Scaff-cert\\src\\views\\tables\\data-tables\\advance\\TableAdvSearch.js":"119","D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabs\\TabsVerticalRight.js":"120","D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabs\\TabSourceCode.js":"121","D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabs\\TabsJustified.js":"122","D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabs\\TabsVerticalLeft.js":"123","D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabs\\TabsCentered.js":"124","D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabs\\TabsFilled.js":"125","D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabs\\TabsIcons.js":"126","D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabs\\TabsBasic.js":"127","D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabs\\TabsEnd.js":"128","D:\\Utecho\\Scaff-cert\\src\\views\\components\\timeline\\BasicTimeline.js":"129","D:\\Utecho\\Scaff-cert\\src\\views\\components\\timeline\\IconsTimeline.js":"130","D:\\Utecho\\Scaff-cert\\src\\views\\components\\tooltips\\TooltipSourceCode.js":"131","D:\\Utecho\\Scaff-cert\\src\\views\\components\\tooltips\\TooltipUncontrolled.js":"132","D:\\Utecho\\Scaff-cert\\src\\views\\components\\tooltips\\TooltipControlled.js":"133","D:\\Utecho\\Scaff-cert\\src\\views\\components\\tooltips\\TooltipPositions.js":"134","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\invoice\\edit\\index.js":"135","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\invoice\\add\\index.js":"136","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\invoice\\print\\index.js":"137","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\roles-permissions\\permissions\\Table.js":"138","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\ecommerce\\checkout\\steps\\Address.js":"139","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\ecommerce\\checkout\\steps\\Payment.js":"140","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\ecommerce\\checkout\\steps\\Cart.js":"141","D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\utils.js":"142","D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\components\\menu\\vertical-menu\\VerticalNavMenuSectionHeader.js":"143","D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\components\\menu\\vertical-menu\\VerticalNavMenuGroup.js":"144","D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\components\\menu\\vertical-menu\\VerticalNavMenuLink.js":"145","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\ecommerce\\shop\\Products.js":"146","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\ecommerce\\shop\\Sidebar.js":"147","D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\components\\menu\\horizontal-menu\\HorizontalNavMenuGroup.js":"148","D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\components\\menu\\horizontal-menu\\HorizontalNavMenuLink.js":"149","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\ecommerce\\detail\\RelatedProducts.js":"150","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\ecommerce\\detail\\ProductDetails.js":"151","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\ecommerce\\detail\\ItemFeatures.js":"152","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\view\\UserInfoCard.js":"153","D:\\Utecho\\Scaff-cert\\src\\@core\\components\\breadcrumbs\\index.js":"154","D:\\Utecho\\Scaff-cert\\src\\@core\\components\\card-snippet\\index.js":"155","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\view\\PlanCard.js":"156","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\view\\Tabs.js":"157","D:\\Utecho\\Scaff-cert\\src\\views\\tables\\data-tables\\data.js":"158","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\list\\Table.js":"159","D:\\Utecho\\Scaff-cert\\src\\views\\components\\timeline\\data.js":"160","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\roles-permissions\\roles\\RoleCards.js":"161","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\roles-permissions\\roles\\Table.js":"162","D:\\Utecho\\Scaff-cert\\src\\@core\\components\\wizard\\index.js":"163","D:\\Utecho\\Scaff-cert\\src\\views\\components\\breadcrumbs\\BreadcrumbsDefault.js":"164","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\roles-permissions\\permissions\\columns.js":"165","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\invoice\\add\\AddActions.js":"166","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\invoice\\add\\AddCard.js":"167","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\invoice\\edit\\EditActions.js":"168","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\invoice\\edit\\EditCard.js":"169","D:\\Utecho\\Scaff-cert\\src\\@core\\components\\widgets\\stats\\StatsHorizontal.js":"170","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-repeater\\RepeatingFormAnimated.js":"171","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\invoice\\shared-sidebar\\SidebarAddPayment.js":"172","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\invoice\\shared-sidebar\\SidebarSendInvoice.js":"173","D:\\Utecho\\Scaff-cert\\src\\views\\components\\toasts\\ToastSourceCode.js":"174","D:\\Utecho\\Scaff-cert\\src\\views\\components\\toasts\\ToastTranslucent.js":"175","D:\\Utecho\\Scaff-cert\\src\\views\\components\\toasts\\ToastHeaderIcons.js":"176","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-repeater\\RepeatingForm.js":"177","D:\\Utecho\\Scaff-cert\\src\\views\\charts\\recharts\\RadarChart.js":"178","D:\\Utecho\\Scaff-cert\\src\\views\\charts\\recharts\\ScatterChart.js":"179","D:\\Utecho\\Scaff-cert\\src\\views\\charts\\recharts\\AreaChart.js":"180","D:\\Utecho\\Scaff-cert\\src\\views\\charts\\recharts\\LineChart.js":"181","D:\\Utecho\\Scaff-cert\\src\\views\\charts\\recharts\\PieChart.js":"182","D:\\Utecho\\Scaff-cert\\src\\views\\charts\\recharts\\BarChart.js":"183","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\ecommerce\\shop\\ProductsSearchbar.js":"184","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\ecommerce\\shop\\ProductsHeader.js":"185","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\ecommerce\\shop\\ProductCards.js":"186","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\analytics\\Sales2.js":"187","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\analytics\\SessionByDevice.js":"188","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\analytics\\ProductOrders.js":"189","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\statistics\\SubscribersGained.js":"190","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\advance\\CardCongratulations.js":"191","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\statistics\\RevenueGenerated.js":"192","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\statistics\\OrdersReceived.js":"193","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\view\\UserProjectsList.js":"194","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\view\\Notifications.js":"195","D:\\Utecho\\Scaff-cert\\src\\@core\\components\\timeline\\index.js":"196","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\view\\UserTimeline.js":"197","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\view\\BillingTab.js":"198","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\view\\SecurityTab.js":"199","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\view\\Connections.js":"200","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\view\\InvoiceList.js":"201","D:\\Utecho\\Scaff-cert\\src\\@core\\components\\extensions-header\\index.js":"202","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\roles-permissions\\roles\\columns.js":"203","D:\\Utecho\\Scaff-cert\\src\\@core\\components\\avatar\\index.js":"204","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\list\\columns.js":"205","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\list\\Sidebar.js":"206","D:\\Utecho\\Scaff-cert\\src\\@core\\components\\widgets\\stats\\StatsWithAreaChart.js":"207","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\view\\BillingCurrentPlan.js":"208","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\view\\columns.js":"209","D:\\Utecho\\Scaff-cert\\src\\@core\\components\\repeater\\index.js":"210","D:\\Utecho\\Scaff-cert\\src\\@core\\components\\sidebar\\index.js":"211","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\view\\BillingAddress.js":"212","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\view\\PaymentMethods.js":"213","D:\\Utecho\\Scaff-cert\\src\\@core\\components\\avatar-group\\index.js":"214","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\analytics\\SupportTracker.js":"215","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\advance\\CardAppDesign.js":"216","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\analytics\\AvgSessions.js":"217","D:\\Utecho\\Scaff-cert\\src\\@core\\components\\widgets\\stats\\ChartOptions.js":"218","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\analytics\\Sales.js":"219","D:\\Utecho\\Scaff-cert\\src\\@core\\components\\input-password-toggle\\index.js":"220","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\invoice\\list\\index.js":"221","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\invoice\\list\\columns.js":"222","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\table.js":"223","D:\\Utecho\\Scaff-cert\\src\\views\\components\\spinners\\SpinnerGrowing.js":"224","D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\components\\navbar\\NavbarUser.js":"225","D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\components\\navbar\\NavbarBookmarks.js":"226","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Tutorials.js":"227","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Return_form.js":"228","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Jsa_risk.js":"229","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\InspectionForm.js":"230","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Delivery_form.js":"231","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\data-list\\ParcelList.js":"232","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\data-list\\AssignParcel.js":"233","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\data-list\\RiderList.js":"234","D:\\Utecho\\Scaff-cert\\src\\Admin\\Availability\\AvailabilityList.js":"235","D:\\Utecho\\Scaff-cert\\src\\Admin\\Availability\\SetAvailability.js":"236","D:\\Utecho\\Scaff-cert\\src\\Admin\\employee\\CreateEmployee.js":"237","D:\\Utecho\\Scaff-cert\\src\\Admin\\employee\\EmployeeList.js":"238","D:\\Utecho\\Scaff-cert\\src\\Admin\\services\\CreateSeervice.js":"239","D:\\Utecho\\Scaff-cert\\src\\Admin\\orders\\all_orders.js":"240","D:\\Utecho\\Scaff-cert\\src\\Admin\\services\\ServiceList.js":"241","D:\\Utecho\\Scaff-cert\\src\\Admin\\orders\\accept_orders.js":"242","D:\\Utecho\\Scaff-cert\\src\\Admin\\orders\\complete_orders.js":"243","D:\\Utecho\\Scaff-cert\\src\\Admin\\orders\\cancel_orders.js":"244","D:\\Utecho\\Scaff-cert\\src\\Admin\\orders\\pending_orders.js":"245","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Jsa_hazard.js":"246","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Jsa_activity.js":"247","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Safety_equipments.js":"248","D:\\Utecho\\Scaff-cert\\src\\Admin\\user\\Userpage.js":"249","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Subscriptions.js":"250","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Payements.js":"251","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Groups.js":"252","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Reps.js":"253","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Employees.js":"254","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Job_add.js":"255","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Job_notification.js":"256","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Job.js":"257","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\InventoryOrder.js":"258","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Inventory.js":"259","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Damage_stock.js":"260","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Branches.js":"261","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Clients.js":"262","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\authentication\\ForgotPasswordCover.js":"263","D:\\Utecho\\Scaff-cert\\src\\navigation\\vertical\\charts.js":"264","D:\\Utecho\\Scaff-cert\\src\\navigation\\vertical\\others.js":"265","D:\\Utecho\\Scaff-cert\\src\\navigation\\vertical\\tables.js":"266","D:\\Utecho\\Scaff-cert\\src\\navigation\\vertical\\forms.js":"267","D:\\Utecho\\Scaff-cert\\src\\navigation\\vertical\\pages.js":"268","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\todo\\index.js":"269","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\email\\index.js":"270","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\calendar\\index.js":"271","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\chat\\index.js":"272","D:\\Utecho\\Scaff-cert\\src\\navigation\\vertical\\apps.js":"273","D:\\Utecho\\Scaff-cert\\src\\Admin\\dashboard\\dashboard.js":"274","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\invoice\\preview\\index.js":"275","D:\\Utecho\\Scaff-cert\\src\\navigation\\horizontal\\charts.js":"276","D:\\Utecho\\Scaff-cert\\src\\navigation\\horizontal\\dashboards.js":"277","D:\\Utecho\\Scaff-cert\\src\\navigation\\horizontal\\others.js":"278","D:\\Utecho\\Scaff-cert\\src\\navigation\\horizontal\\pages.js":"279","D:\\Utecho\\Scaff-cert\\src\\navigation\\horizontal\\apps.js":"280","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\authentication\\VerifyEmailCover.js":"281","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\authentication\\TwoStepsCover.js":"282","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\authentication\\VerifyEmailBasic.js":"283","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\authentication\\ForgotPasswordBasic.js":"284","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\authentication\\TwoStepsBasic.js":"285","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\authentication\\ForgotPassword.js":"286","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\authentication\\Register.js":"287","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\authentication\\ResetPasswordBasic.js":"288","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\authentication\\ResetPasswordCover.js":"289","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\authentication\\RegisterBasic.js":"290","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\authentication\\RegisterCover.js":"291","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\authentication\\LoginCover.js":"292","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\knowledge-base\\KnowledgeBaseCategoryQuestion.js":"293","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\knowledge-base\\KnowledgeBaseCategory.js":"294","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\knowledge-base\\KnowledgeBase.js":"295","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\authentication\\LoginBasic.js":"296","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\validation\\index.js":"297","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-layouts\\index.js":"298","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\wizard\\index.js":"299","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\pricing\\index.js":"300","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\modal-examples\\index.js":"301","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\account-settings\\index.js":"302","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\license\\index.js":"303","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\api-key\\index.js":"304","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\faq\\index.js":"305","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\profile\\index.js":"306","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\file-uploader\\index.js":"307","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\select\\index.js":"308","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\editor\\index.js":"309","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\number-input\\index.js":"310","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\switch\\index.js":"311","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\checkboxes\\index.js":"312","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\textarea\\index.js":"313","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\radio\\index.js":"314","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input-groups\\index.js":"315","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input\\index.js":"316","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\blog\\edit\\index.js":"317","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\blog\\details\\index.js":"318","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input-mask\\index.js":"319","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\datepicker\\index.js":"320","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\blog\\list\\index.js":"321","D:\\Utecho\\Scaff-cert\\src\\views\\charts\\chart-js\\ChartjsLineChart.js":"322","D:\\Utecho\\Scaff-cert\\src\\views\\charts\\chart-js\\ChartjsBarChart.js":"323","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\invoice\\preview\\PreviewActions.js":"324","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\invoice\\preview\\PreviewCard.js":"325","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\knowledge-base\\KnowledgeBaseHeader.js":"326","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\chat\\SidebarLeft.js":"327","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\chat\\UserProfileSidebar.js":"328","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\chat\\Chat.js":"329","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\calendar\\Calendar.js":"330","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\email\\Sidebar.js":"331","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\calendar\\AddEventSidebar.js":"332","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\calendar\\SidebarLeft.js":"333","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\email\\Mails.js":"334","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\todo\\TaskSidebar.js":"335","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\todo\\Sidebar.js":"336","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\todo\\Tasks.js":"337","D:\\Utecho\\Scaff-cert\\src\\Admin\\user\\UserDataTable.js":"338","D:\\Utecho\\Scaff-cert\\src\\Admin\\orders\\orderModal.js":"339","D:\\Utecho\\Scaff-cert\\src\\Admin\\orders\\orderDataTable.js":"340","D:\\Utecho\\Scaff-cert\\src\\api\\apirequest.js":"341","D:\\Utecho\\Scaff-cert\\src\\Admin\\services\\ServiceTable.js":"342","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\profile\\ProfileSuggestedPages.js":"343","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\profile\\ProfileLatestPhotos.js":"344","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\profile\\ProfileFriendsSuggestions.js":"345","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\profile\\ProfileHeader.js":"346","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\profile\\ProfileTwitterFeeds.js":"347","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\profile\\ProfileAbout.js":"348","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\profile\\ProfilePolls.js":"349","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\profile\\ProfilePosts.js":"350","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\faq\\FaqContact.js":"351","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\blog\\BlogSidebar.js":"352","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\datepicker\\PickerDisabledRange.js":"353","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\datepicker\\PickerMultipleDates.js":"354","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\datepicker\\PickerHumanFriendly.js":"355","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\datepicker\\PickerDateTime.js":"356","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\datepicker\\PickerInline.js":"357","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\datepicker\\PickerTime.js":"358","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\datepicker\\PickerDefault.js":"359","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\datepicker\\PickerRange.js":"360","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input-mask\\CustomDelimitersMask.js":"361","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input-mask\\NumeralFormattingMask.js":"362","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input-mask\\DelimitersMask.js":"363","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input-mask\\PrefixMask.js":"364","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input-mask\\CreditCardMask.js":"365","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input-mask\\BlocksMask.js":"366","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input-mask\\TimeMask.js":"367","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input-mask\\DateMask.js":"368","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input-mask\\PhoneMask.js":"369","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input\\InputHorizontalSize.js":"370","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input\\InputFloating.js":"371","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input\\InputStates.js":"372","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input\\InputBasic.js":"373","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input-groups\\InputGroupSourceCode.js":"374","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input\\InputSizes.js":"375","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input\\InputFile.js":"376","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input-groups\\InputGroupDropdown.js":"377","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input-groups\\InputGroupCbAndRadio.js":"378","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input-groups\\InputGroupButtons.js":"379","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input-groups\\InputGroupBasic.js":"380","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input-groups\\InputGroupMerged.js":"381","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input-groups\\InputGroupSizes.js":"382","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\radio\\RadioBasic.js":"383","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\radio\\RadioColors.js":"384","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\textarea\\TextareaFloatingLabel.js":"385","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\textarea\\TextareaCounter.js":"386","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\checkboxes\\CheckboxColors.js":"387","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\checkboxes\\CheckboxBasic.js":"388","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\switch\\SwitchBasic.js":"389","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\switch\\SwitchColors.js":"390","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\textarea\\TextareaDefault.js":"391","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\number-input\\NumberInputControlled.js":"392","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\switch\\SwitchIcons.js":"393","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\number-input\\NumberInputFormat.js":"394","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\number-input\\NumberInputDecimal.js":"395","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\number-input\\NumberInputBasic.js":"396","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\number-input\\NumberInputColors.js":"397","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\number-input\\NumberInputMinMax.js":"398","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\number-input\\NumberInputSize.js":"399","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\editor\\EditorUncontrolled.js":"400","D:\\Utecho\\Scaff-cert\\src\\@core\\components\\ui-loader\\index.js":"401","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\email\\ComposePopup.js":"402","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\email\\MailDetails.js":"403","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\email\\MailCard.js":"404","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\editor\\EditorControlled.js":"405","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\select\\SelectReactstrap.js":"406","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\select\\SelectOptions.js":"407","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\select\\SelectSizing.js":"408","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\file-uploader\\FileUploaderRestrictions.js":"409","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\select\\SelectReact.js":"410","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\file-uploader\\FileUploaderMultiple.js":"411","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\faq\\FaqFilter.js":"412","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\file-uploader\\FileUploaderSingle.js":"413","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\faq\\Faqs.js":"414","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\account-settings\\NotificationsTabContent.js":"415","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\account-settings\\ConnectionsTabContent.js":"416","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\account-settings\\SecurityTabContent.js":"417","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\account-settings\\AccountTabContent.js":"418","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\account-settings\\BillingTabContent.js":"419","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\account-settings\\Tabs.js":"420","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\modal-examples\\Authentication.js":"421","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\modal-examples\\AddNewAddress.js":"422","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\modal-examples\\ShareProject.js":"423","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\modal-examples\\PricingModal.js":"424","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\modal-examples\\CreateApp.js":"425","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\modal-examples\\ReferEarn.js":"426","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\pricing\\PricingHeader.js":"427","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\modal-examples\\EditUser.js":"428","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\modal-examples\\AddCard.js":"429","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\pricing\\PricingCards.js":"430","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\pricing\\PricingTrial.js":"431","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\pricing\\PricingFaqs.js":"432","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\wizard\\WizardModernVertical.js":"433","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\wizard\\WizardHorizontal.js":"434","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\wizard\\WizardVertical.js":"435","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\wizard\\WizardModern.js":"436","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-layouts\\HorizontalFormIcons.js":"437","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-layouts\\MultipleColumnForm.js":"438","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-layouts\\VerticalFormIcons.js":"439","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-layouts\\HorizontalForm.js":"440","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-layouts\\VerticalForm.js":"441","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\validation\\ValidationThirdPartyComponents.js":"442","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\validation\\ValidationSchema.js":"443","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\validation\\AsyncValidation.js":"444","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\validation\\BasicHookForm.js":"445","D:\\Utecho\\Scaff-cert\\src\\Admin\\employee\\EmployeeTable.js":"446","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\account-settings\\RecentDevices.js":"447","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\account-settings\\DeleteAccount.js":"448","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\account-settings\\BillingHistory.js":"449","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\account-settings\\BillingCurrentPlan.js":"450","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\account-settings\\BillingAddress.js":"451","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\modal-examples\\create-app-steps\\FrameworkStep.js":"452","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\modal-examples\\create-app-steps\\BillingStep.js":"453","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\modal-examples\\create-app-steps\\DatabaseStep.js":"454","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\modal-examples\\create-app-steps\\DetailsStep.js":"455","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\modal-examples\\create-app-steps\\SubmitStep.js":"456","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\account-settings\\CreateApikey.js":"457","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\account-settings\\PaymentMethods.js":"458","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\account-settings\\TwoFactorAuth.js":"459","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\account-settings\\ApiKeysList.js":"460","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\wizard\\steps\\AccountDetails.js":"461","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\wizard\\steps\\Address.js":"462","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\wizard\\steps\\PersonalInfo.js":"463","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\wizard\\steps\\SocialLinks.js":"464","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\wizard\\steps-with-validation\\AccountDetails.js":"465","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\wizard\\steps-with-validation\\PersonalInfo.js":"466","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\wizard\\steps-with-validation\\SocialLinks.js":"467","D:\\Utecho\\Scaff-cert\\src\\views\\forms\\wizard\\steps-with-validation\\Address.js":"468","D:\\Utecho\\Scaff-cert\\src\\Admin\\Availability\\AvailabilityTable.js":"469","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\data-list\\Table.js":"470","D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\components\\navbar\\NavbarSearch.js":"471","D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\components\\navbar\\UserDropdown.js":"472","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\authentication\\Login.js":"473","D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\components\\navbar\\IntlDropdown.js":"474","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\import-export\\ExportSelected.js":"475","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\import-export\\Export.js":"476","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\import-export\\Import.js":"477","D:\\Utecho\\Scaff-cert\\src\\views\\components\\spinners\\index.js":"478","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\data-list\\columns.js":"479","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\data-list\\AssignParcelSidebar.js":"480","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\data-list\\ParcelSidebar.js":"481","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\data-list\\RiderSidebar.js":"482","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\data-list\\Sidebar.js":"483","D:\\Utecho\\Scaff-cert\\src\\@core\\components\\autocomplete\\index.js":"484","D:\\Utecho\\Scaff-cert\\src\\views\\components\\progress\\index.js":"485","D:\\Utecho\\Scaff-cert\\src\\views\\components\\popovers\\index.js":"486","D:\\Utecho\\Scaff-cert\\src\\views\\tables\\reactstrap\\index.js":"487","D:\\Utecho\\Scaff-cert\\src\\views\\tables\\data-tables\\basic\\index.js":"488","D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabPills\\index.js":"489","D:\\Utecho\\Scaff-cert\\src\\views\\components\\badgePills\\index.js":"490","D:\\Utecho\\Scaff-cert\\src\\views\\components\\breadcrumbs\\index.js":"491","D:\\Utecho\\Scaff-cert\\src\\views\\components\\pagination\\index.js":"492","D:\\Utecho\\Scaff-cert\\src\\views\\components\\navComponent\\index.js":"493","D:\\Utecho\\Scaff-cert\\src\\views\\components\\offcanvas\\index.js":"494","D:\\Utecho\\Scaff-cert\\src\\views\\components\\modal\\index.js":"495","D:\\Utecho\\Scaff-cert\\src\\views\\components\\divider\\index.js":"496","D:\\Utecho\\Scaff-cert\\src\\views\\components\\dropdowns\\index.js":"497","D:\\Utecho\\Scaff-cert\\src\\views\\components\\listGroup\\index.js":"498","D:\\Utecho\\Scaff-cert\\src\\views\\components\\collapse\\index.js":"499","D:\\Utecho\\Scaff-cert\\src\\views\\components\\buttons\\index.js":"500","D:\\Utecho\\Scaff-cert\\src\\views\\components\\carousel\\index.js":"501","D:\\Utecho\\Scaff-cert\\src\\views\\components\\block-ui\\index.js":"502","D:\\Utecho\\Scaff-cert\\src\\views\\components\\badge\\index.js":"503","D:\\Utecho\\Scaff-cert\\src\\views\\components\\autocomplete\\index.js":"504","D:\\Utecho\\Scaff-cert\\src\\views\\components\\avatar\\index.js":"505","D:\\Utecho\\Scaff-cert\\src\\views\\components\\alerts\\index.js":"506","D:\\Utecho\\Scaff-cert\\src\\views\\components\\accordion\\index.js":"507","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\analytics\\index.js":"508","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\actions\\index.js":"509","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\statistics\\index.js":"510","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\advance\\index.js":"511","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\basic\\index.js":"512","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\typography\\index.js":"513","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\icons\\index.js":"514","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\pagination\\index.js":"515","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\ratings\\index.js":"516","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\access-control\\index.js":"517","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\swiper\\index.js":"518","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\context-menu\\index.js":"519","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\react-player\\index.js":"520","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\copy-to-clipboard\\index.js":"521","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\tour\\index.js":"522","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\drag-and-drop\\index.js":"523","D:\\Utecho\\Scaff-cert\\src\\views\\components\\spinners\\SpinnerSourceCode.js":"524","D:\\Utecho\\Scaff-cert\\src\\utility\\hooks\\useOnClickOutside.js":"525","D:\\Utecho\\Scaff-cert\\src\\views\\components\\progress\\ProgressMultipleStacked.js":"526","D:\\Utecho\\Scaff-cert\\src\\views\\components\\progress\\ProgressSourceCode.js":"527","D:\\Utecho\\Scaff-cert\\src\\views\\tables\\data-tables\\basic\\TableColumnReorder.js":"528","D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabPills\\PillsJustified.js":"529","D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabPills\\TabPillsSourceCode.js":"530","D:\\Utecho\\Scaff-cert\\src\\views\\components\\badgePills\\BadgePillSourceCode.js":"531","D:\\Utecho\\Scaff-cert\\src\\views\\components\\badgePills\\BadgePillContextual.js":"532","D:\\Utecho\\Scaff-cert\\src\\views\\components\\badgePills\\BadgeNotification.js":"533","D:\\Utecho\\Scaff-cert\\src\\views\\components\\badgePills\\BadgePillLight.js":"534","D:\\Utecho\\Scaff-cert\\src\\views\\components\\badgePills\\BadgePillLink.js":"535","D:\\Utecho\\Scaff-cert\\src\\views\\components\\badgePills\\BadgeBlock.js":"536","D:\\Utecho\\Scaff-cert\\src\\views\\components\\avatar\\AvatarSourceCode.js":"537","D:\\Utecho\\Scaff-cert\\src\\views\\components\\avatar\\AvatarGroupTooltip.js":"538","D:\\Utecho\\Scaff-cert\\src\\views\\components\\alerts\\AlertUncontrolled.js":"539","D:\\Utecho\\Scaff-cert\\src\\views\\components\\alerts\\AlertSourceCode.js":"540","D:\\Utecho\\Scaff-cert\\src\\views\\components\\alerts\\AlertDismissable.js":"541","D:\\Utecho\\Scaff-cert\\src\\views\\components\\alerts\\AlertColors.js":"542","D:\\Utecho\\Scaff-cert\\src\\views\\components\\alerts\\DefaultAlert.js":"543","D:\\Utecho\\Scaff-cert\\src\\views\\components\\alerts\\AlertExample.js":"544","D:\\Utecho\\Scaff-cert\\src\\views\\components\\alerts\\AlertIcon.js":"545","D:\\Utecho\\Scaff-cert\\src\\views\\components\\alerts\\AlertTitle.js":"546","D:\\Utecho\\Scaff-cert\\src\\views\\components\\accordion\\AccordionUncontrolled.js":"547","D:\\Utecho\\Scaff-cert\\src\\views\\components\\avatar\\AvatarLightColors.js":"548","D:\\Utecho\\Scaff-cert\\src\\views\\components\\accordion\\AccordionWithoutArrow.js":"549","D:\\Utecho\\Scaff-cert\\src\\views\\components\\accordion\\AccordionControlled.js":"550","D:\\Utecho\\Scaff-cert\\src\\views\\components\\accordion\\AccordionMargin.js":"551","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\analytics\\RevenueReport.js":"552","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\statistics\\ProfitLineChart.js":"553","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\statistics\\OrdersBarChart.js":"554","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\statistics\\QuaterlySales.js":"555","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\statistics\\ActiveUsers.js":"556","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\sliders\\index.js":"557","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\advance\\CardEmployeesTask.js":"558","D:\\Utecho\\Scaff-cert\\src\\@core\\components\\widgets\\stats\\StatsVertical.js":"559","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\advance\\CardTransactions.js":"560","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\advance\\CardBrowserState.js":"561","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\typography\\DescriptionListVertical.js":"562","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\typography\\DescriptionListText.js":"563","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\typography\\LightBoldHeadings.js":"564","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\typography\\CustomizingHeadings.js":"565","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\typography\\BlockquoteStyling.js":"566","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\typography\\BlockquoteDefault.js":"567","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\toastify\\index.js":"568","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\sweet-alert\\index.js":"569","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\react-player\\MediaPlayerControlled.js":"570","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\react-player\\MediaPlayerAudio.js":"571","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\react-player\\MediaPlayerVideo.js":"572","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\data-list\\store\\index.js":"573","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\context-menu\\ContextMenuDoubleClick.js":"574","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\context-menu\\ContextMenuLeftClick.js":"575","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\context-menu\\ContextMenuAnimation.js":"576","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\context-menu\\ContextMenuBasic.js":"577","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\drag-and-drop\\DndListGroup.js":"578","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\drag-and-drop\\DndMultiple.js":"579","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\drag-and-drop\\DndMultiDrag.js":"580","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\drag-and-drop\\DndHandle.js":"581","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\drag-and-drop\\DndCards.js":"582","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\drag-and-drop\\DndClone.js":"583","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\context-menu\\ContextSubmenu.js":"584","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\swiper\\CenteredSlidesStyle2.js":"585","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\swiper\\CenteredSlidesStyle1.js":"586","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\swiper\\SwiperMultiSlides.js":"587","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\swiper\\SwiperNavigation.js":"588","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\swiper\\SwiperPagination.js":"589","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\swiper\\SwiperResponsive.js":"590","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\swiper\\SwiperCoverflow.js":"591","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\swiper\\SwiperDefault.js":"592","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\swiper\\SwiperProgress.js":"593","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\swiper\\SwiperAutoplay.js":"594","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\swiper\\SwiperVirtual.js":"595","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\swiper\\SwiperGallery.js":"596","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\swiper\\SwiperFade.js":"597","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\swiper\\SwiperRows.js":"598","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\swiper\\SwiperLazyload.js":"599","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\swiper\\3DEffect.js":"600","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\ratings\\RatingFractional.js":"601","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\ratings\\RatingControlled.js":"602","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\ratings\\RatingCustomSvg.js":"603","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\ratings\\RatingReadOnly.js":"604","D:\\Utecho\\Scaff-cert\\src\\@core\\components\\card-actions\\index.js":"605","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\ratings\\RatingNumbers.js":"606","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\ratings\\RatingEvents.js":"607","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\ratings\\RatingSizes.js":"608","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\ratings\\RatingBasic.js":"609","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\pagination\\PaginationIconText.js":"610","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\pagination\\PaginationPositions.js":"611","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\pagination\\SepratedPagination.js":"612","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\pagination\\PaginationSuccess.js":"613","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\pagination\\PaginationDanger.js":"614","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\pagination\\PaginationWarning.js":"615","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\pagination\\PaginationSizes.js":"616","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\pagination\\BasicPagination.js":"617","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\pagination\\PaginationInfo.js":"618","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\pagination\\PaginationIcon.js":"619","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\typography\\BlockquotesAvatar.js":"620","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\typography\\DisplayHeadings.js":"621","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\typography\\DescriptionList.js":"622","D:\\Utecho\\Scaff-cert\\src\\@core\\components\\widgets\\stats\\TinyChartStats.js":"623","D:\\Utecho\\Scaff-cert\\src\\@core\\components\\widgets\\stats\\StatsWithLineChart.js":"624","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\typography\\HeadingColors.js":"625","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\typography\\ListUnordered.js":"626","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\typography\\HTMLHeadings.js":"627","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\sweet-alert\\SweetAlertAnimations.js":"628","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\sweet-alert\\SweetAlertPositions.js":"629","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\sweet-alert\\SweetAlertCallback.js":"630","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\sweet-alert\\SweetAlertBasic.js":"631","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\sweet-alert\\SweetAlertOptions.js":"632","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\sweet-alert\\SweetAlertTypes.js":"633","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\toastify\\ToastrAnimations.js":"634","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\toastify\\ToastPositions.js":"635","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\toastify\\ToastifyOptions.js":"636","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\sliders\\SliderVerticalTooltips.js":"637","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\toastify\\ToastTypes.js":"638","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\sliders\\SliderVerticalLimit.js":"639","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\sliders\\SliderConnectUpper.js":"640","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\sliders\\SlidersBootstrap.js":"641","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\sliders\\SliderWithInput.js":"642","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\sliders\\SliderScalePips.js":"643","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\ratings\\RatingsHover.js":"644","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\sliders\\SliderValues.js":"645","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\sliders\\SliderBehaviour.js":"646","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\sliders\\SliderColors.js":"647","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\typography\\ListUnstyled.js":"648","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\sliders\\SliderVertical.js":"649","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\typography\\NamingSource.js":"650","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\typography\\ListOrdered.js":"651","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\typography\\ListInline.js":"652","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\typography\\ListIcons.js":"653","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\basic\\CardStyleVariation.js":"654","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\basic\\CardContentTypes.js":"655","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\basic\\CardHeaderFooter.js":"656","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\basic\\CardTextAlignment.js":"657","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\basic\\CardNavigation.js":"658","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\basic\\CardLayout.js":"659","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\advance\\CardUserTimeline.js":"660","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\basic\\CardImages.js":"661","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\basic\\CardTitles.js":"662","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\advance\\CardBusiness.js":"663","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\advance\\CardProfile.js":"664","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\advance\\CardPayment.js":"665","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\advance\\CardMeetup.js":"666","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\advance\\CardMedal.js":"667","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\advance\\CardChat.js":"668","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\advance\\CardJob.js":"669","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\statistics\\StatsCard.js":"670","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\analytics\\Revenue.js":"671","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\statistics\\SiteTraffic.js":"672","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\statistics\\Newsletter.js":"673","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\analytics\\GoalOverview.js":"674","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\analytics\\Earnings.js":"675","D:\\Utecho\\Scaff-cert\\src\\views\\components\\accordion\\AccordionBorder.js":"676","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\analytics\\Customers.js":"677","D:\\Utecho\\Scaff-cert\\src\\views\\components\\avatar\\AvatarColors.js":"678","D:\\Utecho\\Scaff-cert\\src\\views\\components\\accordion\\AccordionHover.js":"679","D:\\Utecho\\Scaff-cert\\src\\views\\components\\accordion\\AccordionSourceCode.js":"680","D:\\Utecho\\Scaff-cert\\src\\views\\components\\avatar\\AvatarStatus.js":"681","D:\\Utecho\\Scaff-cert\\src\\views\\components\\avatar\\AvatarGroup.js":"682","D:\\Utecho\\Scaff-cert\\src\\views\\components\\avatar\\AvatarInitials.js":"683","D:\\Utecho\\Scaff-cert\\src\\views\\components\\autocomplete\\AutoCompleteSuggestions.js":"684","D:\\Utecho\\Scaff-cert\\src\\views\\components\\avatar\\AvatarSizes.js":"685","D:\\Utecho\\Scaff-cert\\src\\views\\components\\autocomplete\\AutoCompleteLimit.js":"686","D:\\Utecho\\Scaff-cert\\src\\views\\components\\autocomplete\\AutoCompleteSourceCode.js":"687","D:\\Utecho\\Scaff-cert\\src\\views\\components\\avatar\\AvatarIcons.js":"688","D:\\Utecho\\Scaff-cert\\src\\views\\components\\autocomplete\\AutoCompleteSections.js":"689","D:\\Utecho\\Scaff-cert\\src\\views\\components\\autocomplete\\AutoCompleteRender.js":"690","D:\\Utecho\\Scaff-cert\\src\\views\\components\\autocomplete\\AutoCompleteBasic.js":"691","D:\\Utecho\\Scaff-cert\\src\\views\\components\\autocomplete\\AutoCompleteAjax.js":"692","D:\\Utecho\\Scaff-cert\\src\\views\\components\\badge\\BadgeSourceCode.js":"693","D:\\Utecho\\Scaff-cert\\src\\views\\components\\badge\\BadgeContextual.js":"694","D:\\Utecho\\Scaff-cert\\src\\views\\components\\badge\\BadgeLight.js":"695","D:\\Utecho\\Scaff-cert\\src\\views\\components\\badge\\BadgeIcons.js":"696","D:\\Utecho\\Scaff-cert\\src\\views\\components\\badge\\BadgeBlock.js":"697","D:\\Utecho\\Scaff-cert\\src\\views\\components\\badge\\BadgeGlow.js":"698","D:\\Utecho\\Scaff-cert\\src\\views\\components\\badge\\BadgeLink.js":"699","D:\\Utecho\\Scaff-cert\\src\\views\\components\\block-ui\\CustomSpinner.js":"700","D:\\Utecho\\Scaff-cert\\src\\views\\components\\block-ui\\CustomColor.js":"701","D:\\Utecho\\Scaff-cert\\src\\views\\components\\block-ui\\MessageBlocking.js":"702","D:\\Utecho\\Scaff-cert\\src\\views\\components\\block-ui\\BasicBlocking.js":"703","D:\\Utecho\\Scaff-cert\\src\\views\\components\\carousel\\CarouselSourceCode.js":"704","D:\\Utecho\\Scaff-cert\\src\\views\\components\\carousel\\CarouselPause.js":"705","D:\\Utecho\\Scaff-cert\\src\\views\\components\\carousel\\CarouselKeyboard.js":"706","D:\\Utecho\\Scaff-cert\\src\\views\\components\\carousel\\CarouselInterval.js":"707","D:\\Utecho\\Scaff-cert\\src\\views\\components\\carousel\\CarouselUncontrolled.js":"708","D:\\Utecho\\Scaff-cert\\src\\views\\components\\carousel\\CarouselBasic.js":"709","D:\\Utecho\\Scaff-cert\\src\\views\\components\\carousel\\CarouselCaptions.js":"710","D:\\Utecho\\Scaff-cert\\src\\views\\components\\buttons\\ButtonsSourceCode.js":"711","D:\\Utecho\\Scaff-cert\\src\\views\\components\\buttons\\ButtonCheckboxRadio.js":"712","D:\\Utecho\\Scaff-cert\\src\\views\\components\\buttons\\ButtonsIconOnly.js":"713","D:\\Utecho\\Scaff-cert\\src\\views\\components\\buttons\\ButtonsRelief.js":"714","D:\\Utecho\\Scaff-cert\\src\\views\\components\\buttons\\ButtonsGradient.js":"715","D:\\Utecho\\Scaff-cert\\src\\views\\components\\buttons\\ButtonsOutline.js":"716","D:\\Utecho\\Scaff-cert\\src\\views\\components\\buttons\\ButtonsFilled.js":"717","D:\\Utecho\\Scaff-cert\\src\\views\\components\\buttons\\ButtonGroup.js":"718","D:\\Utecho\\Scaff-cert\\src\\views\\components\\buttons\\ButtonsRound.js":"719","D:\\Utecho\\Scaff-cert\\src\\views\\components\\buttons\\ButtonSizes.js":"720","D:\\Utecho\\Scaff-cert\\src\\views\\components\\buttons\\ButtonBlock.js":"721","D:\\Utecho\\Scaff-cert\\src\\views\\components\\buttons\\ButtonTags.js":"722","D:\\Utecho\\Scaff-cert\\src\\views\\components\\buttons\\ButtonsIcon.js":"723","D:\\Utecho\\Scaff-cert\\src\\views\\components\\collapse\\CollapseSourceCode.js":"724","D:\\Utecho\\Scaff-cert\\src\\views\\components\\buttons\\ButtonsFlat.js":"725","D:\\Utecho\\Scaff-cert\\src\\views\\components\\collapse\\CollapseMultipleTargets.js":"726","D:\\Utecho\\Scaff-cert\\src\\views\\components\\collapse\\CollapseBasic.js":"727","D:\\Utecho\\Scaff-cert\\src\\views\\components\\listGroup\\ListGroupSourceCode.js":"728","D:\\Utecho\\Scaff-cert\\src\\views\\components\\collapse\\CollapseHorizontal.js":"729","D:\\Utecho\\Scaff-cert\\src\\views\\components\\listGroup\\ListGroupNavigation.js":"730","D:\\Utecho\\Scaff-cert\\src\\views\\components\\listGroup\\ListGroupHorizontal.js":"731","D:\\Utecho\\Scaff-cert\\src\\views\\components\\listGroup\\ListGroupContextual.js":"732","D:\\Utecho\\Scaff-cert\\src\\views\\components\\listGroup\\ListGroupDisabled.js":"733","D:\\Utecho\\Scaff-cert\\src\\views\\components\\listGroup\\ListGroupNumbered.js":"734","D:\\Utecho\\Scaff-cert\\src\\views\\components\\listGroup\\ListGroupBadges.js":"735","D:\\Utecho\\Scaff-cert\\src\\views\\components\\listGroup\\ListGroupSimple.js":"736","D:\\Utecho\\Scaff-cert\\src\\views\\components\\listGroup\\ListGroupCustom.js":"737","D:\\Utecho\\Scaff-cert\\src\\views\\components\\listGroup\\ListGroupIcons.js":"738","D:\\Utecho\\Scaff-cert\\src\\views\\components\\listGroup\\ListGroupFlush.js":"739","D:\\Utecho\\Scaff-cert\\src\\views\\components\\listGroup\\ListGroupTag.js":"740","D:\\Utecho\\Scaff-cert\\src\\views\\components\\dropdowns\\DropdownsSourceCode.js":"741","D:\\Utecho\\Scaff-cert\\src\\views\\components\\dropdowns\\DropdownUncontrolled.js":"742","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\basic\\GridCards.js":"743","D:\\Utecho\\Scaff-cert\\src\\views\\components\\dropdowns\\DropdownControlled.js":"744","D:\\Utecho\\Scaff-cert\\src\\views\\components\\dropdowns\\DropdownDirections.js":"745","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\basic\\CardGroup.js":"746","D:\\Utecho\\Scaff-cert\\src\\views\\components\\dropdowns\\DropdownGradient.js":"747","D:\\Utecho\\Scaff-cert\\src\\views\\components\\dropdowns\\DropdownSplit.js":"748","D:\\Utecho\\Scaff-cert\\src\\views\\components\\dropdowns\\DropdownOutline.js":"749","D:\\Utecho\\Scaff-cert\\src\\views\\components\\dropdowns\\DropdownVariations.js":"750","D:\\Utecho\\Scaff-cert\\src\\views\\components\\dropdowns\\DropdownBasic.js":"751","D:\\Utecho\\Scaff-cert\\src\\views\\components\\dropdowns\\DropdownSizes.js":"752","D:\\Utecho\\Scaff-cert\\src\\views\\components\\divider\\DividerPosition.js":"753","D:\\Utecho\\Scaff-cert\\src\\views\\components\\dropdowns\\DropdownFlat.js":"754","D:\\Utecho\\Scaff-cert\\src\\views\\components\\divider\\DividerDefault.js":"755","D:\\Utecho\\Scaff-cert\\src\\views\\components\\divider\\DividerSourceCode.js":"756","D:\\Utecho\\Scaff-cert\\src\\views\\components\\divider\\DividerColors.js":"757","D:\\Utecho\\Scaff-cert\\src\\views\\components\\divider\\DividerIcons.js":"758","D:\\Utecho\\Scaff-cert\\src\\views\\components\\divider\\DividerText.js":"759","D:\\Utecho\\Scaff-cert\\src\\views\\components\\divider\\DividerStyle.js":"760","D:\\Utecho\\Scaff-cert\\src\\views\\components\\modal\\ModalSourceCode.js":"761","D:\\Utecho\\Scaff-cert\\src\\views\\components\\modal\\ModalFormAndScroll.js":"762","D:\\Utecho\\Scaff-cert\\src\\views\\components\\modal\\ModalEvents.js":"763","D:\\Utecho\\Scaff-cert\\src\\views\\components\\modal\\ModalUnmount.js":"764","D:\\Utecho\\Scaff-cert\\src\\views\\components\\modal\\ModalThemes.js":"765","D:\\Utecho\\Scaff-cert\\src\\views\\components\\modal\\ModalSizes.js":"766","D:\\Utecho\\Scaff-cert\\src\\views\\components\\modal\\ModalBasic.js":"767","D:\\Utecho\\Scaff-cert\\src\\views\\components\\offcanvas\\OffCanvasPlacement.js":"768","D:\\Utecho\\Scaff-cert\\src\\views\\components\\offcanvas\\OffCanvasOptions.js":"769","D:\\Utecho\\Scaff-cert\\src\\views\\components\\offcanvas\\OffCanvasSourceCode.js":"770","D:\\Utecho\\Scaff-cert\\src\\views\\components\\navComponent\\NavComponentSourceCode.js":"771","D:\\Utecho\\Scaff-cert\\src\\views\\components\\navComponent\\NavVerticalBorder.js":"772","D:\\Utecho\\Scaff-cert\\src\\views\\components\\navComponent\\NavSquareBorder.js":"773","D:\\Utecho\\Scaff-cert\\src\\views\\components\\navComponent\\NavVertical.js":"774","D:\\Utecho\\Scaff-cert\\src\\views\\components\\navComponent\\NavCenter.js":"775","D:\\Utecho\\Scaff-cert\\src\\views\\components\\navComponent\\NavDivider.js":"776","D:\\Utecho\\Scaff-cert\\src\\views\\components\\navComponent\\NavBorder.js":"777","D:\\Utecho\\Scaff-cert\\src\\views\\components\\navComponent\\NavBasic.js":"778","D:\\Utecho\\Scaff-cert\\src\\views\\components\\navComponent\\NavEnd.js":"779","D:\\Utecho\\Scaff-cert\\src\\@core\\components\\spinner\\Loading-spinner.js":"780","D:\\Utecho\\Scaff-cert\\src\\views\\components\\pagination\\PaginationSourceCode.js":"781","D:\\Utecho\\Scaff-cert\\src\\views\\components\\pagination\\PaginationPositions.js":"782","D:\\Utecho\\Scaff-cert\\src\\views\\components\\pagination\\PaginationIconsAndText.js":"783","D:\\Utecho\\Scaff-cert\\src\\views\\components\\pagination\\PaginationSeparated.js":"784","D:\\Utecho\\Scaff-cert\\src\\views\\components\\pagination\\PaginationWarning.js":"785","D:\\Utecho\\Scaff-cert\\src\\views\\components\\pagination\\PaginationSuccess.js":"786","D:\\Utecho\\Scaff-cert\\src\\views\\components\\pagination\\PaginationDanger.js":"787","D:\\Utecho\\Scaff-cert\\src\\views\\components\\pagination\\PaginationSizes.js":"788","D:\\Utecho\\Scaff-cert\\src\\views\\components\\pagination\\PaginationBasic.js":"789","D:\\Utecho\\Scaff-cert\\src\\views\\components\\pagination\\PaginationIcons.js":"790","D:\\Utecho\\Scaff-cert\\src\\views\\components\\pagination\\PaginationInfo.js":"791","D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabPills\\PillsFilled.js":"792","D:\\Utecho\\Scaff-cert\\src\\views\\components\\badgePills\\BadgePillGlow.js":"793","D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabPills\\PillsVertical.js":"794","D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabPills\\PillsBasic.js":"795","D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabPills\\PillThemes.js":"796","D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabPills\\PillsCentered.js":"797","D:\\Utecho\\Scaff-cert\\src\\views\\components\\breadcrumbs\\BreadCrumbsSourceCode.js":"798","D:\\Utecho\\Scaff-cert\\src\\views\\components\\breadcrumbs\\BreadcrumbAlignment.js":"799","D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabPills\\PillsEnd.js":"800","D:\\Utecho\\Scaff-cert\\src\\views\\components\\breadcrumbs\\BreadcrumbStyles.js":"801","D:\\Utecho\\Scaff-cert\\src\\views\\tables\\data-tables\\basic\\TableMultilingual.js":"802","D:\\Utecho\\Scaff-cert\\src\\views\\tables\\data-tables\\basic\\TableWithButtons.js":"803","D:\\Utecho\\Scaff-cert\\src\\views\\tables\\data-tables\\basic\\TableExpandable.js":"804","D:\\Utecho\\Scaff-cert\\src\\views\\tables\\data-tables\\basic\\TableZeroConfig.js":"805","D:\\Utecho\\Scaff-cert\\src\\views\\tables\\reactstrap\\TableStripedDark.js":"806","D:\\Utecho\\Scaff-cert\\src\\views\\tables\\reactstrap\\TableSourceCode.js":"807","D:\\Utecho\\Scaff-cert\\src\\views\\tables\\reactstrap\\TableTheadLight.js":"808","D:\\Utecho\\Scaff-cert\\src\\views\\tables\\reactstrap\\TableResponsive.js":"809","D:\\Utecho\\Scaff-cert\\src\\views\\tables\\reactstrap\\TableContextual.js":"810","D:\\Utecho\\Scaff-cert\\src\\views\\tables\\reactstrap\\TableBorderless.js":"811","D:\\Utecho\\Scaff-cert\\src\\views\\tables\\reactstrap\\TableBordered.js":"812","D:\\Utecho\\Scaff-cert\\src\\views\\tables\\reactstrap\\TableTheadDark.js":"813","D:\\Utecho\\Scaff-cert\\src\\views\\tables\\reactstrap\\TableStriped.js":"814","D:\\Utecho\\Scaff-cert\\src\\views\\tables\\reactstrap\\TableSmall.js":"815","D:\\Utecho\\Scaff-cert\\src\\views\\tables\\reactstrap\\TableHover.js":"816","D:\\Utecho\\Scaff-cert\\src\\views\\tables\\reactstrap\\TableBasic.js":"817","D:\\Utecho\\Scaff-cert\\src\\views\\tables\\reactstrap\\TableDark.js":"818","D:\\Utecho\\Scaff-cert\\src\\views\\components\\popovers\\PopoverSourceCode.js":"819","D:\\Utecho\\Scaff-cert\\src\\views\\components\\popovers\\PopoverUncontrolled.js":"820","D:\\Utecho\\Scaff-cert\\src\\views\\components\\popovers\\PopoverPositions.js":"821","D:\\Utecho\\Scaff-cert\\src\\views\\components\\progress\\ProgressAnimated.js":"822","D:\\Utecho\\Scaff-cert\\src\\views\\components\\popovers\\PopoverControlled.js":"823","D:\\Utecho\\Scaff-cert\\src\\views\\components\\popovers\\PopoverTriggers.js":"824","D:\\Utecho\\Scaff-cert\\src\\views\\components\\progress\\ProgressLabeled.js":"825","D:\\Utecho\\Scaff-cert\\src\\views\\components\\progress\\ProgressStriped.js":"826","D:\\Utecho\\Scaff-cert\\src\\views\\components\\progress\\ProgressColored.js":"827","D:\\Utecho\\Scaff-cert\\src\\views\\components\\progress\\ProgressBasic.js":"828","D:\\Utecho\\Scaff-cert\\src\\views\\components\\spinners\\SpinnerColors.js":"829","D:\\Utecho\\Scaff-cert\\src\\views\\components\\spinners\\SpinnerButtons.js":"830","D:\\Utecho\\Scaff-cert\\src\\views\\components\\spinners\\SpinnerGrowingColored.js":"831","D:\\Utecho\\Scaff-cert\\src\\views\\components\\spinners\\SpinnerSizes.js":"832","D:\\Utecho\\Scaff-cert\\src\\views\\components\\spinners\\SpinnerTextAlignment.js":"833","D:\\Utecho\\Scaff-cert\\src\\views\\components\\spinners\\SpinnerBorder.js":"834","D:\\Utecho\\Scaff-cert\\src\\views\\components\\spinners\\SpinnerFloat.js":"835","D:\\Utecho\\Scaff-cert\\src\\views\\components\\spinners\\SpinnerFlex.js":"836","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\page-layouts\\BoxedLayout.js":"837","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\page-layouts\\WithoutMenu.js":"838","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\page-layouts\\LayoutEmpty.js":"839","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\page-layouts\\CollapsedMenu.js":"840","D:\\Utecho\\Scaff-cert\\src\\views\\tables\\data-tables\\basic\\AddNewModal.js":"841","D:\\Utecho\\Scaff-cert\\src\\views\\charts\\chart-js\\index.js":"842","D:\\Utecho\\Scaff-cert\\src\\views\\charts\\apex\\index.js":"843","D:\\Utecho\\Scaff-cert\\src\\views\\charts\\chart-js\\ChartjsRadarChart.js":"844","D:\\Utecho\\Scaff-cert\\src\\views\\charts\\chart-js\\ChartjsBubbleChart.js":"845","D:\\Utecho\\Scaff-cert\\src\\views\\charts\\chart-js\\ChartjsAreaChart.js":"846","D:\\Utecho\\Scaff-cert\\src\\views\\charts\\chart-js\\ChartjsDoughnutChart.js":"847","D:\\Utecho\\Scaff-cert\\src\\views\\charts\\chart-js\\ChartjsHorizontalBar.js":"848","D:\\Utecho\\Scaff-cert\\src\\views\\charts\\chart-js\\ChartjsScatterChart.js":"849","D:\\Utecho\\Scaff-cert\\src\\views\\charts\\chart-js\\ChartjsPolarAreaChart.js":"850","D:\\Utecho\\Scaff-cert\\src\\views\\charts\\apex\\ApexBarChart.js":"851","D:\\Utecho\\Scaff-cert\\src\\views\\charts\\apex\\ApexRadarChart.js":"852","D:\\Utecho\\Scaff-cert\\src\\views\\charts\\apex\\ApexLineChart.js":"853","D:\\Utecho\\Scaff-cert\\src\\views\\charts\\apex\\ApexAreaCharts.js":"854","D:\\Utecho\\Scaff-cert\\src\\views\\charts\\apex\\ApexDonutChart.js":"855","D:\\Utecho\\Scaff-cert\\src\\views\\charts\\apex\\ApexColumnCharts.js":"856","D:\\Utecho\\Scaff-cert\\src\\views\\charts\\apex\\ApexHeatmapChart.js":"857","D:\\Utecho\\Scaff-cert\\src\\views\\charts\\apex\\ApexScatterCharts.js":"858","D:\\Utecho\\Scaff-cert\\src\\views\\charts\\apex\\ApexRadialbar.js":"859","D:\\Utecho\\Scaff-cert\\src\\views\\charts\\apex\\ApexCandlestickChart.js":"860","D:\\Utecho\\Scaff-cert\\src\\views\\dashboard\\ecommerce\\index.js":"861","D:\\Utecho\\Scaff-cert\\src\\views\\dashboard\\ecommerce\\CompanyTable.js":"862"},{"size":1572,"mtime":1699440343816,"results":"863","hashOfConfig":"864"},{"size":372,"mtime":1702020689952,"results":"865","hashOfConfig":"864"},{"size":5021,"mtime":1699440343821,"results":"866","hashOfConfig":"864"},{"size":317,"mtime":1699440343821,"results":"867","hashOfConfig":"864"},{"size":540,"mtime":1699440343811,"results":"868","hashOfConfig":"864"},{"size":1567,"mtime":1699440343821,"results":"869","hashOfConfig":"864"},{"size":336,"mtime":1699440343821,"results":"870","hashOfConfig":"864"},{"size":479,"mtime":1699440343567,"results":"871","hashOfConfig":"864"},{"size":621,"mtime":1699440343612,"results":"872","hashOfConfig":"864"},{"size":779,"mtime":1699440343811,"results":"873","hashOfConfig":"864"},{"size":1788,"mtime":1699440343567,"results":"874","hashOfConfig":"864"},{"size":804,"mtime":1699440343821,"results":"875","hashOfConfig":"864"},{"size":8039,"mtime":1699440343821,"results":"876","hashOfConfig":"864"},{"size":146,"mtime":1699440343811,"results":"877","hashOfConfig":"864"},{"size":135,"mtime":1699440343612,"results":"878","hashOfConfig":"864"},{"size":11913,"mtime":1699440343612,"results":"879","hashOfConfig":"864"},{"size":14095,"mtime":1699440343612,"results":"880","hashOfConfig":"864"},{"size":3067,"mtime":1699440343612,"results":"881","hashOfConfig":"864"},{"size":7303,"mtime":1699440343612,"results":"882","hashOfConfig":"864"},{"size":9379,"mtime":1699440343612,"results":"883","hashOfConfig":"864"},{"size":9652,"mtime":1699440343607,"results":"884","hashOfConfig":"864"},{"size":1292,"mtime":1699440343612,"results":"885","hashOfConfig":"864"},{"size":39190,"mtime":1699440343607,"results":"886","hashOfConfig":"864"},{"size":30138,"mtime":1699440343607,"results":"887","hashOfConfig":"864"},{"size":4443,"mtime":1699440343607,"results":"888","hashOfConfig":"864"},{"size":14595,"mtime":1699440343607,"results":"889","hashOfConfig":"864"},{"size":4989,"mtime":1699440343607,"results":"890","hashOfConfig":"864"},{"size":21865,"mtime":1699440343607,"results":"891","hashOfConfig":"864"},{"size":23149,"mtime":1699440343607,"results":"892","hashOfConfig":"864"},{"size":32160,"mtime":1699440343612,"results":"893","hashOfConfig":"864"},{"size":26223,"mtime":1699440343612,"results":"894","hashOfConfig":"864"},{"size":2617,"mtime":1699440343607,"results":"895","hashOfConfig":"864"},{"size":2389,"mtime":1699440343612,"results":"896","hashOfConfig":"864"},{"size":8352,"mtime":1699440343607,"results":"897","hashOfConfig":"864"},{"size":1779,"mtime":1699440343821,"results":"898","hashOfConfig":"864"},{"size":2969,"mtime":1699440343821,"results":"899","hashOfConfig":"864"},{"size":1577,"mtime":1699440343821,"results":"900","hashOfConfig":"864"},{"size":3224,"mtime":1699440343821,"results":"901","hashOfConfig":"864"},{"size":435,"mtime":1699440343826,"results":"902","hashOfConfig":"864"},{"size":1844,"mtime":1699440343821,"results":"903","hashOfConfig":"864"},{"size":851,"mtime":1699440343567,"results":"904","hashOfConfig":"864"},{"size":557,"mtime":1699440343816,"results":"905","hashOfConfig":"864"},{"size":565,"mtime":1699440343816,"results":"906","hashOfConfig":"864"},{"size":1202,"mtime":1699440343941,"results":"907","hashOfConfig":"864"},{"size":4208,"mtime":1699440343941,"results":"908","hashOfConfig":"864"},{"size":4378,"mtime":1699440343612,"results":"909","hashOfConfig":"864"},{"size":1020,"mtime":1699440343612,"results":"910","hashOfConfig":"864"},{"size":839,"mtime":1699440343821,"results":"911","hashOfConfig":"864"},{"size":2563,"mtime":1699440343567,"results":"912","hashOfConfig":"864"},{"size":1025,"mtime":1699440343811,"results":"913","hashOfConfig":"864"},{"size":1971,"mtime":1699440343841,"results":"914","hashOfConfig":"864"},{"size":1180,"mtime":1699440343836,"results":"915","hashOfConfig":"864"},{"size":1846,"mtime":1699440343841,"results":"916","hashOfConfig":"864"},{"size":2750,"mtime":1699440343831,"results":"917","hashOfConfig":"864"},{"size":1658,"mtime":1699440343826,"results":"918","hashOfConfig":"864"},{"size":3959,"mtime":1699440343831,"results":"919","hashOfConfig":"864"},{"size":2100,"mtime":1699440343836,"results":"920","hashOfConfig":"864"},{"size":2990,"mtime":1699440343826,"results":"921","hashOfConfig":"864"},{"size":913,"mtime":1699440343946,"results":"922","hashOfConfig":"864"},{"size":7192,"mtime":1699440343567,"results":"923","hashOfConfig":"864"},{"size":7760,"mtime":1699440343567,"results":"924","hashOfConfig":"864"},{"size":960,"mtime":1699440343826,"results":"925","hashOfConfig":"864"},{"size":146,"mtime":1699440343811,"results":"926","hashOfConfig":"864"},{"size":961,"mtime":1699440343821,"results":"927","hashOfConfig":"864"},{"size":376,"mtime":1699440343821,"results":"928","hashOfConfig":"864"},{"size":410,"mtime":1699440343821,"results":"929","hashOfConfig":"864"},{"size":2087,"mtime":1699440343821,"results":"930","hashOfConfig":"864"},{"size":3954,"mtime":1699440343821,"results":"931","hashOfConfig":"864"},{"size":441,"mtime":1699440343821,"results":"932","hashOfConfig":"864"},{"size":5534,"mtime":1699440343821,"results":"933","hashOfConfig":"864"},{"size":2094,"mtime":1699440343821,"results":"934","hashOfConfig":"864"},{"size":399,"mtime":1699440343816,"results":"935","hashOfConfig":"864"},{"size":416,"mtime":1699440343816,"results":"936","hashOfConfig":"864"},{"size":12211,"mtime":1699440343821,"results":"937","hashOfConfig":"864"},{"size":411,"mtime":1699440343821,"results":"938","hashOfConfig":"864"},{"size":484,"mtime":1699440343821,"results":"939","hashOfConfig":"864"},{"size":814,"mtime":1699440343821,"results":"940","hashOfConfig":"864"},{"size":411,"mtime":1699440343821,"results":"941","hashOfConfig":"864"},{"size":232,"mtime":1699440343562,"results":"942","hashOfConfig":"864"},{"size":1007,"mtime":1699440343966,"results":"943","hashOfConfig":"864"},{"size":4508,"mtime":1699440343941,"results":"944","hashOfConfig":"864"},{"size":4496,"mtime":1699440343941,"results":"945","hashOfConfig":"864"},{"size":3665,"mtime":1699440343816,"results":"946","hashOfConfig":"864"},{"size":9285,"mtime":1699440343816,"results":"947","hashOfConfig":"864"},{"size":8942,"mtime":1699440343816,"results":"948","hashOfConfig":"864"},{"size":652,"mtime":1699440343816,"results":"949","hashOfConfig":"864"},{"size":1043,"mtime":1699440343572,"results":"950","hashOfConfig":"864"},{"size":648,"mtime":1699440343567,"results":"951","hashOfConfig":"864"},{"size":3438,"mtime":1699440343572,"results":"952","hashOfConfig":"864"},{"size":1104,"mtime":1699440343567,"results":"953","hashOfConfig":"864"},{"size":20646,"mtime":1699440343617,"results":"954","hashOfConfig":"864"},{"size":10139,"mtime":1699440343612,"results":"955","hashOfConfig":"864"},{"size":5017,"mtime":1699440343617,"results":"956","hashOfConfig":"864"},{"size":11346,"mtime":1699440343562,"results":"957","hashOfConfig":"864"},{"size":1491,"mtime":1699440343572,"results":"958","hashOfConfig":"864"},{"size":3323,"mtime":1699440343562,"results":"959","hashOfConfig":"864"},{"size":6422,"mtime":1699440343891,"results":"960","hashOfConfig":"864"},{"size":2199,"mtime":1699440343846,"results":"961","hashOfConfig":"864"},{"size":3121,"mtime":1699440343891,"results":"962","hashOfConfig":"864"},{"size":1602,"mtime":1699440343886,"results":"963","hashOfConfig":"864"},{"size":2072,"mtime":1699440343886,"results":"964","hashOfConfig":"864"},{"size":698,"mtime":1699440343886,"results":"965","hashOfConfig":"864"},{"size":2409,"mtime":1699440343886,"results":"966","hashOfConfig":"864"},{"size":792,"mtime":1699440343946,"results":"967","hashOfConfig":"864"},{"size":790,"mtime":1699440343921,"results":"968","hashOfConfig":"864"},{"size":567,"mtime":1699440343836,"results":"969","hashOfConfig":"864"},{"size":746,"mtime":1699440343836,"results":"970","hashOfConfig":"864"},{"size":1724,"mtime":1699440343841,"results":"971","hashOfConfig":"864"},{"size":1721,"mtime":1699440343841,"results":"972","hashOfConfig":"864"},{"size":2236,"mtime":1699440343826,"results":"973","hashOfConfig":"864"},{"size":1959,"mtime":1699440343826,"results":"974","hashOfConfig":"864"},{"size":4336,"mtime":1699440343831,"results":"975","hashOfConfig":"864"},{"size":1035,"mtime":1699440343572,"results":"976","hashOfConfig":"864"},{"size":1082,"mtime":1699440343572,"results":"977","hashOfConfig":"864"},{"size":921,"mtime":1699440343572,"results":"978","hashOfConfig":"864"},{"size":1644,"mtime":1699440343831,"results":"979","hashOfConfig":"864"},{"size":493,"mtime":1699440343562,"results":"980","hashOfConfig":"864"},{"size":5263,"mtime":1699440343946,"results":"981","hashOfConfig":"864"},{"size":10646,"mtime":1699440343946,"results":"982","hashOfConfig":"864"},{"size":2435,"mtime":1699440343886,"results":"983","hashOfConfig":"864"},{"size":24920,"mtime":1699440343886,"results":"984","hashOfConfig":"864"},{"size":4329,"mtime":1699440343886,"results":"985","hashOfConfig":"864"},{"size":2432,"mtime":1699440343886,"results":"986","hashOfConfig":"864"},{"size":3848,"mtime":1699440343886,"results":"987","hashOfConfig":"864"},{"size":4318,"mtime":1699440343886,"results":"988","hashOfConfig":"864"},{"size":3678,"mtime":1699440343886,"results":"989","hashOfConfig":"864"},{"size":3281,"mtime":1699440343886,"results":"990","hashOfConfig":"864"},{"size":3835,"mtime":1699440343886,"results":"991","hashOfConfig":"864"},{"size":499,"mtime":1699440343886,"results":"992","hashOfConfig":"864"},{"size":499,"mtime":1699440343886,"results":"993","hashOfConfig":"864"},{"size":2443,"mtime":1699440343886,"results":"994","hashOfConfig":"864"},{"size":492,"mtime":1699440343886,"results":"995","hashOfConfig":"864"},{"size":639,"mtime":1699440343886,"results":"996","hashOfConfig":"864"},{"size":1090,"mtime":1699440343886,"results":"997","hashOfConfig":"864"},{"size":2064,"mtime":1699440343831,"results":"998","hashOfConfig":"864"},{"size":625,"mtime":1699440343831,"results":"999","hashOfConfig":"864"},{"size":8980,"mtime":1699440343836,"results":"1000","hashOfConfig":"864"},{"size":12537,"mtime":1699440343836,"results":"1001","hashOfConfig":"864"},{"size":7696,"mtime":1699440343826,"results":"1002","hashOfConfig":"864"},{"size":4703,"mtime":1699440343826,"results":"1003","hashOfConfig":"864"},{"size":7201,"mtime":1699440343826,"results":"1004","hashOfConfig":"864"},{"size":3090,"mtime":1699440343572,"results":"1005","hashOfConfig":"864"},{"size":348,"mtime":1699440343572,"results":"1006","hashOfConfig":"864"},{"size":5889,"mtime":1699440343572,"results":"1007","hashOfConfig":"864"},{"size":2245,"mtime":1699440343572,"results":"1008","hashOfConfig":"864"},{"size":4149,"mtime":1699440343831,"results":"1009","hashOfConfig":"864"},{"size":8678,"mtime":1699440343831,"results":"1010","hashOfConfig":"864"},{"size":3871,"mtime":1699440343572,"results":"1011","hashOfConfig":"864"},{"size":1969,"mtime":1699440343572,"results":"1012","hashOfConfig":"864"},{"size":3801,"mtime":1699440343826,"results":"1013","hashOfConfig":"864"},{"size":5960,"mtime":1699440343826,"results":"1014","hashOfConfig":"864"},{"size":1291,"mtime":1699440343826,"results":"1015","hashOfConfig":"864"},{"size":14859,"mtime":1699440343841,"results":"1016","hashOfConfig":"864"},{"size":3634,"mtime":1699440343562,"results":"1017","hashOfConfig":"864"},{"size":1442,"mtime":1699440343562,"results":"1018","hashOfConfig":"864"},{"size":5059,"mtime":1699440343841,"results":"1019","hashOfConfig":"864"},{"size":2505,"mtime":1699440343841,"results":"1020","hashOfConfig":"864"},{"size":8597,"mtime":1699440343946,"results":"1021","hashOfConfig":"864"},{"size":14830,"mtime":1699440343841,"results":"1022","hashOfConfig":"864"},{"size":12217,"mtime":1699440343886,"results":"1023","hashOfConfig":"864"},{"size":11655,"mtime":1699440343836,"results":"1024","hashOfConfig":"864"},{"size":7506,"mtime":1699440343836,"results":"1025","hashOfConfig":"864"},{"size":3582,"mtime":1699440343567,"results":"1026","hashOfConfig":"864"},{"size":647,"mtime":1699440343861,"results":"1027","hashOfConfig":"864"},{"size":1490,"mtime":1699440343836,"results":"1028","hashOfConfig":"864"},{"size":2275,"mtime":1699440343831,"results":"1029","hashOfConfig":"864"},{"size":19268,"mtime":1699440343831,"results":"1030","hashOfConfig":"864"},{"size":2508,"mtime":1699440343831,"results":"1031","hashOfConfig":"864"},{"size":13227,"mtime":1699440343831,"results":"1032","hashOfConfig":"864"},{"size":1501,"mtime":1699440343567,"results":"1033","hashOfConfig":"864"},{"size":3868,"mtime":1699440343921,"results":"1034","hashOfConfig":"864"},{"size":2609,"mtime":1699440343836,"results":"1035","hashOfConfig":"864"},{"size":2500,"mtime":1699440343836,"results":"1036","hashOfConfig":"864"},{"size":5828,"mtime":1699440343886,"results":"1037","hashOfConfig":"864"},{"size":2909,"mtime":1699440343886,"results":"1038","hashOfConfig":"864"},{"size":5072,"mtime":1699440343886,"results":"1039","hashOfConfig":"864"},{"size":2924,"mtime":1699440343921,"results":"1040","hashOfConfig":"864"},{"size":2234,"mtime":1699440343846,"results":"1041","hashOfConfig":"864"},{"size":3412,"mtime":1699440343846,"results":"1042","hashOfConfig":"864"},{"size":4577,"mtime":1699440343846,"results":"1043","hashOfConfig":"864"},{"size":2317,"mtime":1699440343846,"results":"1044","hashOfConfig":"864"},{"size":2935,"mtime":1699440343846,"results":"1045","hashOfConfig":"864"},{"size":4752,"mtime":1699440343846,"results":"1046","hashOfConfig":"864"},{"size":903,"mtime":1699440343831,"results":"1047","hashOfConfig":"864"},{"size":3353,"mtime":1699440343831,"results":"1048","hashOfConfig":"864"},{"size":4934,"mtime":1699440343831,"results":"1049","hashOfConfig":"864"},{"size":2825,"mtime":1699440343956,"results":"1050","hashOfConfig":"864"},{"size":2915,"mtime":1699440343956,"results":"1051","hashOfConfig":"864"},{"size":3734,"mtime":1699440343956,"results":"1052","hashOfConfig":"864"},{"size":852,"mtime":1699440343961,"results":"1053","hashOfConfig":"864"},{"size":1172,"mtime":1699440343951,"results":"1054","hashOfConfig":"864"},{"size":1616,"mtime":1699440343961,"results":"1055","hashOfConfig":"864"},{"size":1634,"mtime":1699440343961,"results":"1056","hashOfConfig":"864"},{"size":3845,"mtime":1699440343841,"results":"1057","hashOfConfig":"864"},{"size":2298,"mtime":1699440343841,"results":"1058","hashOfConfig":"864"},{"size":2098,"mtime":1699440343567,"results":"1059","hashOfConfig":"864"},{"size":1801,"mtime":1699440343841,"results":"1060","hashOfConfig":"864"},{"size":426,"mtime":1699440343841,"results":"1061","hashOfConfig":"864"},{"size":12678,"mtime":1699440343841,"results":"1062","hashOfConfig":"864"},{"size":4865,"mtime":1699440343841,"results":"1063","hashOfConfig":"864"},{"size":4076,"mtime":1699440343841,"results":"1064","hashOfConfig":"864"},{"size":830,"mtime":1699440343562,"results":"1065","hashOfConfig":"864"},{"size":3637,"mtime":1699440343836,"results":"1066","hashOfConfig":"864"},{"size":3826,"mtime":1699440343562,"results":"1067","hashOfConfig":"864"},{"size":5164,"mtime":1699440343841,"results":"1068","hashOfConfig":"864"},{"size":8765,"mtime":1699440343841,"results":"1069","hashOfConfig":"864"},{"size":1514,"mtime":1699440343567,"results":"1070","hashOfConfig":"864"},{"size":5972,"mtime":1699440343841,"results":"1071","hashOfConfig":"864"},{"size":3250,"mtime":1699440343841,"results":"1072","hashOfConfig":"864"},{"size":641,"mtime":1699440343567,"results":"1073","hashOfConfig":"864"},{"size":2503,"mtime":1699440343567,"results":"1074","hashOfConfig":"864"},{"size":10726,"mtime":1699440343841,"results":"1075","hashOfConfig":"864"},{"size":9705,"mtime":1699440343841,"results":"1076","hashOfConfig":"864"},{"size":1759,"mtime":1699440343562,"results":"1077","hashOfConfig":"864"},{"size":3613,"mtime":1699440343956,"results":"1078","hashOfConfig":"864"},{"size":2549,"mtime":1699440343951,"results":"1079","hashOfConfig":"864"},{"size":4046,"mtime":1699440343956,"results":"1080","hashOfConfig":"864"},{"size":1576,"mtime":1699440343567,"results":"1081","hashOfConfig":"864"},{"size":3397,"mtime":1699440343956,"results":"1082","hashOfConfig":"864"},{"size":2922,"mtime":1699440343562,"results":"1083","hashOfConfig":"864"},{"size":7252,"mtime":1699440343836,"results":"1084","hashOfConfig":"864"},{"size":6166,"mtime":1699440343836,"results":"1085","hashOfConfig":"864"},{"size":3711,"mtime":1699440343622,"results":"1086","hashOfConfig":"864"},{"size":166,"mtime":1699440343881,"results":"1087","hashOfConfig":"864"},{"size":1888,"mtime":1699440343572,"results":"1088","hashOfConfig":"864"},{"size":8275,"mtime":1699440343572,"results":"1089","hashOfConfig":"864"},{"size":2940,"mtime":1699440343622,"results":"1090","hashOfConfig":"864"},{"size":5794,"mtime":1699440343617,"results":"1091","hashOfConfig":"864"},{"size":14886,"mtime":1699440343617,"results":"1092","hashOfConfig":"864"},{"size":17908,"mtime":1699440343617,"results":"1093","hashOfConfig":"864"},{"size":5772,"mtime":1699440343617,"results":"1094","hashOfConfig":"864"},{"size":730,"mtime":1699440343961,"results":"1095","hashOfConfig":"864"},{"size":779,"mtime":1699440343961,"results":"1096","hashOfConfig":"864"},{"size":721,"mtime":1699440343961,"results":"1097","hashOfConfig":"864"},{"size":8089,"mtime":1699440343612,"results":"1098","hashOfConfig":"864"},{"size":3344,"mtime":1699440343612,"results":"1099","hashOfConfig":"864"},{"size":3395,"mtime":1699440343642,"results":"1100","hashOfConfig":"864"},{"size":6774,"mtime":1699440343642,"results":"1101","hashOfConfig":"864"},{"size":1815,"mtime":1699440343647,"results":"1102","hashOfConfig":"864"},{"size":3508,"mtime":1699440343642,"results":"1103","hashOfConfig":"864"},{"size":5187,"mtime":1699440343647,"results":"1104","hashOfConfig":"864"},{"size":6488,"mtime":1699440343642,"results":"1105","hashOfConfig":"864"},{"size":3428,"mtime":1699440343642,"results":"1106","hashOfConfig":"864"},{"size":4293,"mtime":1699440343642,"results":"1107","hashOfConfig":"864"},{"size":6062,"mtime":1699440343642,"results":"1108","hashOfConfig":"864"},{"size":12270,"mtime":1699440343617,"results":"1109","hashOfConfig":"864"},{"size":12600,"mtime":1699440343617,"results":"1110","hashOfConfig":"864"},{"size":34743,"mtime":1699440343617,"results":"1111","hashOfConfig":"864"},{"size":5560,"mtime":1699440343647,"results":"1112","hashOfConfig":"864"},{"size":12736,"mtime":1699440343622,"results":"1113","hashOfConfig":"864"},{"size":3292,"mtime":1699440343617,"results":"1114","hashOfConfig":"864"},{"size":18111,"mtime":1699441808764,"results":"1115","hashOfConfig":"864"},{"size":33036,"mtime":1699440343617,"results":"1116","hashOfConfig":"864"},{"size":22802,"mtime":1699440343617,"results":"1117","hashOfConfig":"864"},{"size":37721,"mtime":1699440343617,"results":"1118","hashOfConfig":"864"},{"size":5593,"mtime":1699440343617,"results":"1119","hashOfConfig":"864"},{"size":37653,"mtime":1702023296103,"results":"1120","hashOfConfig":"864"},{"size":10370,"mtime":1699440343617,"results":"1121","hashOfConfig":"864"},{"size":9543,"mtime":1699440343617,"results":"1122","hashOfConfig":"864"},{"size":1601,"mtime":1699440343617,"results":"1123","hashOfConfig":"864"},{"size":19767,"mtime":1699440343612,"results":"1124","hashOfConfig":"864"},{"size":36198,"mtime":1699511635615,"results":"1125","hashOfConfig":"864"},{"size":5488,"mtime":1699440343931,"results":"1126","hashOfConfig":"864"},{"size":906,"mtime":1699440343816,"results":"1127","hashOfConfig":"864"},{"size":1608,"mtime":1699440343816,"results":"1128","hashOfConfig":"864"},{"size":653,"mtime":1699440343816,"results":"1129","hashOfConfig":"864"},{"size":2830,"mtime":1699440343816,"results":"1130","hashOfConfig":"864"},{"size":9457,"mtime":1699440343816,"results":"1131","hashOfConfig":"864"},{"size":3431,"mtime":1699440343836,"results":"1132","hashOfConfig":"864"},{"size":2550,"mtime":1699440343831,"results":"1133","hashOfConfig":"864"},{"size":3904,"mtime":1699440343826,"results":"1134","hashOfConfig":"864"},{"size":2685,"mtime":1699440343826,"results":"1135","hashOfConfig":"864"},{"size":4409,"mtime":1699440343816,"results":"1136","hashOfConfig":"864"},{"size":10971,"mtime":1702019292790,"results":"1137","hashOfConfig":"864"},{"size":2163,"mtime":1699440343836,"results":"1138","hashOfConfig":"864"},{"size":592,"mtime":1699440343816,"results":"1139","hashOfConfig":"864"},{"size":508,"mtime":1699440343816,"results":"1140","hashOfConfig":"864"},{"size":1868,"mtime":1699440343816,"results":"1141","hashOfConfig":"864"},{"size":8805,"mtime":1699440343816,"results":"1142","hashOfConfig":"864"},{"size":3310,"mtime":1699440343816,"results":"1143","hashOfConfig":"864"},{"size":5045,"mtime":1699440343936,"results":"1144","hashOfConfig":"864"},{"size":6198,"mtime":1699440343936,"results":"1145","hashOfConfig":"864"},{"size":4612,"mtime":1699440343936,"results":"1146","hashOfConfig":"864"},{"size":5031,"mtime":1699440343931,"results":"1147","hashOfConfig":"864"},{"size":5710,"mtime":1699440343936,"results":"1148","hashOfConfig":"864"},{"size":5787,"mtime":1699440343931,"results":"1149","hashOfConfig":"864"},{"size":10617,"mtime":1699440343936,"results":"1150","hashOfConfig":"864"},{"size":5360,"mtime":1699440343936,"results":"1151","hashOfConfig":"864"},{"size":5813,"mtime":1699440343936,"results":"1152","hashOfConfig":"864"},{"size":6639,"mtime":1699440343936,"results":"1153","hashOfConfig":"864"},{"size":7088,"mtime":1699440343936,"results":"1154","hashOfConfig":"864"},{"size":6741,"mtime":1699440343936,"results":"1155","hashOfConfig":"864"},{"size":2437,"mtime":1699440343936,"results":"1156","hashOfConfig":"864"},{"size":3314,"mtime":1699440343936,"results":"1157","hashOfConfig":"864"},{"size":2189,"mtime":1699440343936,"results":"1158","hashOfConfig":"864"},{"size":6458,"mtime":1699440343931,"results":"1159","hashOfConfig":"864"},{"size":1065,"mtime":1699440343926,"results":"1160","hashOfConfig":"864"},{"size":1146,"mtime":1699440343921,"results":"1161","hashOfConfig":"864"},{"size":944,"mtime":1699440343926,"results":"1162","hashOfConfig":"864"},{"size":1341,"mtime":1699440343941,"results":"1163","hashOfConfig":"864"},{"size":1423,"mtime":1699440343941,"results":"1164","hashOfConfig":"864"},{"size":2186,"mtime":1699440343931,"results":"1165","hashOfConfig":"864"},{"size":5982,"mtime":1699440343936,"results":"1166","hashOfConfig":"864"},{"size":6287,"mtime":1699440343931,"results":"1167","hashOfConfig":"864"},{"size":1148,"mtime":1699440343936,"results":"1168","hashOfConfig":"864"},{"size":2869,"mtime":1699440343946,"results":"1169","hashOfConfig":"864"},{"size":1085,"mtime":1699440343911,"results":"1170","hashOfConfig":"864"},{"size":1004,"mtime":1699440343921,"results":"1171","hashOfConfig":"864"},{"size":854,"mtime":1699440343906,"results":"1172","hashOfConfig":"864"},{"size":1507,"mtime":1699440343916,"results":"1173","hashOfConfig":"864"},{"size":795,"mtime":1699440343921,"results":"1174","hashOfConfig":"864"},{"size":700,"mtime":1699440343906,"results":"1175","hashOfConfig":"864"},{"size":844,"mtime":1699440343921,"results":"1176","hashOfConfig":"864"},{"size":668,"mtime":1699440343916,"results":"1177","hashOfConfig":"864"},{"size":2147,"mtime":1699440343911,"results":"1178","hashOfConfig":"864"},{"size":1154,"mtime":1699440343916,"results":"1179","hashOfConfig":"864"},{"size":8256,"mtime":1699440343936,"results":"1180","hashOfConfig":"864"},{"size":10123,"mtime":1699440343936,"results":"1181","hashOfConfig":"864"},{"size":2253,"mtime":1699440343911,"results":"1182","hashOfConfig":"864"},{"size":2037,"mtime":1699440343906,"results":"1183","hashOfConfig":"864"},{"size":6401,"mtime":1699440343936,"results":"1184","hashOfConfig":"864"},{"size":3429,"mtime":1699440343846,"results":"1185","hashOfConfig":"864"},{"size":2362,"mtime":1699440343846,"results":"1186","hashOfConfig":"864"},{"size":1045,"mtime":1699440343836,"results":"1187","hashOfConfig":"864"},{"size":10206,"mtime":1699440343836,"results":"1188","hashOfConfig":"864"},{"size":1390,"mtime":1699440343936,"results":"1189","hashOfConfig":"864"},{"size":12232,"mtime":1699440343826,"results":"1190","hashOfConfig":"864"},{"size":3246,"mtime":1699440343826,"results":"1191","hashOfConfig":"864"},{"size":8208,"mtime":1699440343826,"results":"1192","hashOfConfig":"864"},{"size":5095,"mtime":1699440343826,"results":"1193","hashOfConfig":"864"},{"size":7077,"mtime":1699440343831,"results":"1194","hashOfConfig":"864"},{"size":15953,"mtime":1699440343826,"results":"1195","hashOfConfig":"864"},{"size":3348,"mtime":1699440343826,"results":"1196","hashOfConfig":"864"},{"size":9820,"mtime":1699440343831,"results":"1197","hashOfConfig":"864"},{"size":12972,"mtime":1699440343836,"results":"1198","hashOfConfig":"864"},{"size":6323,"mtime":1699440343836,"results":"1199","hashOfConfig":"864"},{"size":7288,"mtime":1699440343836,"results":"1200","hashOfConfig":"864"},{"size":5777,"mtime":1699440343647,"results":"1201","hashOfConfig":"864"},{"size":14647,"mtime":1699440343642,"results":"1202","hashOfConfig":"864"},{"size":5957,"mtime":1699440343642,"results":"1203","hashOfConfig":"864"},{"size":441,"mtime":1699440343647,"results":"1204","hashOfConfig":"864"},{"size":6178,"mtime":1699440343647,"results":"1205","hashOfConfig":"864"},{"size":1426,"mtime":1699440343946,"results":"1206","hashOfConfig":"864"},{"size":693,"mtime":1699440343946,"results":"1207","hashOfConfig":"864"},{"size":1328,"mtime":1699440343941,"results":"1208","hashOfConfig":"864"},{"size":2987,"mtime":1699440343941,"results":"1209","hashOfConfig":"864"},{"size":1767,"mtime":1699440343946,"results":"1210","hashOfConfig":"864"},{"size":877,"mtime":1699440343941,"results":"1211","hashOfConfig":"864"},{"size":2205,"mtime":1699440343946,"results":"1212","hashOfConfig":"864"},{"size":5524,"mtime":1699440343946,"results":"1213","hashOfConfig":"864"},{"size":1488,"mtime":1699440343936,"results":"1214","hashOfConfig":"864"},{"size":3535,"mtime":1699440343936,"results":"1215","hashOfConfig":"864"},{"size":956,"mtime":1699440343906,"results":"1216","hashOfConfig":"864"},{"size":705,"mtime":1699440343906,"results":"1217","hashOfConfig":"864"},{"size":769,"mtime":1699440343906,"results":"1218","hashOfConfig":"864"},{"size":676,"mtime":1699440343906,"results":"1219","hashOfConfig":"864"},{"size":641,"mtime":1699440343906,"results":"1220","hashOfConfig":"864"},{"size":774,"mtime":1699440343906,"results":"1221","hashOfConfig":"864"},{"size":595,"mtime":1699440343906,"results":"1222","hashOfConfig":"864"},{"size":739,"mtime":1699440343906,"results":"1223","hashOfConfig":"864"},{"size":643,"mtime":1699440343911,"results":"1224","hashOfConfig":"864"},{"size":574,"mtime":1699440343911,"results":"1225","hashOfConfig":"864"},{"size":540,"mtime":1699440343911,"results":"1226","hashOfConfig":"864"},{"size":492,"mtime":1699440343911,"results":"1227","hashOfConfig":"864"},{"size":515,"mtime":1699440343911,"results":"1228","hashOfConfig":"864"},{"size":505,"mtime":1699440343911,"results":"1229","hashOfConfig":"864"},{"size":493,"mtime":1699440343911,"results":"1230","hashOfConfig":"864"},{"size":511,"mtime":1699440343911,"results":"1231","hashOfConfig":"864"},{"size":721,"mtime":1699440343911,"results":"1232","hashOfConfig":"864"},{"size":1715,"mtime":1699440343916,"results":"1233","hashOfConfig":"864"},{"size":1205,"mtime":1699440343916,"results":"1234","hashOfConfig":"864"},{"size":1213,"mtime":1699440343916,"results":"1235","hashOfConfig":"864"},{"size":2173,"mtime":1699440343916,"results":"1236","hashOfConfig":"864"},{"size":8845,"mtime":1699440343911,"results":"1237","hashOfConfig":"864"},{"size":1294,"mtime":1699440343916,"results":"1238","hashOfConfig":"864"},{"size":895,"mtime":1699440343916,"results":"1239","hashOfConfig":"864"},{"size":2702,"mtime":1699440343911,"results":"1240","hashOfConfig":"864"},{"size":1748,"mtime":1699440343911,"results":"1241","hashOfConfig":"864"},{"size":821,"mtime":1699440343911,"results":"1242","hashOfConfig":"864"},{"size":1341,"mtime":1699440343911,"results":"1243","hashOfConfig":"864"},{"size":1473,"mtime":1699440343911,"results":"1244","hashOfConfig":"864"},{"size":659,"mtime":1699440343911,"results":"1245","hashOfConfig":"864"},{"size":1477,"mtime":1699440343916,"results":"1246","hashOfConfig":"864"},{"size":2106,"mtime":1699440343916,"results":"1247","hashOfConfig":"864"},{"size":917,"mtime":1699440343921,"results":"1248","hashOfConfig":"864"},{"size":1259,"mtime":1699440343921,"results":"1249","hashOfConfig":"864"},{"size":2180,"mtime":1699440343906,"results":"1250","hashOfConfig":"864"},{"size":1442,"mtime":1699440343906,"results":"1251","hashOfConfig":"864"},{"size":1014,"mtime":1699440343921,"results":"1252","hashOfConfig":"864"},{"size":3040,"mtime":1699440343921,"results":"1253","hashOfConfig":"864"},{"size":581,"mtime":1699440343921,"results":"1254","hashOfConfig":"864"},{"size":1609,"mtime":1699440343916,"results":"1255","hashOfConfig":"864"},{"size":3860,"mtime":1699440343921,"results":"1256","hashOfConfig":"864"},{"size":1239,"mtime":1699440343916,"results":"1257","hashOfConfig":"864"},{"size":816,"mtime":1699440343916,"results":"1258","hashOfConfig":"864"},{"size":1542,"mtime":1699440343916,"results":"1259","hashOfConfig":"864"},{"size":1108,"mtime":1699440343916,"results":"1260","hashOfConfig":"864"},{"size":832,"mtime":1699440343916,"results":"1261","hashOfConfig":"864"},{"size":1182,"mtime":1699440343916,"results":"1262","hashOfConfig":"864"},{"size":451,"mtime":1699440343906,"results":"1263","hashOfConfig":"864"},{"size":1208,"mtime":1699440343567,"results":"1264","hashOfConfig":"864"},{"size":9267,"mtime":1699440343831,"results":"1265","hashOfConfig":"864"},{"size":15018,"mtime":1699440343831,"results":"1266","hashOfConfig":"864"},{"size":3334,"mtime":1699440343831,"results":"1267","hashOfConfig":"864"},{"size":689,"mtime":1699440343906,"results":"1268","hashOfConfig":"864"},{"size":1914,"mtime":1699440343916,"results":"1269","hashOfConfig":"864"},{"size":9164,"mtime":1699440343916,"results":"1270","hashOfConfig":"864"},{"size":1466,"mtime":1699440343921,"results":"1271","hashOfConfig":"864"},{"size":3894,"mtime":1699440343911,"results":"1272","hashOfConfig":"864"},{"size":2880,"mtime":1699440343916,"results":"1273","hashOfConfig":"864"},{"size":3244,"mtime":1699440343906,"results":"1274","hashOfConfig":"864"},{"size":1286,"mtime":1699440343936,"results":"1275","hashOfConfig":"864"},{"size":3545,"mtime":1699440343911,"results":"1276","hashOfConfig":"864"},{"size":3287,"mtime":1699440343936,"results":"1277","hashOfConfig":"864"},{"size":2989,"mtime":1699440343931,"results":"1278","hashOfConfig":"864"},{"size":5206,"mtime":1699440343931,"results":"1279","hashOfConfig":"864"},{"size":5682,"mtime":1699440343931,"results":"1280","hashOfConfig":"864"},{"size":12283,"mtime":1699440343926,"results":"1281","hashOfConfig":"864"},{"size":510,"mtime":1699440343931,"results":"1282","hashOfConfig":"864"},{"size":1487,"mtime":1699440343931,"results":"1283","hashOfConfig":"864"},{"size":7169,"mtime":1699440343941,"results":"1284","hashOfConfig":"864"},{"size":8475,"mtime":1699440343941,"results":"1285","hashOfConfig":"864"},{"size":6787,"mtime":1699440343941,"results":"1286","hashOfConfig":"864"},{"size":2942,"mtime":1699440343941,"results":"1287","hashOfConfig":"864"},{"size":3284,"mtime":1699440343941,"results":"1288","hashOfConfig":"864"},{"size":5029,"mtime":1699440343941,"results":"1289","hashOfConfig":"864"},{"size":934,"mtime":1699440343941,"results":"1290","hashOfConfig":"864"},{"size":8154,"mtime":1699440343941,"results":"1291","hashOfConfig":"864"},{"size":6696,"mtime":1699440343941,"results":"1292","hashOfConfig":"864"},{"size":3240,"mtime":1699440343941,"results":"1293","hashOfConfig":"864"},{"size":1167,"mtime":1699440343941,"results":"1294","hashOfConfig":"864"},{"size":1066,"mtime":1699440343941,"results":"1295","hashOfConfig":"864"},{"size":1782,"mtime":1699440343926,"results":"1296","hashOfConfig":"864"},{"size":1395,"mtime":1699440343926,"results":"1297","hashOfConfig":"864"},{"size":1533,"mtime":1699440343926,"results":"1298","hashOfConfig":"864"},{"size":1762,"mtime":1699440343926,"results":"1299","hashOfConfig":"864"},{"size":3231,"mtime":1699440343921,"results":"1300","hashOfConfig":"864"},{"size":2483,"mtime":1699440343921,"results":"1301","hashOfConfig":"864"},{"size":3216,"mtime":1699440343921,"results":"1302","hashOfConfig":"864"},{"size":2220,"mtime":1699440343921,"results":"1303","hashOfConfig":"864"},{"size":2285,"mtime":1699440343921,"results":"1304","hashOfConfig":"864"},{"size":5631,"mtime":1699440343926,"results":"1305","hashOfConfig":"864"},{"size":4934,"mtime":1699440343926,"results":"1306","hashOfConfig":"864"},{"size":4696,"mtime":1699440343921,"results":"1307","hashOfConfig":"864"},{"size":3913,"mtime":1699440343921,"results":"1308","hashOfConfig":"864"},{"size":5926,"mtime":1699440343642,"results":"1309","hashOfConfig":"864"},{"size":1983,"mtime":1699440343931,"results":"1310","hashOfConfig":"864"},{"size":3585,"mtime":1699440343931,"results":"1311","hashOfConfig":"864"},{"size":9081,"mtime":1699440343931,"results":"1312","hashOfConfig":"864"},{"size":5851,"mtime":1699440343931,"results":"1313","hashOfConfig":"864"},{"size":5472,"mtime":1699440343926,"results":"1314","hashOfConfig":"864"},{"size":4343,"mtime":1699440343941,"results":"1315","hashOfConfig":"864"},{"size":4261,"mtime":1699440343941,"results":"1316","hashOfConfig":"864"},{"size":3551,"mtime":1699440343941,"results":"1317","hashOfConfig":"864"},{"size":3381,"mtime":1699440343941,"results":"1318","hashOfConfig":"864"},{"size":1154,"mtime":1699440343941,"results":"1319","hashOfConfig":"864"},{"size":3069,"mtime":1699440343931,"results":"1320","hashOfConfig":"864"},{"size":14388,"mtime":1699440343931,"results":"1321","hashOfConfig":"864"},{"size":7410,"mtime":1699440343931,"results":"1322","hashOfConfig":"864"},{"size":3027,"mtime":1699440343926,"results":"1323","hashOfConfig":"864"},{"size":2507,"mtime":1699440343926,"results":"1324","hashOfConfig":"864"},{"size":2464,"mtime":1699440343926,"results":"1325","hashOfConfig":"864"},{"size":3504,"mtime":1699440343926,"results":"1326","hashOfConfig":"864"},{"size":2260,"mtime":1699440343926,"results":"1327","hashOfConfig":"864"},{"size":4294,"mtime":1699440343926,"results":"1328","hashOfConfig":"864"},{"size":4548,"mtime":1699440343926,"results":"1329","hashOfConfig":"864"},{"size":3983,"mtime":1699440343926,"results":"1330","hashOfConfig":"864"},{"size":3988,"mtime":1699440343926,"results":"1331","hashOfConfig":"864"},{"size":5934,"mtime":1699440343612,"results":"1332","hashOfConfig":"864"},{"size":11112,"mtime":1699440343961,"results":"1333","hashOfConfig":"864"},{"size":5447,"mtime":1699440343572,"results":"1334","hashOfConfig":"864"},{"size":3608,"mtime":1699440343572,"results":"1335","hashOfConfig":"864"},{"size":11445,"mtime":1699440343931,"results":"1336","hashOfConfig":"864"},{"size":2139,"mtime":1699440343572,"results":"1337","hashOfConfig":"864"},{"size":8574,"mtime":1699440343891,"results":"1338","hashOfConfig":"864"},{"size":7110,"mtime":1699440343891,"results":"1339","hashOfConfig":"864"},{"size":6137,"mtime":1699440343891,"results":"1340","hashOfConfig":"864"},{"size":3963,"mtime":1699440343881,"results":"1341","hashOfConfig":"864"},{"size":15875,"mtime":1699440343961,"results":"1342","hashOfConfig":"864"},{"size":8934,"mtime":1699440343961,"results":"1343","hashOfConfig":"864"},{"size":10146,"mtime":1699440343961,"results":"1344","hashOfConfig":"864"},{"size":9177,"mtime":1699440343961,"results":"1345","hashOfConfig":"864"},{"size":9549,"mtime":1699440343961,"results":"1346","hashOfConfig":"864"},{"size":11075,"mtime":1699440343562,"results":"1347","hashOfConfig":"864"},{"size":2783,"mtime":1699440343881,"results":"1348","hashOfConfig":"864"},{"size":2510,"mtime":1699440343881,"results":"1349","hashOfConfig":"864"},{"size":5486,"mtime":1699440343951,"results":"1350","hashOfConfig":"864"},{"size":1166,"mtime":1699440343946,"results":"1351","hashOfConfig":"864"},{"size":2153,"mtime":1699440343886,"results":"1352","hashOfConfig":"864"},{"size":3102,"mtime":1699440343856,"results":"1353","hashOfConfig":"864"},{"size":1949,"mtime":1699440343861,"results":"1354","hashOfConfig":"864"},{"size":4434,"mtime":1699440343876,"results":"1355","hashOfConfig":"864"},{"size":3650,"mtime":1699440343876,"results":"1356","hashOfConfig":"864"},{"size":1182,"mtime":1699440343876,"results":"1357","hashOfConfig":"864"},{"size":2790,"mtime":1699440343871,"results":"1358","hashOfConfig":"864"},{"size":2896,"mtime":1699440343866,"results":"1359","hashOfConfig":"864"},{"size":4680,"mtime":1699440343871,"results":"1360","hashOfConfig":"864"},{"size":5527,"mtime":1699440343871,"results":"1361","hashOfConfig":"864"},{"size":1545,"mtime":1699440343866,"results":"1362","hashOfConfig":"864"},{"size":5093,"mtime":1699440343861,"results":"1363","hashOfConfig":"864"},{"size":2983,"mtime":1699440343861,"results":"1364","hashOfConfig":"864"},{"size":1040,"mtime":1699440343856,"results":"1365","hashOfConfig":"864"},{"size":2734,"mtime":1699440343856,"results":"1366","hashOfConfig":"864"},{"size":2219,"mtime":1699440343851,"results":"1367","hashOfConfig":"864"},{"size":4242,"mtime":1699440343856,"results":"1368","hashOfConfig":"864"},{"size":3240,"mtime":1699440343851,"results":"1369","hashOfConfig":"864"},{"size":2808,"mtime":1699440343851,"results":"1370","hashOfConfig":"864"},{"size":3459,"mtime":1699440343956,"results":"1371","hashOfConfig":"864"},{"size":4119,"mtime":1699440343951,"results":"1372","hashOfConfig":"864"},{"size":5486,"mtime":1699440343961,"results":"1373","hashOfConfig":"864"},{"size":2485,"mtime":1699440343951,"results":"1374","hashOfConfig":"864"},{"size":959,"mtime":1699440343956,"results":"1375","hashOfConfig":"864"},{"size":3950,"mtime":1699440343966,"results":"1376","hashOfConfig":"864"},{"size":3897,"mtime":1699440343961,"results":"1377","hashOfConfig":"864"},{"size":1922,"mtime":1699440343896,"results":"1378","hashOfConfig":"864"},{"size":2414,"mtime":1699440343896,"results":"1379","hashOfConfig":"864"},{"size":1212,"mtime":1699440343891,"results":"1380","hashOfConfig":"864"},{"size":3093,"mtime":1699440343906,"results":"1381","hashOfConfig":"864"},{"size":1344,"mtime":1699440343891,"results":"1382","hashOfConfig":"864"},{"size":919,"mtime":1699440343896,"results":"1383","hashOfConfig":"864"},{"size":2285,"mtime":1699440343891,"results":"1384","hashOfConfig":"864"},{"size":3115,"mtime":1699440343906,"results":"1385","hashOfConfig":"864"},{"size":1260,"mtime":1699440343891,"results":"1386","hashOfConfig":"864"},{"size":4327,"mtime":1699440343881,"results":"1387","hashOfConfig":"864"},{"size":1135,"mtime":1699440343821,"results":"1388","hashOfConfig":"864"},{"size":449,"mtime":1699440343881,"results":"1389","hashOfConfig":"864"},{"size":4264,"mtime":1699440343881,"results":"1390","hashOfConfig":"864"},{"size":2078,"mtime":1699440343946,"results":"1391","hashOfConfig":"864"},{"size":2863,"mtime":1699440343881,"results":"1392","hashOfConfig":"864"},{"size":22008,"mtime":1699440343886,"results":"1393","hashOfConfig":"864"},{"size":4163,"mtime":1699440343856,"results":"1394","hashOfConfig":"864"},{"size":685,"mtime":1699440343856,"results":"1395","hashOfConfig":"864"},{"size":869,"mtime":1699440343856,"results":"1396","hashOfConfig":"864"},{"size":648,"mtime":1699440343856,"results":"1397","hashOfConfig":"864"},{"size":356,"mtime":1699440343856,"results":"1398","hashOfConfig":"864"},{"size":251,"mtime":1699440343856,"results":"1399","hashOfConfig":"864"},{"size":5368,"mtime":1699440343856,"results":"1400","hashOfConfig":"864"},{"size":812,"mtime":1699440343856,"results":"1401","hashOfConfig":"864"},{"size":435,"mtime":1699440343851,"results":"1402","hashOfConfig":"864"},{"size":6397,"mtime":1699440343851,"results":"1403","hashOfConfig":"864"},{"size":569,"mtime":1699440343851,"results":"1404","hashOfConfig":"864"},{"size":2260,"mtime":1699440343851,"results":"1405","hashOfConfig":"864"},{"size":410,"mtime":1699440343851,"results":"1406","hashOfConfig":"864"},{"size":1215,"mtime":1699440343851,"results":"1407","hashOfConfig":"864"},{"size":557,"mtime":1699440343851,"results":"1408","hashOfConfig":"864"},{"size":579,"mtime":1699440343851,"results":"1409","hashOfConfig":"864"},{"size":1829,"mtime":1699440343851,"results":"1410","hashOfConfig":"864"},{"size":528,"mtime":1699440343856,"results":"1411","hashOfConfig":"864"},{"size":2372,"mtime":1699440343851,"results":"1412","hashOfConfig":"864"},{"size":1992,"mtime":1699440343851,"results":"1413","hashOfConfig":"864"},{"size":2816,"mtime":1699440343851,"results":"1414","hashOfConfig":"864"},{"size":4518,"mtime":1699440343956,"results":"1415","hashOfConfig":"864"},{"size":2114,"mtime":1699440343961,"results":"1416","hashOfConfig":"864"},{"size":1682,"mtime":1699440343956,"results":"1417","hashOfConfig":"864"},{"size":1583,"mtime":1699440343961,"results":"1418","hashOfConfig":"864"},{"size":1734,"mtime":1699440343956,"results":"1419","hashOfConfig":"864"},{"size":2402,"mtime":1699440343901,"results":"1420","hashOfConfig":"864"},{"size":8329,"mtime":1699440343951,"results":"1421","hashOfConfig":"864"},{"size":904,"mtime":1699440343567,"results":"1422","hashOfConfig":"864"},{"size":2041,"mtime":1699440343951,"results":"1423","hashOfConfig":"864"},{"size":7486,"mtime":1699440343951,"results":"1424","hashOfConfig":"864"},{"size":786,"mtime":1699440343966,"results":"1425","hashOfConfig":"864"},{"size":2331,"mtime":1699440343966,"results":"1426","hashOfConfig":"864"},{"size":2335,"mtime":1699440343966,"results":"1427","hashOfConfig":"864"},{"size":1863,"mtime":1699440343966,"results":"1428","hashOfConfig":"864"},{"size":1551,"mtime":1699440343966,"results":"1429","hashOfConfig":"864"},{"size":804,"mtime":1699440343966,"results":"1430","hashOfConfig":"864"},{"size":1021,"mtime":1699440343906,"results":"1431","hashOfConfig":"864"},{"size":1452,"mtime":1699440343901,"results":"1432","hashOfConfig":"864"},{"size":8301,"mtime":1699440343896,"results":"1433","hashOfConfig":"864"},{"size":6169,"mtime":1699440343896,"results":"1434","hashOfConfig":"864"},{"size":590,"mtime":1699440343896,"results":"1435","hashOfConfig":"864"},{"size":1971,"mtime":1699440343961,"results":"1436","hashOfConfig":"864"},{"size":1491,"mtime":1699440343891,"results":"1437","hashOfConfig":"864"},{"size":1473,"mtime":1699440343891,"results":"1438","hashOfConfig":"864"},{"size":2580,"mtime":1699440343891,"results":"1439","hashOfConfig":"864"},{"size":1472,"mtime":1699440343891,"results":"1440","hashOfConfig":"864"},{"size":2776,"mtime":1699440343891,"results":"1441","hashOfConfig":"864"},{"size":5654,"mtime":1699440343891,"results":"1442","hashOfConfig":"864"},{"size":5888,"mtime":1699440343891,"results":"1443","hashOfConfig":"864"},{"size":2911,"mtime":1699440343891,"results":"1444","hashOfConfig":"864"},{"size":2030,"mtime":1699440343891,"results":"1445","hashOfConfig":"864"},{"size":3175,"mtime":1699440343891,"results":"1446","hashOfConfig":"864"},{"size":1917,"mtime":1699440343891,"results":"1447","hashOfConfig":"864"},{"size":2037,"mtime":1699440343901,"results":"1448","hashOfConfig":"864"},{"size":1967,"mtime":1699440343901,"results":"1449","hashOfConfig":"864"},{"size":1523,"mtime":1699440343901,"results":"1450","hashOfConfig":"864"},{"size":1478,"mtime":1699440343901,"results":"1451","hashOfConfig":"864"},{"size":1502,"mtime":1699440343901,"results":"1452","hashOfConfig":"864"},{"size":2567,"mtime":1699440343906,"results":"1453","hashOfConfig":"864"},{"size":2425,"mtime":1699440343901,"results":"1454","hashOfConfig":"864"},{"size":1414,"mtime":1699440343901,"results":"1455","hashOfConfig":"864"},{"size":1483,"mtime":1699440343901,"results":"1456","hashOfConfig":"864"},{"size":1815,"mtime":1699440343901,"results":"1457","hashOfConfig":"864"},{"size":1627,"mtime":1699440343906,"results":"1458","hashOfConfig":"864"},{"size":2793,"mtime":1699440343901,"results":"1459","hashOfConfig":"864"},{"size":1490,"mtime":1699440343901,"results":"1460","hashOfConfig":"864"},{"size":2513,"mtime":1699440343906,"results":"1461","hashOfConfig":"864"},{"size":2308,"mtime":1699440343901,"results":"1462","hashOfConfig":"864"},{"size":1453,"mtime":1699440343901,"results":"1463","hashOfConfig":"864"},{"size":736,"mtime":1699440343896,"results":"1464","hashOfConfig":"864"},{"size":1300,"mtime":1699440343896,"results":"1465","hashOfConfig":"864"},{"size":895,"mtime":1699440343896,"results":"1466","hashOfConfig":"864"},{"size":723,"mtime":1699440343896,"results":"1467","hashOfConfig":"864"},{"size":4009,"mtime":1699440343562,"results":"1468","hashOfConfig":"864"},{"size":662,"mtime":1699440343896,"results":"1469","hashOfConfig":"864"},{"size":1260,"mtime":1699440343896,"results":"1470","hashOfConfig":"864"},{"size":1203,"mtime":1699440343896,"results":"1471","hashOfConfig":"864"},{"size":694,"mtime":1699440343896,"results":"1472","hashOfConfig":"864"},{"size":1299,"mtime":1699440343896,"results":"1473","hashOfConfig":"864"},{"size":2749,"mtime":1699440343896,"results":"1474","hashOfConfig":"864"},{"size":1067,"mtime":1699440343896,"results":"1475","hashOfConfig":"864"},{"size":1070,"mtime":1699440343896,"results":"1476","hashOfConfig":"864"},{"size":1064,"mtime":1699440343896,"results":"1477","hashOfConfig":"864"},{"size":1070,"mtime":1699440343896,"results":"1478","hashOfConfig":"864"},{"size":2519,"mtime":1699440343896,"results":"1479","hashOfConfig":"864"},{"size":1069,"mtime":1699440343891,"results":"1480","hashOfConfig":"864"},{"size":1056,"mtime":1699440343896,"results":"1481","hashOfConfig":"864"},{"size":1047,"mtime":1699440343896,"results":"1482","hashOfConfig":"864"},{"size":1875,"mtime":1699440343966,"results":"1483","hashOfConfig":"864"},{"size":1268,"mtime":1699440343966,"results":"1484","hashOfConfig":"864"},{"size":1557,"mtime":1699440343966,"results":"1485","hashOfConfig":"864"},{"size":943,"mtime":1699440343567,"results":"1486","hashOfConfig":"864"},{"size":1375,"mtime":1699440343567,"results":"1487","hashOfConfig":"864"},{"size":1500,"mtime":1699440343966,"results":"1488","hashOfConfig":"864"},{"size":1452,"mtime":1699440343966,"results":"1489","hashOfConfig":"864"},{"size":1953,"mtime":1699440343966,"results":"1490","hashOfConfig":"864"},{"size":2755,"mtime":1699440343901,"results":"1491","hashOfConfig":"864"},{"size":2157,"mtime":1699440343901,"results":"1492","hashOfConfig":"864"},{"size":2768,"mtime":1699440343901,"results":"1493","hashOfConfig":"864"},{"size":2982,"mtime":1699440343901,"results":"1494","hashOfConfig":"864"},{"size":3568,"mtime":1699440343901,"results":"1495","hashOfConfig":"864"},{"size":2635,"mtime":1699440343901,"results":"1496","hashOfConfig":"864"},{"size":3515,"mtime":1699440343906,"results":"1497","hashOfConfig":"864"},{"size":3434,"mtime":1699440343906,"results":"1498","hashOfConfig":"864"},{"size":2843,"mtime":1699440343906,"results":"1499","hashOfConfig":"864"},{"size":909,"mtime":1699440343901,"results":"1500","hashOfConfig":"864"},{"size":5182,"mtime":1699440343906,"results":"1501","hashOfConfig":"864"},{"size":785,"mtime":1699440343901,"results":"1502","hashOfConfig":"864"},{"size":751,"mtime":1699440343896,"results":"1503","hashOfConfig":"864"},{"size":813,"mtime":1699440343901,"results":"1504","hashOfConfig":"864"},{"size":7387,"mtime":1699440343901,"results":"1505","hashOfConfig":"864"},{"size":795,"mtime":1699440343901,"results":"1506","hashOfConfig":"864"},{"size":927,"mtime":1699440343896,"results":"1507","hashOfConfig":"864"},{"size":955,"mtime":1699440343901,"results":"1508","hashOfConfig":"864"},{"size":1530,"mtime":1699440343896,"results":"1509","hashOfConfig":"864"},{"size":1561,"mtime":1699440343896,"results":"1510","hashOfConfig":"864"},{"size":1449,"mtime":1699440343966,"results":"1511","hashOfConfig":"864"},{"size":716,"mtime":1699440343901,"results":"1512","hashOfConfig":"864"},{"size":1089,"mtime":1699440343966,"results":"1513","hashOfConfig":"864"},{"size":1395,"mtime":1699440343966,"results":"1514","hashOfConfig":"864"},{"size":1338,"mtime":1699440343966,"results":"1515","hashOfConfig":"864"},{"size":1625,"mtime":1699440343966,"results":"1516","hashOfConfig":"864"},{"size":4761,"mtime":1699440343956,"results":"1517","hashOfConfig":"864"},{"size":3706,"mtime":1699440343956,"results":"1518","hashOfConfig":"864"},{"size":2185,"mtime":1699440343956,"results":"1519","hashOfConfig":"864"},{"size":1681,"mtime":1699440343956,"results":"1520","hashOfConfig":"864"},{"size":4364,"mtime":1699440343956,"results":"1521","hashOfConfig":"864"},{"size":467,"mtime":1699440343956,"results":"1522","hashOfConfig":"864"},{"size":3190,"mtime":1699440343951,"results":"1523","hashOfConfig":"864"},{"size":2484,"mtime":1699440343956,"results":"1524","hashOfConfig":"864"},{"size":2265,"mtime":1699440343956,"results":"1525","hashOfConfig":"864"},{"size":2037,"mtime":1699440343951,"results":"1526","hashOfConfig":"864"},{"size":1440,"mtime":1699440343951,"results":"1527","hashOfConfig":"864"},{"size":2154,"mtime":1699440343951,"results":"1528","hashOfConfig":"864"},{"size":2799,"mtime":1699440343951,"results":"1529","hashOfConfig":"864"},{"size":753,"mtime":1699440343951,"results":"1530","hashOfConfig":"864"},{"size":6359,"mtime":1699440343951,"results":"1531","hashOfConfig":"864"},{"size":1821,"mtime":1699440343951,"results":"1532","hashOfConfig":"864"},{"size":2057,"mtime":1699440343961,"results":"1533","hashOfConfig":"864"},{"size":3446,"mtime":1699440343956,"results":"1534","hashOfConfig":"864"},{"size":744,"mtime":1699440343961,"results":"1535","hashOfConfig":"864"},{"size":1716,"mtime":1699440343956,"results":"1536","hashOfConfig":"864"},{"size":2780,"mtime":1699440343956,"results":"1537","hashOfConfig":"864"},{"size":2512,"mtime":1699440343956,"results":"1538","hashOfConfig":"864"},{"size":2831,"mtime":1699440343851,"results":"1539","hashOfConfig":"864"},{"size":2576,"mtime":1699440343956,"results":"1540","hashOfConfig":"864"},{"size":482,"mtime":1699440343851,"results":"1541","hashOfConfig":"864"},{"size":3064,"mtime":1699440343851,"results":"1542","hashOfConfig":"864"},{"size":15155,"mtime":1699440343851,"results":"1543","hashOfConfig":"864"},{"size":622,"mtime":1699440343856,"results":"1544","hashOfConfig":"864"},{"size":665,"mtime":1699440343851,"results":"1545","hashOfConfig":"864"},{"size":533,"mtime":1699440343856,"results":"1546","hashOfConfig":"864"},{"size":865,"mtime":1699440343851,"results":"1547","hashOfConfig":"864"},{"size":463,"mtime":1699440343856,"results":"1548","hashOfConfig":"864"},{"size":813,"mtime":1699440343851,"results":"1549","hashOfConfig":"864"},{"size":7139,"mtime":1699440343851,"results":"1550","hashOfConfig":"864"},{"size":687,"mtime":1699440343856,"results":"1551","hashOfConfig":"864"},{"size":1502,"mtime":1699440343851,"results":"1552","hashOfConfig":"864"},{"size":1921,"mtime":1699440343851,"results":"1553","hashOfConfig":"864"},{"size":801,"mtime":1699440343851,"results":"1554","hashOfConfig":"864"},{"size":735,"mtime":1699440343851,"results":"1555","hashOfConfig":"864"},{"size":4511,"mtime":1699440343856,"results":"1556","hashOfConfig":"864"},{"size":516,"mtime":1699440343856,"results":"1557","hashOfConfig":"864"},{"size":548,"mtime":1699440343856,"results":"1558","hashOfConfig":"864"},{"size":1414,"mtime":1699440343856,"results":"1559","hashOfConfig":"864"},{"size":234,"mtime":1699440343856,"results":"1560","hashOfConfig":"864"},{"size":791,"mtime":1699440343856,"results":"1561","hashOfConfig":"864"},{"size":350,"mtime":1699440343856,"results":"1562","hashOfConfig":"864"},{"size":1334,"mtime":1699440343856,"results":"1563","hashOfConfig":"864"},{"size":1304,"mtime":1699440343856,"results":"1564","hashOfConfig":"864"},{"size":1531,"mtime":1699440343856,"results":"1565","hashOfConfig":"864"},{"size":1246,"mtime":1699440343856,"results":"1566","hashOfConfig":"864"},{"size":7974,"mtime":1699440343861,"results":"1567","hashOfConfig":"864"},{"size":715,"mtime":1699440343861,"results":"1568","hashOfConfig":"864"},{"size":706,"mtime":1699440343861,"results":"1569","hashOfConfig":"864"},{"size":722,"mtime":1699440343861,"results":"1570","hashOfConfig":"864"},{"size":713,"mtime":1699440343861,"results":"1571","hashOfConfig":"864"},{"size":1935,"mtime":1699440343861,"results":"1572","hashOfConfig":"864"},{"size":2699,"mtime":1699440343861,"results":"1573","hashOfConfig":"864"},{"size":13133,"mtime":1699440343861,"results":"1574","hashOfConfig":"864"},{"size":1855,"mtime":1699440343861,"results":"1575","hashOfConfig":"864"},{"size":1313,"mtime":1699440343861,"results":"1576","hashOfConfig":"864"},{"size":576,"mtime":1699440343861,"results":"1577","hashOfConfig":"864"},{"size":594,"mtime":1699440343861,"results":"1578","hashOfConfig":"864"},{"size":809,"mtime":1699440343861,"results":"1579","hashOfConfig":"864"},{"size":625,"mtime":1699440343861,"results":"1580","hashOfConfig":"864"},{"size":1074,"mtime":1699440343861,"results":"1581","hashOfConfig":"864"},{"size":931,"mtime":1699440343861,"results":"1582","hashOfConfig":"864"},{"size":1109,"mtime":1699440343861,"results":"1583","hashOfConfig":"864"},{"size":589,"mtime":1699440343861,"results":"1584","hashOfConfig":"864"},{"size":1096,"mtime":1699440343861,"results":"1585","hashOfConfig":"864"},{"size":898,"mtime":1699440343861,"results":"1586","hashOfConfig":"864"},{"size":5292,"mtime":1699440343866,"results":"1587","hashOfConfig":"864"},{"size":656,"mtime":1699440343861,"results":"1588","hashOfConfig":"864"},{"size":2602,"mtime":1699440343866,"results":"1589","hashOfConfig":"864"},{"size":1653,"mtime":1699440343866,"results":"1590","hashOfConfig":"864"},{"size":13584,"mtime":1699440343871,"results":"1591","hashOfConfig":"864"},{"size":946,"mtime":1699440343866,"results":"1592","hashOfConfig":"864"},{"size":4890,"mtime":1699440343871,"results":"1593","hashOfConfig":"864"},{"size":450,"mtime":1699440343871,"results":"1594","hashOfConfig":"864"},{"size":810,"mtime":1699440343871,"results":"1595","hashOfConfig":"864"},{"size":505,"mtime":1699440343871,"results":"1596","hashOfConfig":"864"},{"size":460,"mtime":1699440343871,"results":"1597","hashOfConfig":"864"},{"size":917,"mtime":1699440343871,"results":"1598","hashOfConfig":"864"},{"size":492,"mtime":1699440343871,"results":"1599","hashOfConfig":"864"},{"size":1849,"mtime":1699440343871,"results":"1600","hashOfConfig":"864"},{"size":933,"mtime":1699440343871,"results":"1601","hashOfConfig":"864"},{"size":522,"mtime":1699440343871,"results":"1602","hashOfConfig":"864"},{"size":1059,"mtime":1699440343871,"results":"1603","hashOfConfig":"864"},{"size":30530,"mtime":1699440343871,"results":"1604","hashOfConfig":"864"},{"size":800,"mtime":1699440343866,"results":"1605","hashOfConfig":"864"},{"size":2067,"mtime":1699440343956,"results":"1606","hashOfConfig":"864"},{"size":1015,"mtime":1699440343866,"results":"1607","hashOfConfig":"864"},{"size":2719,"mtime":1699440343866,"results":"1608","hashOfConfig":"864"},{"size":1857,"mtime":1699440343956,"results":"1609","hashOfConfig":"864"},{"size":4629,"mtime":1699440343866,"results":"1610","hashOfConfig":"864"},{"size":6024,"mtime":1699440343866,"results":"1611","hashOfConfig":"864"},{"size":5153,"mtime":1699440343866,"results":"1612","hashOfConfig":"864"},{"size":5112,"mtime":1699440343866,"results":"1613","hashOfConfig":"864"},{"size":4415,"mtime":1699440343866,"results":"1614","hashOfConfig":"864"},{"size":4990,"mtime":1699440343866,"results":"1615","hashOfConfig":"864"},{"size":759,"mtime":1699440343866,"results":"1616","hashOfConfig":"864"},{"size":4448,"mtime":1699440343866,"results":"1617","hashOfConfig":"864"},{"size":725,"mtime":1699440343866,"results":"1618","hashOfConfig":"864"},{"size":4906,"mtime":1699440343866,"results":"1619","hashOfConfig":"864"},{"size":1073,"mtime":1699440343866,"results":"1620","hashOfConfig":"864"},{"size":1011,"mtime":1699440343866,"results":"1621","hashOfConfig":"864"},{"size":171,"mtime":1699440343866,"results":"1622","hashOfConfig":"864"},{"size":499,"mtime":1699440343866,"results":"1623","hashOfConfig":"864"},{"size":30812,"mtime":1699440343871,"results":"1624","hashOfConfig":"864"},{"size":12502,"mtime":1699440343871,"results":"1625","hashOfConfig":"864"},{"size":2372,"mtime":1699440343871,"results":"1626","hashOfConfig":"864"},{"size":1816,"mtime":1699440343871,"results":"1627","hashOfConfig":"864"},{"size":2320,"mtime":1699440343871,"results":"1628","hashOfConfig":"864"},{"size":6944,"mtime":1699440343871,"results":"1629","hashOfConfig":"864"},{"size":4629,"mtime":1699440343871,"results":"1630","hashOfConfig":"864"},{"size":2915,"mtime":1699440343876,"results":"1631","hashOfConfig":"864"},{"size":3108,"mtime":1699440343876,"results":"1632","hashOfConfig":"864"},{"size":6237,"mtime":1699440343876,"results":"1633","hashOfConfig":"864"},{"size":5522,"mtime":1699440343876,"results":"1634","hashOfConfig":"864"},{"size":599,"mtime":1699440343876,"results":"1635","hashOfConfig":"864"},{"size":609,"mtime":1699440343876,"results":"1636","hashOfConfig":"864"},{"size":563,"mtime":1699440343876,"results":"1637","hashOfConfig":"864"},{"size":585,"mtime":1699440343876,"results":"1638","hashOfConfig":"864"},{"size":695,"mtime":1699440343876,"results":"1639","hashOfConfig":"864"},{"size":574,"mtime":1699440343876,"results":"1640","hashOfConfig":"864"},{"size":548,"mtime":1699440343871,"results":"1641","hashOfConfig":"864"},{"size":576,"mtime":1699440343876,"results":"1642","hashOfConfig":"864"},{"size":338,"mtime":1699440343567,"results":"1643","hashOfConfig":"864"},{"size":15981,"mtime":1699440343876,"results":"1644","hashOfConfig":"864"},{"size":3480,"mtime":1699440343876,"results":"1645","hashOfConfig":"864"},{"size":1654,"mtime":1699440343876,"results":"1646","hashOfConfig":"864"},{"size":1682,"mtime":1699440343876,"results":"1647","hashOfConfig":"864"},{"size":1857,"mtime":1699440343876,"results":"1648","hashOfConfig":"864"},{"size":1857,"mtime":1699440343876,"results":"1649","hashOfConfig":"864"},{"size":1854,"mtime":1699440343876,"results":"1650","hashOfConfig":"864"},{"size":3230,"mtime":1699440343876,"results":"1651","hashOfConfig":"864"},{"size":1360,"mtime":1699440343876,"results":"1652","hashOfConfig":"864"},{"size":1502,"mtime":1699440343876,"results":"1653","hashOfConfig":"864"},{"size":1848,"mtime":1699440343876,"results":"1654","hashOfConfig":"864"},{"size":2850,"mtime":1699440343881,"results":"1655","hashOfConfig":"864"},{"size":834,"mtime":1699440343856,"results":"1656","hashOfConfig":"864"},{"size":2918,"mtime":1699440343881,"results":"1657","hashOfConfig":"864"},{"size":4934,"mtime":1699440343881,"results":"1658","hashOfConfig":"864"},{"size":4126,"mtime":1699440343881,"results":"1659","hashOfConfig":"864"},{"size":2884,"mtime":1699440343881,"results":"1660","hashOfConfig":"864"},{"size":4436,"mtime":1699440343861,"results":"1661","hashOfConfig":"864"},{"size":1646,"mtime":1699440343861,"results":"1662","hashOfConfig":"864"},{"size":2871,"mtime":1699440343881,"results":"1663","hashOfConfig":"864"},{"size":2088,"mtime":1699440343861,"results":"1664","hashOfConfig":"864"},{"size":5497,"mtime":1699440343946,"results":"1665","hashOfConfig":"864"},{"size":8128,"mtime":1699440343946,"results":"1666","hashOfConfig":"864"},{"size":2155,"mtime":1699440343946,"results":"1667","hashOfConfig":"864"},{"size":858,"mtime":1699440343946,"results":"1668","hashOfConfig":"864"},{"size":7369,"mtime":1699440343951,"results":"1669","hashOfConfig":"864"},{"size":86963,"mtime":1699440343951,"results":"1670","hashOfConfig":"864"},{"size":7340,"mtime":1699440343951,"results":"1671","hashOfConfig":"864"},{"size":3716,"mtime":1699440343951,"results":"1672","hashOfConfig":"864"},{"size":16748,"mtime":1699440343946,"results":"1673","hashOfConfig":"864"},{"size":7330,"mtime":1699440343946,"results":"1674","hashOfConfig":"864"},{"size":7325,"mtime":1699440343946,"results":"1675","hashOfConfig":"864"},{"size":7334,"mtime":1699440343951,"results":"1676","hashOfConfig":"864"},{"size":7318,"mtime":1699440343951,"results":"1677","hashOfConfig":"864"},{"size":7310,"mtime":1699440343951,"results":"1678","hashOfConfig":"864"},{"size":7322,"mtime":1699440343951,"results":"1679","hashOfConfig":"864"},{"size":7301,"mtime":1699440343946,"results":"1680","hashOfConfig":"864"},{"size":7352,"mtime":1699440343946,"results":"1681","hashOfConfig":"864"},{"size":5659,"mtime":1699440343876,"results":"1682","hashOfConfig":"864"},{"size":731,"mtime":1699440343881,"results":"1683","hashOfConfig":"864"},{"size":1646,"mtime":1699440343876,"results":"1684","hashOfConfig":"864"},{"size":580,"mtime":1699440343881,"results":"1685","hashOfConfig":"864"},{"size":861,"mtime":1699440343876,"results":"1686","hashOfConfig":"864"},{"size":2050,"mtime":1699440343881,"results":"1687","hashOfConfig":"864"},{"size":811,"mtime":1699440343881,"results":"1688","hashOfConfig":"864"},{"size":533,"mtime":1699440343881,"results":"1689","hashOfConfig":"864"},{"size":619,"mtime":1699440343881,"results":"1690","hashOfConfig":"864"},{"size":745,"mtime":1699440343881,"results":"1691","hashOfConfig":"864"},{"size":475,"mtime":1699440343881,"results":"1692","hashOfConfig":"864"},{"size":730,"mtime":1699440343881,"results":"1693","hashOfConfig":"864"},{"size":579,"mtime":1699440343881,"results":"1694","hashOfConfig":"864"},{"size":601,"mtime":1699440343881,"results":"1695","hashOfConfig":"864"},{"size":227,"mtime":1699440343881,"results":"1696","hashOfConfig":"864"},{"size":152,"mtime":1699440343881,"results":"1697","hashOfConfig":"864"},{"size":177,"mtime":1699440343881,"results":"1698","hashOfConfig":"864"},{"size":477,"mtime":1699440343881,"results":"1699","hashOfConfig":"864"},{"size":1003,"mtime":1699440343961,"results":"1700","hashOfConfig":"864"},{"size":1063,"mtime":1699440343966,"results":"1701","hashOfConfig":"864"},{"size":1010,"mtime":1699440343966,"results":"1702","hashOfConfig":"864"},{"size":1126,"mtime":1699440343966,"results":"1703","hashOfConfig":"864"},{"size":3157,"mtime":1699440343946,"results":"1704","hashOfConfig":"864"},{"size":4434,"mtime":1699440343846,"results":"1705","hashOfConfig":"864"},{"size":2928,"mtime":1699440343846,"results":"1706","hashOfConfig":"864"},{"size":2752,"mtime":1699440343846,"results":"1707","hashOfConfig":"864"},{"size":3118,"mtime":1699440343846,"results":"1708","hashOfConfig":"864"},{"size":3915,"mtime":1699440343846,"results":"1709","hashOfConfig":"864"},{"size":4026,"mtime":1699440343846,"results":"1710","hashOfConfig":"864"},{"size":2734,"mtime":1699440343846,"results":"1711","hashOfConfig":"864"},{"size":6451,"mtime":1699440343846,"results":"1712","hashOfConfig":"864"},{"size":2365,"mtime":1699440343846,"results":"1713","hashOfConfig":"864"},{"size":2071,"mtime":1699440343841,"results":"1714","hashOfConfig":"864"},{"size":1617,"mtime":1699440343846,"results":"1715","hashOfConfig":"864"},{"size":2462,"mtime":1699440343846,"results":"1716","hashOfConfig":"864"},{"size":2814,"mtime":1699440343841,"results":"1717","hashOfConfig":"864"},{"size":2774,"mtime":1699440343846,"results":"1718","hashOfConfig":"864"},{"size":2587,"mtime":1699440343846,"results":"1719","hashOfConfig":"864"},{"size":3182,"mtime":1699440343846,"results":"1720","hashOfConfig":"864"},{"size":3005,"mtime":1699440343846,"results":"1721","hashOfConfig":"864"},{"size":1751,"mtime":1699440343846,"results":"1722","hashOfConfig":"864"},{"size":3356,"mtime":1699440343846,"results":"1723","hashOfConfig":"864"},{"size":2877,"mtime":1699440343891,"results":"1724","hashOfConfig":"864"},{"size":4562,"mtime":1699440343891,"results":"1725","hashOfConfig":"864"},{"filePath":"1726","messages":"1727","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},"tqsw6",{"filePath":"1729","messages":"1730","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1731","messages":"1732","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1733","messages":"1734","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1735","messages":"1736","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1737","usedDeprecatedRules":"1728"},{"filePath":"1738","messages":"1739","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1740","messages":"1741","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1742","messages":"1743","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1744","messages":"1745","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1746","messages":"1747","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1748","messages":"1749","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1750","usedDeprecatedRules":"1728"},{"filePath":"1751","messages":"1752","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1753","messages":"1754","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1755","usedDeprecatedRules":"1728"},{"filePath":"1756","messages":"1757","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1758","messages":"1759","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1760","messages":"1761","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1762","messages":"1763","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1764","messages":"1765","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1766","messages":"1767","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1768","messages":"1769","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1770","messages":"1771","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1772","messages":"1773","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1774","messages":"1775","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1776","messages":"1777","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1778","messages":"1779","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1780","messages":"1781","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1782","messages":"1783","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1784","messages":"1785","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1786","messages":"1787","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1788","messages":"1789","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1790","messages":"1791","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1792","messages":"1793","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1794","messages":"1795","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1796","messages":"1797","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1798","messages":"1799","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1800","usedDeprecatedRules":"1728"},{"filePath":"1801","messages":"1802","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1803","messages":"1804","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1805","messages":"1806","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1807","messages":"1808","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1809","messages":"1810","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1811","messages":"1812","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1813","messages":"1814","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1815","messages":"1816","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1817","messages":"1818","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1819","usedDeprecatedRules":"1728"},{"filePath":"1820","messages":"1821","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1822","messages":"1823","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1824","messages":"1825","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1826","messages":"1827","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1828","messages":"1829","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1830","usedDeprecatedRules":"1728"},{"filePath":"1831","messages":"1832","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1833","messages":"1834","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1835","messages":"1836","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1837","messages":"1838","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1839","messages":"1840","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1841","messages":"1842","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1843","messages":"1844","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1845","messages":"1846","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1847","messages":"1848","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1849","messages":"1850","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1851","messages":"1852","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1853","usedDeprecatedRules":"1728"},{"filePath":"1854","messages":"1855","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1856","usedDeprecatedRules":"1728"},{"filePath":"1857","messages":"1858","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1859","messages":"1860","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1861","messages":"1862","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1863","messages":"1864","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1865","messages":"1866","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1867","messages":"1868","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1869","messages":"1870","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1871","messages":"1872","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1873","messages":"1874","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1875","messages":"1876","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1877","messages":"1878","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1879","usedDeprecatedRules":"1728"},{"filePath":"1880","messages":"1881","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1882","usedDeprecatedRules":"1728"},{"filePath":"1883","messages":"1884","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1885","messages":"1886","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1887","messages":"1888","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1889","messages":"1890","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1891","messages":"1892","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1893","messages":"1894","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1895","messages":"1896","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1897","usedDeprecatedRules":"1728"},{"filePath":"1898","messages":"1899","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1900","messages":"1901","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1902","messages":"1903","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1904","usedDeprecatedRules":"1728"},{"filePath":"1905","messages":"1906","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1907","usedDeprecatedRules":"1728"},{"filePath":"1908","messages":"1909","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1910","usedDeprecatedRules":"1728"},{"filePath":"1911","messages":"1912","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1913","usedDeprecatedRules":"1728"},{"filePath":"1914","messages":"1915","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1916","usedDeprecatedRules":"1728"},{"filePath":"1917","messages":"1918","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1919","usedDeprecatedRules":"1728"},{"filePath":"1920","messages":"1921","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1922","messages":"1923","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1924","usedDeprecatedRules":"1728"},{"filePath":"1925","messages":"1926","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1927","usedDeprecatedRules":"1728"},{"filePath":"1928","messages":"1929","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1930","usedDeprecatedRules":"1728"},{"filePath":"1931","messages":"1932","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1933","usedDeprecatedRules":"1728"},{"filePath":"1934","messages":"1935","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1936","messages":"1937","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1938","messages":"1939","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1940","messages":"1941","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1942","usedDeprecatedRules":"1728"},{"filePath":"1943","messages":"1944","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1945","messages":"1946","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1947","messages":"1948","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1949","messages":"1950","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1951","messages":"1952","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1953","messages":"1954","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1955","messages":"1956","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1957","messages":"1958","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1959","messages":"1960","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1961","messages":"1962","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1963","messages":"1964","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1965","usedDeprecatedRules":"1728"},{"filePath":"1966","messages":"1967","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1968","usedDeprecatedRules":"1728"},{"filePath":"1969","messages":"1970","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1971","usedDeprecatedRules":"1728"},{"filePath":"1972","messages":"1973","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1974","usedDeprecatedRules":"1728"},{"filePath":"1975","messages":"1976","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1977","usedDeprecatedRules":"1728"},{"filePath":"1978","messages":"1979","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1980","messages":"1981","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1982","usedDeprecatedRules":"1728"},{"filePath":"1983","messages":"1984","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1985","messages":"1986","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1987","messages":"1988","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1989","usedDeprecatedRules":"1728"},{"filePath":"1990","messages":"1991","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1992","usedDeprecatedRules":"1728"},{"filePath":"1993","messages":"1994","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1995","messages":"1996","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1997","messages":"1998","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1999","messages":"2000","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2001","messages":"2002","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2003","messages":"2004","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2005","messages":"2006","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2007","messages":"2008","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2009","messages":"2010","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2011","messages":"2012","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2013","messages":"2014","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2015","messages":"2016","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2017","messages":"2018","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2019","messages":"2020","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2021","messages":"2022","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2023","messages":"2024","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2025","messages":"2026","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2027","usedDeprecatedRules":"1728"},{"filePath":"2028","messages":"2029","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2030","messages":"2031","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2032","messages":"2033","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2034","usedDeprecatedRules":"1728"},{"filePath":"2035","messages":"2036","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2037","messages":"2038","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2039","messages":"2040","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2041","messages":"2042","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2043","messages":"2044","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2045","messages":"2046","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2047","usedDeprecatedRules":"1728"},{"filePath":"2048","messages":"2049","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2050","usedDeprecatedRules":"1728"},{"filePath":"2051","messages":"2052","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2053","messages":"2054","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2055","messages":"2056","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2057","usedDeprecatedRules":"1728"},{"filePath":"2058","messages":"2059","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2060","messages":"2061","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2062","messages":"2063","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2064","messages":"2065","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2066","messages":"2067","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2068","messages":"2069","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2070","usedDeprecatedRules":"1728"},{"filePath":"2071","messages":"2072","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2073","messages":"2074","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2075","messages":"2076","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2077","messages":"2078","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2079","messages":"2080","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2081","usedDeprecatedRules":"1728"},{"filePath":"2082","messages":"2083","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2084","messages":"2085","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2086","usedDeprecatedRules":"1728"},{"filePath":"2087","messages":"2088","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2089","usedDeprecatedRules":"1728"},{"filePath":"2090","messages":"2091","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2092","usedDeprecatedRules":"1728"},{"filePath":"2093","messages":"2094","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2095","messages":"2096","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2097","messages":"2098","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2099","messages":"2100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2101","usedDeprecatedRules":"1728"},{"filePath":"2102","messages":"2103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2104","messages":"2105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2106","messages":"2107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2108","messages":"2109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2110","messages":"2111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2112","messages":"2113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2114","messages":"2115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2116","messages":"2117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2118","messages":"2119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2120","messages":"2121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2122","messages":"2123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2124","messages":"2125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2126","messages":"2127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2128","messages":"2129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2130","messages":"2131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2132","messages":"2133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2134","messages":"2135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2136","messages":"2137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2138","messages":"2139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2140","messages":"2141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2142","messages":"2143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2144","messages":"2145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2146","messages":"2147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2148","messages":"2149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2150","messages":"2151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2152","messages":"2153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2154","messages":"2155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2156","messages":"2157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2158","messages":"2159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2160","messages":"2161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2162","messages":"2163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2164","messages":"2165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2166","usedDeprecatedRules":"1728"},{"filePath":"2167","messages":"2168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"2169","usedDeprecatedRules":"1728"},{"filePath":"2170","messages":"2171","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2172","usedDeprecatedRules":"1728"},{"filePath":"2173","messages":"2174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2175","messages":"2176","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2177","usedDeprecatedRules":"1728"},{"filePath":"2178","messages":"2179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2180","messages":"2181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2182","messages":"2183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2184","messages":"2185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2186","messages":"2187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2188","messages":"2189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2190","messages":"2191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2192","messages":"2193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2194","messages":"2195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2196","messages":"2197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2198","messages":"2199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2200","messages":"2201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2202","messages":"2203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2204","messages":"2205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2206","messages":"2207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2208","messages":"2209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2210","messages":"2211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2212","messages":"2213","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2214","usedDeprecatedRules":"1728"},{"filePath":"2215","messages":"2216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2217","messages":"2218","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2219","usedDeprecatedRules":"1728"},{"filePath":"2220","messages":"2221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2222","messages":"2223","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2224","usedDeprecatedRules":"1728"},{"filePath":"2225","messages":"2226","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2227","usedDeprecatedRules":"1728"},{"filePath":"2228","messages":"2229","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2230","usedDeprecatedRules":"1728"},{"filePath":"2231","messages":"2232","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2233","usedDeprecatedRules":"1728"},{"filePath":"2234","messages":"2235","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2236","usedDeprecatedRules":"1728"},{"filePath":"2237","messages":"2238","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2239","usedDeprecatedRules":"1728"},{"filePath":"2240","messages":"2241","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2242","usedDeprecatedRules":"1728"},{"filePath":"2243","messages":"2244","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2245","usedDeprecatedRules":"1728"},{"filePath":"2246","messages":"2247","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2248","usedDeprecatedRules":"1728"},{"filePath":"2249","messages":"2250","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2251","usedDeprecatedRules":"1728"},{"filePath":"2252","messages":"2253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2254","messages":"2255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2256","messages":"2257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2258","messages":"2259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2260","messages":"2261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2262","messages":"2263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2264","messages":"2265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2266","messages":"2267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2268","messages":"2269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2270","messages":"2271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2272","messages":"2273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2274","messages":"2275","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2276","usedDeprecatedRules":"1728"},{"filePath":"2277","messages":"2278","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2279","usedDeprecatedRules":"1728"},{"filePath":"2280","messages":"2281","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2282","usedDeprecatedRules":"1728"},{"filePath":"2283","messages":"2284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2285","messages":"2286","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2287","usedDeprecatedRules":"1728"},{"filePath":"2288","messages":"2289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2290","messages":"2291","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2292","usedDeprecatedRules":"1728"},{"filePath":"2293","messages":"2294","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2295","usedDeprecatedRules":"1728"},{"filePath":"2296","messages":"2297","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2298","usedDeprecatedRules":"1728"},{"filePath":"2299","messages":"2300","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2301","usedDeprecatedRules":"1728"},{"filePath":"2302","messages":"2303","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2304","usedDeprecatedRules":"1728"},{"filePath":"2305","messages":"2306","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2307"},{"filePath":"2308","messages":"2309","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2310","usedDeprecatedRules":"1728"},{"filePath":"2311","messages":"2312","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2313","usedDeprecatedRules":"1728"},{"filePath":"2314","messages":"2315","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2316","usedDeprecatedRules":"1728"},{"filePath":"2317","messages":"2318","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2319","usedDeprecatedRules":"1728"},{"filePath":"2320","messages":"2321","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2322","usedDeprecatedRules":"1728"},{"filePath":"2323","messages":"2324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2325","messages":"2326","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2327","usedDeprecatedRules":"1728"},{"filePath":"2328","messages":"2329","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2330","usedDeprecatedRules":"1728"},{"filePath":"2331","messages":"2332","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2333","usedDeprecatedRules":"1728"},{"filePath":"2334","messages":"2335","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2336","usedDeprecatedRules":"1728"},{"filePath":"2337","messages":"2338","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2339","usedDeprecatedRules":"1728"},{"filePath":"2340","messages":"2341","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2342","usedDeprecatedRules":"1728"},{"filePath":"2343","messages":"2344","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2345","usedDeprecatedRules":"1728"},{"filePath":"2346","messages":"2347","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2348","usedDeprecatedRules":"1728"},{"filePath":"2349","messages":"2350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2351","messages":"2352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2353","messages":"2354","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2355","messages":"2356","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2357","usedDeprecatedRules":"1728"},{"filePath":"2358","messages":"2359","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2360","usedDeprecatedRules":"1728"},{"filePath":"2361","messages":"2362","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2363","usedDeprecatedRules":"1728"},{"filePath":"2364","messages":"2365","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2366","usedDeprecatedRules":"1728"},{"filePath":"2367","messages":"2368","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2369","usedDeprecatedRules":"1728"},{"filePath":"2370","messages":"2371","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2372","usedDeprecatedRules":"1728"},{"filePath":"2373","messages":"2374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2375","messages":"2376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2377","messages":"2378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2379","messages":"2380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2381","messages":"2382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2383","messages":"2384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2385","messages":"2386","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2387","usedDeprecatedRules":"1728"},{"filePath":"2388","messages":"2389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2390","messages":"2391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2392","messages":"2393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2394","messages":"2395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2396","messages":"2397","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2398","messages":"2399","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2400","messages":"2401","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2402","messages":"2403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2404","messages":"2405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2406","messages":"2407","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2408","messages":"2409","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2410","messages":"2411","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2412","messages":"2413","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2414","messages":"2415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2416","messages":"2417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2418","messages":"2419","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2420","messages":"2421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2422","messages":"2423","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2424","usedDeprecatedRules":"1728"},{"filePath":"2425","messages":"2426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2427","messages":"2428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2429","messages":"2430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2431","messages":"2432","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2433","messages":"2434","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2435","messages":"2436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2437","messages":"2438","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2439","messages":"2440","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2441","messages":"2442","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2443","messages":"2444","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2445","messages":"2446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2447","messages":"2448","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2449","messages":"2450","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2451","messages":"2452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2453","messages":"2454","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2455","messages":"2456","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2457","messages":"2458","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2459","usedDeprecatedRules":"1728"},{"filePath":"2460","messages":"2461","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2462","usedDeprecatedRules":"1728"},{"filePath":"2463","messages":"2464","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2465","messages":"2466","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2467","messages":"2468","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2469","messages":"2470","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2471","usedDeprecatedRules":"1728"},{"filePath":"2472","messages":"2473","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2474","messages":"2475","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2476","messages":"2477","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2478","usedDeprecatedRules":"1728"},{"filePath":"2479","messages":"2480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2481","messages":"2482","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2483","messages":"2484","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2485","messages":"2486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2487","messages":"2488","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2489","usedDeprecatedRules":"1728"},{"filePath":"2490","messages":"2491","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2492","messages":"2493","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2494","messages":"2495","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2496","usedDeprecatedRules":"1728"},{"filePath":"2497","messages":"2498","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2499","messages":"2500","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2501","messages":"2502","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2503","messages":"2504","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2505","messages":"2506","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2507","messages":"2508","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2509","usedDeprecatedRules":"1728"},{"filePath":"2510","messages":"2511","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2512","messages":"2513","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2514","usedDeprecatedRules":"1728"},{"filePath":"2515","messages":"2516","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2517","messages":"2518","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2519","messages":"2520","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2521","messages":"2522","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2523","usedDeprecatedRules":"1728"},{"filePath":"2524","messages":"2525","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2526","messages":"2527","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2528","messages":"2529","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2530","messages":"2531","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2532","messages":"2533","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2534","messages":"2535","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2536","messages":"2537","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2538","messages":"2539","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2540","messages":"2541","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2542","messages":"2543","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2544","messages":"2545","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2546","messages":"2547","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2548","messages":"2549","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2550","messages":"2551","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2552","messages":"2553","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2554","messages":"2555","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2556","messages":"2557","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2558","messages":"2559","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2560","messages":"2561","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2562","messages":"2563","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2564","messages":"2565","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2566","messages":"2567","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2568","messages":"2569","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2570","messages":"2571","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2572","messages":"2573","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2574","messages":"2575","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2576","messages":"2577","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2578","messages":"2579","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2580","messages":"2581","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2582","messages":"2583","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2584","messages":"2585","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2586","messages":"2587","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2588","messages":"2589","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2590","messages":"2591","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2592","messages":"2593","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2594","messages":"2595","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2596","messages":"2597","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2598","messages":"2599","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2600","messages":"2601","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2602","messages":"2603","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2604","messages":"2605","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2606","messages":"2607","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2608","messages":"2609","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2610","messages":"2611","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2612","messages":"2613","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2614","messages":"2615","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2616","messages":"2617","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2618","messages":"2619","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2620","messages":"2621","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2622","messages":"2623","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2624","messages":"2625","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2626","messages":"2627","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2628","messages":"2629","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2630","messages":"2631","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2632","messages":"2633","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2634","messages":"2635","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2636","messages":"2637","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2638","messages":"2639","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2640","messages":"2641","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2642","messages":"2643","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2644","messages":"2645","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2646","messages":"2647","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2648","messages":"2649","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2650","usedDeprecatedRules":"1728"},{"filePath":"2651","messages":"2652","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2653","messages":"2654","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2655","messages":"2656","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"2657","usedDeprecatedRules":"1728"},{"filePath":"2658","messages":"2659","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2660","messages":"2661","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2662","usedDeprecatedRules":"1728"},{"filePath":"2663","messages":"2664","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2665","messages":"2666","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2667","messages":"2668","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2669","messages":"2670","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2671","messages":"2672","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2673","usedDeprecatedRules":"1728"},{"filePath":"2674","messages":"2675","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2676","messages":"2677","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2678","messages":"2679","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2680","messages":"2681","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2682","messages":"2683","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2684","messages":"2685","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2686","messages":"2687","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2688","messages":"2689","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2690","messages":"2691","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2692","messages":"2693","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2694","messages":"2695","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2696","messages":"2697","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2698","messages":"2699","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2700","messages":"2701","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2702","messages":"2703","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2704","messages":"2705","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2706","messages":"2707","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2708","messages":"2709","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2710","messages":"2711","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2712","messages":"2713","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2714","messages":"2715","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2716","messages":"2717","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2718","messages":"2719","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2720","messages":"2721","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2722","messages":"2723","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2724","messages":"2725","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2726","messages":"2727","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2728","messages":"2729","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2730","messages":"2731","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2732","messages":"2733","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2734","messages":"2735","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2736","messages":"2737","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2738","messages":"2739","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2740","messages":"2741","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2742","messages":"2743","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2744","usedDeprecatedRules":"1728"},{"filePath":"2745","messages":"2746","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2747","messages":"2748","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2749","messages":"2750","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2751","messages":"2752","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2753","messages":"2754","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2755","messages":"2756","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2757","messages":"2758","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2759","messages":"2760","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2761","messages":"2762","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2763","messages":"2764","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2765","messages":"2766","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2767","messages":"2768","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2769","usedDeprecatedRules":"1728"},{"filePath":"2770","messages":"2771","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2772","messages":"2773","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2774","usedDeprecatedRules":"1728"},{"filePath":"2775","messages":"2776","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2777","usedDeprecatedRules":"1728"},{"filePath":"2778","messages":"2779","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2780","messages":"2781","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2782","messages":"2783","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2784","messages":"2785","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2786","messages":"2787","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2788","messages":"2789","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2790","usedDeprecatedRules":"1728"},{"filePath":"2791","messages":"2792","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2793","messages":"2794","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2795","messages":"2796","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2797","messages":"2798","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2799","messages":"2800","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2801","messages":"2802","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2803","messages":"2804","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2805","messages":"2806","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2807","messages":"2808","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2809","messages":"2810","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2811","messages":"2812","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2813","messages":"2814","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2815","messages":"2816","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2817","messages":"2818","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2819","messages":"2820","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2821","messages":"2822","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2823","messages":"2824","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2825","messages":"2826","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2827","messages":"2828","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2829","messages":"2830","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2831","messages":"2832","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2833","messages":"2834","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2835","messages":"2836","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2837","messages":"2838","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2839","messages":"2840","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2841","messages":"2842","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2843","messages":"2844","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2845","messages":"2846","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2847","messages":"2848","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2849","messages":"2850","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2851","messages":"2852","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2853","messages":"2854","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2855","messages":"2856","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2857","messages":"2858","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2859","messages":"2860","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2861","usedDeprecatedRules":"1728"},{"filePath":"2862","messages":"2863","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2864","messages":"2865","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2866","messages":"2867","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2868","messages":"2869","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2870","messages":"2871","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2872","messages":"2873","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2874","messages":"2875","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2876","messages":"2877","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2878","messages":"2879","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2880","messages":"2881","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2882","messages":"2883","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2884","messages":"2885","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2886","messages":"2887","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2888","messages":"2889","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2890","messages":"2891","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2892","messages":"2893","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2894","messages":"2895","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2896","messages":"2897","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2898","messages":"2899","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2900","messages":"2901","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2902","messages":"2903","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2904","messages":"2905","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2906","messages":"2907","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2908","messages":"2909","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2910","messages":"2911","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2912","messages":"2913","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2914","messages":"2915","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2916","messages":"2917","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2918","messages":"2919","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2920","messages":"2921","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2922","messages":"2923","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2924","messages":"2925","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2926","messages":"2927","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2928","messages":"2929","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2930","messages":"2931","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2932","messages":"2933","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2934","messages":"2935","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2936","messages":"2937","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2938","messages":"2939","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2940","messages":"2941","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2942","messages":"2943","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2944","messages":"2945","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2946","messages":"2947","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2948","messages":"2949","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2950","messages":"2951","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2952","messages":"2953","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2954","messages":"2955","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2956","messages":"2957","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2958","messages":"2959","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2960","messages":"2961","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2962","messages":"2963","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2964","messages":"2965","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2966","messages":"2967","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2968","messages":"2969","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2970","messages":"2971","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2972","messages":"2973","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2974","messages":"2975","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2976","messages":"2977","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2978","messages":"2979","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2980","messages":"2981","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2982","messages":"2983","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2984","messages":"2985","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2986","messages":"2987","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2988","messages":"2989","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2990","usedDeprecatedRules":"1728"},{"filePath":"2991","messages":"2992","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2993","usedDeprecatedRules":"1728"},{"filePath":"2994","messages":"2995","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2996","usedDeprecatedRules":"1728"},{"filePath":"2997","messages":"2998","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"2999","messages":"3000","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3001","messages":"3002","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3003","messages":"3004","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3005","messages":"3006","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3007","messages":"3008","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3009","messages":"3010","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3011","messages":"3012","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3013","messages":"3014","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3015","messages":"3016","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3017","messages":"3018","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3019","messages":"3020","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3021","messages":"3022","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3023","messages":"3024","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3025","messages":"3026","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3027","messages":"3028","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3029","messages":"3030","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3031","messages":"3032","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3033","messages":"3034","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3035","messages":"3036","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3037","messages":"3038","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3039","messages":"3040","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3041","messages":"3042","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3043","messages":"3044","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3045","messages":"3046","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3047","messages":"3048","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3049","messages":"3050","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3051","messages":"3052","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3053","messages":"3054","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3055","messages":"3056","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3057","messages":"3058","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3059","messages":"3060","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3061","messages":"3062","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3063","messages":"3064","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3065","messages":"3066","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3067","messages":"3068","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3069","messages":"3070","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3071","messages":"3072","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3073","messages":"3074","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3075","messages":"3076","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3077","usedDeprecatedRules":"1728"},{"filePath":"3078","messages":"3079","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3080","messages":"3081","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3082","messages":"3083","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3084","messages":"3085","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3086","messages":"3087","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3088","messages":"3089","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3090","messages":"3091","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3092","messages":"3093","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3094","messages":"3095","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3096","messages":"3097","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3098","messages":"3099","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3100","messages":"3101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3102","messages":"3103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3104","messages":"3105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3106","messages":"3107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3108","messages":"3109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3110","messages":"3111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3112","messages":"3113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3114","messages":"3115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3116","messages":"3117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3118","messages":"3119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3120","messages":"3121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3122","messages":"3123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3124","messages":"3125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3126","messages":"3127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3128","messages":"3129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3130","messages":"3131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3132","messages":"3133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3134","messages":"3135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3136","messages":"3137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3138","messages":"3139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3140","messages":"3141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3142","messages":"3143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3144","messages":"3145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3146","messages":"3147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3148","messages":"3149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3150","messages":"3151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3152","messages":"3153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3154","messages":"3155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3156","messages":"3157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3158","messages":"3159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3160","messages":"3161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3162","messages":"3163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3164","messages":"3165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3166","messages":"3167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3168","messages":"3169","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3170","usedDeprecatedRules":"1728"},{"filePath":"3171","messages":"3172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3173","messages":"3174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3175","usedDeprecatedRules":"1728"},{"filePath":"3176","messages":"3177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3178","messages":"3179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3180","messages":"3181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3182","messages":"3183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3184","messages":"3185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3186","messages":"3187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3188","messages":"3189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3190","messages":"3191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3192","messages":"3193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3194","messages":"3195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3196","messages":"3197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3198","messages":"3199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3200","messages":"3201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3202","messages":"3203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3204","messages":"3205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3206","messages":"3207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3208","messages":"3209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3210","messages":"3211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3212","messages":"3213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3214","messages":"3215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3216","messages":"3217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3218","messages":"3219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3220","messages":"3221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3222","messages":"3223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3224","messages":"3225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3226","messages":"3227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3228","messages":"3229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3230","messages":"3231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3232","messages":"3233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3234","messages":"3235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3236","messages":"3237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3238","messages":"3239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3240","messages":"3241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3242","messages":"3243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3244","messages":"3245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3246","messages":"3247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3248","messages":"3249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3250","messages":"3251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3252","messages":"3253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3254","messages":"3255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3256","messages":"3257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3258","messages":"3259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3260","messages":"3261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3262","messages":"3263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3264","messages":"3265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3266","messages":"3267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3268","messages":"3269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3270","messages":"3271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3272","messages":"3273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3274","messages":"3275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3276","messages":"3277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3278","messages":"3279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3280","messages":"3281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3282","messages":"3283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3284","messages":"3285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3286","messages":"3287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3288","messages":"3289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3290","messages":"3291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3292","messages":"3293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3294","messages":"3295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3296","messages":"3297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3298","messages":"3299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3300","messages":"3301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3302","messages":"3303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3304","messages":"3305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3306","messages":"3307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3308","messages":"3309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3310","messages":"3311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3312","messages":"3313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3314","messages":"3315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3316","messages":"3317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3318","messages":"3319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3320","messages":"3321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3322","messages":"3323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3324","messages":"3325","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3326","messages":"3327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3328","messages":"3329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3330","messages":"3331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3332","messages":"3333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3334","messages":"3335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3336","messages":"3337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3338","messages":"3339","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3340","usedDeprecatedRules":"1728"},{"filePath":"3341","messages":"3342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3343","messages":"3344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3345","messages":"3346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3347","messages":"3348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3349","messages":"3350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3351","messages":"3352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3353","messages":"3354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3355","messages":"3356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3357","messages":"3358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3359","messages":"3360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3361","messages":"3362","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3363","messages":"3364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3365","messages":"3366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3367","messages":"3368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3369","messages":"3370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3371","messages":"3372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3373","messages":"3374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3375","messages":"3376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3377","messages":"3378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3379","messages":"3380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3381","messages":"3382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3383","messages":"3384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3385","messages":"3386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3387","messages":"3388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3389","messages":"3390","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3391","messages":"3392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3393","messages":"3394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3395","messages":"3396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3397","messages":"3398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3399","messages":"3400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3401","messages":"3402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3403","messages":"3404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3405","messages":"3406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3407","messages":"3408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3409","messages":"3410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3411","messages":"3412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3413","messages":"3414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3415","messages":"3416","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3417","messages":"3418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3419","messages":"3420","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3421","messages":"3422","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3423","messages":"3424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3425","messages":"3426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3427","messages":"3428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3429","messages":"3430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3431","messages":"3432","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3433","messages":"3434","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3435","messages":"3436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3437","messages":"3438","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3439","messages":"3440","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3441","messages":"3442","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3443","messages":"3444","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3445","messages":"3446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3447","messages":"3448","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3449","messages":"3450","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3451","messages":"3452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3453","messages":"3454","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3455","messages":"3456","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3457","messages":"3458","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3459","messages":"3460","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3461","messages":"3462","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3463","messages":"3464","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3465","messages":"3466","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3467","messages":"3468","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3469","messages":"3470","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3471","messages":"3472","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3473","messages":"3474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3475","messages":"3476","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3477","messages":"3478","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3479","messages":"3480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3481","messages":"3482","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3483","messages":"3484","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3485","messages":"3486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3487","messages":"3488","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3489","messages":"3490","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3491","messages":"3492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3493","messages":"3494","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3495","messages":"3496","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3497","messages":"3498","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3499","messages":"3500","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3501","messages":"3502","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3503","messages":"3504","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3505","messages":"3506","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3507","messages":"3508","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3509","messages":"3510","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3511","messages":"3512","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3513","messages":"3514","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"3515","usedDeprecatedRules":"1728"},{"filePath":"3516","messages":"3517","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"3518","usedDeprecatedRules":"1728"},{"filePath":"3519","messages":"3520","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"3521","usedDeprecatedRules":"1728"},{"filePath":"3522","messages":"3523","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"3524","usedDeprecatedRules":"1728"},{"filePath":"3525","messages":"3526","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3527","messages":"3528","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3529","messages":"3530","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3531","messages":"3532","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3533","messages":"3534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3535","messages":"3536","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3537","messages":"3538","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3539","usedDeprecatedRules":"1728"},{"filePath":"3540","messages":"3541","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3542","messages":"3543","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3544","messages":"3545","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3546","messages":"3547","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3548","messages":"3549","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3550","messages":"3551","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3552","messages":"3553","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3554","messages":"3555","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3556","messages":"3557","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3558","messages":"3559","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3560","messages":"3561","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3562","messages":"3563","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3564","messages":"3565","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3566","messages":"3567","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"3568","messages":"3569","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},"D:\\Utecho\\Scaff-cert\\src\\index.js",[],["3570","3571"],"D:\\Utecho\\Scaff-cert\\src\\App.js",[],"D:\\Utecho\\Scaff-cert\\src\\serviceWorker.js",[],"D:\\Utecho\\Scaff-cert\\src\\redux\\store.js",[],"D:\\Utecho\\Scaff-cert\\src\\configs\\acl\\ability.js",["3572"],"import { Ability } from '@casl/ability'\r\nimport { initialAbility } from './initialAbility'\r\n\r\n//  Read ability from localStorage\r\n// * Handles auto fetching previous abilities if already logged in user\r\n// ? You can update this if you store user abilities to more secure place\r\n// ! Anyone can update localStorage so be careful and please update this\r\nconst userData = JSON.parse(localStorage.getItem('userData'))\r\nconst existingAbility = userData ? userData.ability : null\r\n\r\nexport default new Ability(existingAbility || initialAbility)\r\n","D:\\Utecho\\Scaff-cert\\src\\utility\\context\\ThemeColors.js",[],"D:\\Utecho\\Scaff-cert\\src\\utility\\context\\Can.js",[],"D:\\Utecho\\Scaff-cert\\src\\@core\\components\\spinner\\Fallback-spinner.js",[],"D:\\Utecho\\Scaff-cert\\src\\@fake-db\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\configs\\i18n\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\@core\\components\\ripple-button\\index.js",["3573","3574"],"// ** React Imports\r\nimport { useState, useEffect } from 'react'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\n\r\n// ** Reactstrap Imports\r\nimport { Button } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport './ripple-button.scss'\r\n\r\nconst RippleButton = ({ className, children, onClick, ...rest }) => {\r\n  // ** States\r\n  const [mounted, setMounted] = useState(false)\r\n  const [isRippling, setIsRippling] = useState(false)\r\n  const [coords, setCoords] = useState({ x: -1, y: -1 })\r\n\r\n  // ** Toggle mounted on mount & unmount\r\n  useEffect(() => {\r\n    setMounted(true)\r\n    return () => setMounted(false)\r\n  }, [])\r\n\r\n  // ** Check for coords and set ripple\r\n  useEffect(() => {\r\n    if (mounted) {\r\n      if (coords.x !== -1 && coords.y !== -1) {\r\n        setIsRippling(true)\r\n        setTimeout(() => setIsRippling(false), 500)\r\n      } else {\r\n        setIsRippling(false)\r\n      }\r\n    }\r\n  }, [coords])\r\n\r\n  // ** Reset Coords on ripple end\r\n  useEffect(() => {\r\n    if (mounted) {\r\n      if (!isRippling) setCoords({ x: -1, y: -1 })\r\n    }\r\n  }, [isRippling])\r\n\r\n  return (\r\n    <Button\r\n      className={classnames('waves-effect', {\r\n        [className]: className\r\n      })}\r\n      onClick={e => {\r\n        const rect = e.target.getBoundingClientRect()\r\n        setCoords({ x: e.clientX - rect.left, y: e.clientY - rect.top })\r\n        if (onClick) {\r\n          onClick(e)\r\n        }\r\n      }}\r\n      {...rest}\r\n    >\r\n      {children}\r\n      {isRippling ? (\r\n        <span\r\n          className='waves-ripple'\r\n          style={{\r\n            left: coords.x,\r\n            top: coords.y\r\n          }}\r\n        ></span>\r\n      ) : null}\r\n    </Button>\r\n  )\r\n}\r\n\r\n// ** PropTypes\r\nRippleButton.propTypes = {\r\n  ...Button.propTypes\r\n}\r\n\r\nButton.Ripple = RippleButton\r\n","D:\\Utecho\\Scaff-cert\\src\\redux\\rootReducer.js",[],"D:\\Utecho\\Scaff-cert\\src\\router\\Router.js",["3575"],"// ** React Imports\r\nimport { Suspense, useContext, lazy, Fragment } from 'react'\r\n\r\n// ** Utils\r\nimport { isUserLoggedIn } from '@utils'\r\nimport { useLayout } from '@hooks/useLayout'\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\nimport { useRouterTransition } from '@hooks/useRouterTransition'\r\n\r\n// ** Custom Components\r\nimport LayoutWrapper from '@layouts/components/layout-wrapper'\r\n\r\n// ** Router Components\r\nimport { HashRouter as AppRouter, Route, Switch, Redirect } from 'react-router-dom'\r\n\r\n// ** Routes & Default Routes\r\nimport { DefaultRoute, Routes } from './routes'\r\n\r\n// ** Layouts\r\nimport BlankLayout from '@layouts/BlankLayout'\r\nimport VerticalLayout from '@src/layouts/VerticalLayout'\r\nimport HorizontalLayout from '@src/layouts/HorizontalLayout'\r\n\r\nconst Router = () => {\r\n  // ** Hooks\r\n  const { layout, setLayout, setLastLayout } = useLayout()\r\n  const { transition, setTransition } = useRouterTransition()\r\n\r\n  // ** ACL Ability Context\r\n  const ability = useContext(AbilityContext)\r\n\r\n  // ** Default Layout\r\n  const DefaultLayout = layout === 'horizontal' ? 'HorizontalLayout' : 'VerticalLayout'\r\n\r\n  // ** All of the available layouts\r\n  const Layouts = { BlankLayout, VerticalLayout, HorizontalLayout }\r\n\r\n  // ** Current Active Item\r\n  const currentActiveItem = null\r\n\r\n  // ** Return Filtered Array of Routes & Paths\r\n  const LayoutRoutesAndPaths = layout => {\r\n    const LayoutRoutes = []\r\n    const LayoutPaths = []\r\n\r\n    if (Routes) {\r\n      Routes.filter(route => {\r\n        // ** Checks if Route layout or Default layout matches current layout\r\n        if (route.layout === layout || (route.layout === undefined && DefaultLayout === layout)) {\r\n          LayoutRoutes.push(route)\r\n          LayoutPaths.push(route.path)\r\n        }\r\n      })\r\n    }\r\n\r\n    return { LayoutRoutes, LayoutPaths }\r\n  }\r\n\r\n  const NotAuthorized = lazy(() => import('@src/views/pages/misc/NotAuthorized'))\r\n\r\n  // ** Init Error Component\r\n  const Error = lazy(() => import('@src/views/pages/misc/Error'))\r\n\r\n  /**\r\n   ** Final Route Component Checks for Login & User Role and then redirects to the route\r\n   */\r\n  const FinalRoute = props => {\r\n    const route = props.route\r\n    let action, resource\r\n\r\n    // ** Assign vars based on route meta\r\n    if (route.meta) {\r\n      action = route.meta.action ? route.meta.action : null\r\n      resource = route.meta.resource ? route.meta.resource : null\r\n    }\r\n\r\n    if (\r\n      (!isUserLoggedIn() && route.meta === undefined) ||\r\n      (!isUserLoggedIn() && route.meta && !route.meta.authRoute && !route.meta.publicRoute)\r\n    ) {\r\n      /**\r\n       ** If user is not Logged in & route meta is undefined\r\n       ** OR\r\n       ** If user is not Logged in & route.meta.authRoute, !route.meta.publicRoute are undefined\r\n       ** Then redirect user to login\r\n       */\r\n\r\n      return <Redirect to='/login' />\r\n    } else if (route.meta && route.meta.authRoute && isUserLoggedIn()) {\r\n      // ** If route has meta and authRole and user is Logged in then redirect user to home page (DefaultRoute)\r\n      return <Redirect to='/' />\r\n    } else if (isUserLoggedIn() && !ability.can(action || 'read', resource)) {\r\n      // ** If user is Logged in and doesn't have ability to visit the page redirect the user to Not Authorized\r\n      return <Redirect to='/misc/not-authorized' />\r\n    } else {\r\n      // ** If none of the above render component\r\n      return <route.component {...props} />\r\n    }\r\n  }\r\n\r\n  // ** Return Route to Render\r\n  const ResolveRoutes = () => {\r\n    return Object.keys(Layouts).map((layout, index) => {\r\n      // ** Convert Layout parameter to Layout Component\r\n      // ? Note: make sure to keep layout and component name equal\r\n\r\n      const LayoutTag = Layouts[layout]\r\n\r\n      // ** Get Routes and Paths of the Layout\r\n      const { LayoutRoutes, LayoutPaths } = LayoutRoutesAndPaths(layout)\r\n\r\n      // ** We have freedom to display different layout for different route\r\n      // ** We have made LayoutTag dynamic based on layout, we can also replace it with the only layout component,\r\n      // ** that we want to implement like VerticalLayout or HorizontalLayout\r\n      // ** We segregated all the routes based on the layouts and Resolved all those routes inside layouts\r\n\r\n      // ** RouterProps to pass them to Layouts\r\n      const routerProps = {}\r\n\r\n      return (\r\n        <Route path={LayoutPaths} key={index}>\r\n          <LayoutTag\r\n            layout={layout}\r\n            setLayout={setLayout}\r\n            transition={transition}\r\n            routerProps={routerProps}\r\n            setLastLayout={setLastLayout}\r\n            setTransition={setTransition}\r\n            currentActiveItem={currentActiveItem}\r\n          >\r\n            <Switch>\r\n              {LayoutRoutes.map(route => {\r\n                return (\r\n                  <Route\r\n                    key={route.path}\r\n                    path={route.path}\r\n                    exact={route.exact === true}\r\n                    render={props => {\r\n                      // ** Assign props to routerProps\r\n                      Object.assign(routerProps, {\r\n                        ...props,\r\n                        meta: route.meta\r\n                      })\r\n\r\n                      return (\r\n                        <Fragment>\r\n                          {/* Layout Wrapper to add classes based on route's layout, appLayout and className */}\r\n\r\n                          {route.layout === 'BlankLayout' ? (\r\n                            <Fragment>\r\n                              <FinalRoute route={route} {...props} />\r\n                            </Fragment>\r\n                          ) : (\r\n                            <LayoutWrapper\r\n                              layout={DefaultLayout}\r\n                              transition={transition}\r\n                              setTransition={setTransition}\r\n                              /* Conditional props */\r\n                              /*eslint-disable */\r\n                              {...(route.appLayout\r\n                                ? {\r\n                                    appLayout: route.appLayout\r\n                                  }\r\n                                : {})}\r\n                              {...(route.meta\r\n                                ? {\r\n                                    routeMeta: route.meta\r\n                                  }\r\n                                : {})}\r\n                              {...(route.className\r\n                                ? {\r\n                                    wrapperClass: route.className\r\n                                  }\r\n                                : {})}\r\n                              /*eslint-enable */\r\n                            >\r\n                              <Suspense fallback={null}>\r\n                                <FinalRoute route={route} {...props} />\r\n                              </Suspense>\r\n                            </LayoutWrapper>\r\n                          )}\r\n                        </Fragment>\r\n                      )\r\n                    }}\r\n                  />\r\n                )\r\n              })}\r\n            </Switch>\r\n          </LayoutTag>\r\n        </Route>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <AppRouter basename={process.env.REACT_APP_BASENAME}>\r\n      <Switch>\r\n        {/* If user is logged in Redirect user to DefaultRoute else to login */}\r\n        <Route\r\n          exact\r\n          path='/'\r\n          render={() => {\r\n            return isUserLoggedIn() ? <Redirect to={DefaultRoute} /> : <Redirect to='/login' />\r\n          }}\r\n        />\r\n        {/* Not Auth Route */}\r\n        <Route\r\n          exact\r\n          path='/misc/not-authorized'\r\n          render={() => (\r\n            <Layouts.BlankLayout>\r\n              <NotAuthorized />\r\n            </Layouts.BlankLayout>\r\n          )}\r\n        />\r\n        {ResolveRoutes()}\r\n\r\n        {/* NotFound Error page */}\r\n        <Route path='*' component={Error} />\r\n      </Switch>\r\n    </AppRouter>\r\n  )\r\n}\r\n\r\nexport default Router\r\n","D:\\Utecho\\Scaff-cert\\src\\configs\\acl\\initialAbility.js",[],"D:\\Utecho\\Scaff-cert\\src\\@fake-db\\mock.js",[],"D:\\Utecho\\Scaff-cert\\src\\@fake-db\\pages\\profile.js",[],"D:\\Utecho\\Scaff-cert\\src\\@fake-db\\pages\\faq.js",[],"D:\\Utecho\\Scaff-cert\\src\\@fake-db\\pages\\pricing-data.js",[],"D:\\Utecho\\Scaff-cert\\src\\@fake-db\\pages\\blog-data.js",[],"D:\\Utecho\\Scaff-cert\\src\\@fake-db\\pages\\knowledge-base.js",[],"D:\\Utecho\\Scaff-cert\\src\\@fake-db\\apps\\chat.js",[],"D:\\Utecho\\Scaff-cert\\src\\@fake-db\\pages\\account-settings.js",[],"D:\\Utecho\\Scaff-cert\\src\\@fake-db\\apps\\email.js",[],"D:\\Utecho\\Scaff-cert\\src\\@fake-db\\apps\\invoice.js",[],"D:\\Utecho\\Scaff-cert\\src\\@fake-db\\apps\\permissionsList.js",[],"D:\\Utecho\\Scaff-cert\\src\\@fake-db\\apps\\todo.js",[],"D:\\Utecho\\Scaff-cert\\src\\@fake-db\\apps\\calendar.js",[],"D:\\Utecho\\Scaff-cert\\src\\@fake-db\\apps\\userList.js",[],"D:\\Utecho\\Scaff-cert\\src\\@fake-db\\apps\\eCommerce.js",[],"D:\\Utecho\\Scaff-cert\\src\\@fake-db\\tables\\datatables.js",[],"D:\\Utecho\\Scaff-cert\\src\\@fake-db\\navbar\\navbarSearch.js",[],"D:\\Utecho\\Scaff-cert\\src\\@fake-db\\cards\\card-analytics.js",[],"D:\\Utecho\\Scaff-cert\\src\\@fake-db\\cards\\card-statistics.js",[],"D:\\Utecho\\Scaff-cert\\src\\@fake-db\\autoComplete\\autoComplete.js",[],"D:\\Utecho\\Scaff-cert\\src\\redux\\navbar.js",["3576"],"// ** Redux Imports\r\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\n\r\n// ** Axios Imports\r\nimport axios from 'axios'\r\n\r\nexport const getBookmarks = createAsyncThunk('layout/getBookmarks', async () => {\r\n  const response = await axios.get('/api/bookmarks/data')\r\n  return {\r\n    data: response.data.suggestions,\r\n    bookmarks: response.data.bookmarks\r\n  }\r\n})\r\n\r\nexport const updateBookmarked = createAsyncThunk('layout/updateBookmarked', async id => {\r\n  await axios.post('/api/bookmarks/update', { id })\r\n  return id\r\n})\r\n\r\nexport const layoutSlice = createSlice({\r\n  name: 'layout',\r\n  initialState: {\r\n    query: '',\r\n    bookmarks: [],\r\n    suggestions: []\r\n  },\r\n  reducers: {\r\n    handleSearchQuery: (state, action) => {\r\n      state.query = action.payload\r\n    }\r\n  },\r\n  extraReducers: builder => {\r\n    builder\r\n      .addCase(getBookmarks.fulfilled, (state, action) => {\r\n        state.suggestions = action.payload.data\r\n        state.bookmarks = action.payload.bookmarks\r\n      })\r\n      .addCase(updateBookmarked.fulfilled, (state, action) => {\r\n        let objectToUpdate\r\n\r\n        // ** find & update object\r\n        state.suggestions.find(item => {\r\n          if (item.id === action.payload) {\r\n            item.isBookmarked = !item.isBookmarked\r\n            objectToUpdate = item\r\n          }\r\n        })\r\n\r\n        // ** Get index to add or remove bookmark from array\r\n        const bookmarkIndex = state.bookmarks.findIndex(x => x.id === action.payload)\r\n\r\n        if (bookmarkIndex === -1) {\r\n          state.bookmarks.push(objectToUpdate)\r\n        } else {\r\n          state.bookmarks.splice(bookmarkIndex, 1)\r\n        }\r\n      })\r\n  }\r\n})\r\n\r\nexport const { handleSearchQuery } = layoutSlice.actions\r\n\r\nexport default layoutSlice.reducer\r\n","D:\\Utecho\\Scaff-cert\\src\\redux\\layout.js",[],"D:\\Utecho\\Scaff-cert\\src\\redux\\authentication.js",[],"D:\\Utecho\\Scaff-cert\\src\\utility\\Utils.js",[],"D:\\Utecho\\Scaff-cert\\src\\utility\\hooks\\useRouterTransition.js",[],"D:\\Utecho\\Scaff-cert\\src\\utility\\hooks\\useLayout.js",[],"D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\BlankLayout.js",[],"D:\\Utecho\\Scaff-cert\\src\\layouts\\VerticalLayout.js",[],"D:\\Utecho\\Scaff-cert\\src\\layouts\\HorizontalLayout.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\misc\\Error.js",["3577"],"// ** React Imports\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// ** Reactstrap Imports\r\nimport { Button } from \"reactstrap\";\r\n\r\n// ** Custom Hooks\r\nimport { useSkin } from \"@hooks/useSkin\";\r\n\r\n// ** Styles\r\nimport \"@styles/base/pages/page-misc.scss\";\r\n\r\nconst Error = () => {\r\n  // ** Hooks\r\n  const { skin } = useSkin();\r\n\r\n  const illustration = skin === \"dark\" ? \"error-dark.svg\" : \"error.svg\",\r\n    source = require(`@src/assets/images/pages/${illustration}`).default;\r\n  return (\r\n    <div className=\"misc-wrapper\">\r\n      <a className=\"brand-logo\" href=\"/\">\r\n        <h2 className=\"brand-text text-primary ms-1\">Scaff-Cert</h2>\r\n      </a>\r\n      <div className=\"misc-inner p-2 p-sm-3\">\r\n        <div className=\"w-100 text-center\">\r\n          <h2 className=\"mb-1\">Page Not Found 🕵🏻‍♀️</h2>\r\n          <p className=\"mb-2\">\r\n            Oops! 😖 The requested URL was not found on this server.\r\n          </p>\r\n          <Button\r\n            tag={Link}\r\n            to=\"/\"\r\n            color=\"primary\"\r\n            className=\"btn-sm-block mb-2\"\r\n          >\r\n            Back to home\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Error;\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\misc\\NotAuthorized.js",[],"D:\\Utecho\\Scaff-cert\\src\\@fake-db\\jwt\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\@fake-db\\utils.js",[],"D:\\Utecho\\Scaff-cert\\src\\router\\routes\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\components\\layout-wrapper\\index.js",["3578"],"// ** React Imports\r\nimport { Fragment, useEffect } from 'react'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\n\r\n// ** Store & Actions\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { handleContentWidth, handleMenuCollapsed, handleMenuHidden } from '@store/layout'\r\n\r\n// ** Styles\r\nimport 'animate.css/animate.css'\r\n\r\nconst LayoutWrapper = props => {\r\n  // ** Props\r\n  const { layout, children, appLayout, wrapperClass, transition, routeMeta } = props\r\n\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state)\r\n\r\n  const navbarStore = store.navbar\r\n  const contentWidth = store.layout.contentWidth\r\n\r\n  //** Vars\r\n  const Tag = layout === 'HorizontalLayout' && !appLayout ? 'div' : Fragment\r\n\r\n  // ** Clean Up Function\r\n  const cleanUp = () => {\r\n    if (routeMeta) {\r\n      if (routeMeta.contentWidth) {\r\n        dispatch(handleContentWidth('full'))\r\n      }\r\n      if (routeMeta.menuCollapsed) {\r\n        dispatch(handleMenuCollapsed(!routeMeta.menuCollapsed))\r\n      }\r\n      if (routeMeta.menuHidden) {\r\n        dispatch(handleMenuHidden(!routeMeta.menuHidden))\r\n      }\r\n    }\r\n  }\r\n\r\n  // ** ComponentDidMount\r\n  useEffect(() => {\r\n    if (routeMeta) {\r\n      if (routeMeta.contentWidth) {\r\n        dispatch(handleContentWidth(routeMeta.contentWidth))\r\n      }\r\n      if (routeMeta.menuCollapsed) {\r\n        dispatch(handleMenuCollapsed(routeMeta.menuCollapsed))\r\n      }\r\n      if (routeMeta.menuHidden) {\r\n        dispatch(handleMenuHidden(routeMeta.menuHidden))\r\n      }\r\n    }\r\n    return () => cleanUp()\r\n  }, [])\r\n\r\n  return (\r\n    <div\r\n      className={classnames('app-content content overflow-hidden', {\r\n        [wrapperClass]: wrapperClass,\r\n        'show-overlay': navbarStore.query.length\r\n      })}\r\n    >\r\n      <div className='content-overlay'></div>\r\n      <div className='header-navbar-shadow' />\r\n      <div\r\n        className={classnames({\r\n          'content-wrapper': !appLayout,\r\n          'content-area-wrapper': appLayout,\r\n          'container-xxl p-0': contentWidth === 'boxed',\r\n          [`animate__animated animate__${transition}`]: transition !== 'none' && transition.length\r\n        })}\r\n      >\r\n        <Tag\r\n          /*eslint-disable */\r\n          {...(layout === 'HorizontalLayout' && !appLayout\r\n            ? { className: classnames({ 'content-body': !appLayout }) }\r\n            : {})}\r\n          /*eslint-enable */\r\n        >\r\n          {children}\r\n        </Tag>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LayoutWrapper\r\n","D:\\Utecho\\Scaff-cert\\src\\configs\\themeConfig.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\store\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\invoice\\store\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\todo\\store\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\ecommerce\\store\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\chat\\store\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\email\\store\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\roles-permissions\\store\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\calendar\\store\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\tables\\data-tables\\store\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\HorizontalLayout.js",["3579"],"// ** React Imports\r\nimport { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Store & Actions\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { handleMenuHidden, handleContentWidth } from '@store/layout'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { ArrowUp } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Navbar, NavItem, Button } from 'reactstrap'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\n// ** Custom Components\r\nimport Customizer from '@components/customizer'\r\nimport ScrollToTop from '@components/scrolltop'\r\nimport NavbarComponent from './components/navbar'\r\nimport FooterComponent from './components/footer'\r\nimport MenuComponent from './components/menu/horizontal-menu'\r\n\r\n// ** Custom Hooks\r\nimport { useRTL } from '@hooks/useRTL'\r\nimport { useSkin } from '@hooks/useSkin'\r\nimport { useNavbarType } from '@hooks/useNavbarType'\r\nimport { useFooterType } from '@hooks/useFooterType'\r\nimport { useNavbarColor } from '@hooks/useNavbarColor'\r\n\r\n// ** Styles\r\nimport '@styles/base/core/menu/menu-types/horizontal-menu.scss'\r\n\r\nconst HorizontalLayout = (props) => {\r\n  // ** Props\r\n  const {\r\n    children,\r\n    navbar,\r\n    menuData,\r\n    footer,\r\n    menu,\r\n    currentActiveItem,\r\n    routerProps,\r\n    setLastLayout\r\n  } = props\r\n\r\n  // ** Hooks\r\n  const { skin, setSkin } = useSkin()\r\n  const [isRtl, setIsRtl] = useRTL()\r\n  const { navbarType, setNavbarType } = useNavbarType()\r\n  const { footerType, setFooterType } = useFooterType()\r\n  const { navbarColor, setNavbarColor } = useNavbarColor()\r\n\r\n  // ** States\r\n  const [isMounted, setIsMounted] = useState(false)\r\n  const [navbarScrolled, setNavbarScrolled] = useState(false)\r\n\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const layoutStore = useSelector((state) => state.layout)\r\n\r\n  // ** Vars\r\n  const contentWidth = layoutStore.contentWidth\r\n  const isHidden = layoutStore.menuHidden\r\n\r\n  // ** Handles Content Width\r\n  const setContentWidth = (val) => dispatch(handleContentWidth(val))\r\n\r\n  // ** Handles Content Width\r\n  const setIsHidden = (val) => dispatch(handleMenuHidden(val))\r\n\r\n  // ** UseEffect Cleanup\r\n  const cleanup = () => {\r\n    setIsMounted(false)\r\n    setNavbarScrolled(false)\r\n  }\r\n\r\n  //** ComponentDidMount\r\n  useEffect(() => {\r\n    setIsMounted(true)\r\n    window.addEventListener('scroll', function () {\r\n      if (window.pageYOffset > 65 && navbarScrolled === false) {\r\n        setNavbarScrolled(true)\r\n      }\r\n      if (window.pageYOffset < 65) {\r\n        setNavbarScrolled(false)\r\n      }\r\n    })\r\n    return () => cleanup()\r\n  }, [])\r\n\r\n  // ** Vars\r\n  const footerClasses = {\r\n    static: 'footer-static',\r\n    sticky: 'footer-fixed',\r\n    hidden: 'footer-hidden'\r\n  }\r\n\r\n  const navbarWrapperClasses = {\r\n    floating: 'navbar-floating',\r\n    sticky: 'navbar-sticky',\r\n    static: 'navbar-static'\r\n  }\r\n\r\n  const navbarClasses = {\r\n    floating:\r\n      contentWidth === 'boxed' ? 'floating-nav container-xxl' : 'floating-nav',\r\n    sticky: 'fixed-top'\r\n  }\r\n\r\n  const bgColorCondition =\r\n    navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\r\n\r\n  if (!isMounted) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classnames(\r\n        `wrapper horizontal-layout horizontal-menu ${\r\n          navbarWrapperClasses[navbarType] || 'navbar-floating'\r\n        } ${footerClasses[footerType] || 'footer-static'} menu-expanded`\r\n      )}\r\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\r\n    >\r\n      <Navbar\r\n        expand='lg'\r\n        container={false}\r\n        className={classnames(\r\n          'header-navbar navbar-fixed align-items-center navbar-shadow navbar-brand-center',\r\n          {\r\n            'navbar-scrolled': navbarScrolled\r\n          }\r\n        )}\r\n      >\r\n        {!navbar && (\r\n          <div className='navbar-header d-xl-block d-none'>\r\n            <ul className='nav navbar-nav'>\r\n              <NavItem>\r\n                <Link to='/' className='navbar-brand'>\r\n                  <span className='brand-logo'>\r\n                    <img src={themeConfig.app.appLogoImage} alt='logo' />\r\n                  </span>\r\n                  <h2 className='brand-text mb-0'>{themeConfig.app.appName}</h2>\r\n                </Link>\r\n              </NavItem>\r\n            </ul>\r\n          </div>\r\n        )}\r\n\r\n        <div className='navbar-container d-flex content'>\r\n          {navbar ? navbar : <NavbarComponent skin={skin} setSkin={setSkin} />}\r\n        </div>\r\n      </Navbar>\r\n      {!isHidden ? (\r\n        <div className='horizontal-menu-wrapper'>\r\n          <Navbar\r\n            tag='div'\r\n            expand='sm'\r\n            light={skin !== 'dark'}\r\n            dark={skin === 'dark' || bgColorCondition}\r\n            className={classnames(\r\n              `header-navbar navbar-horizontal navbar-shadow menu-border`,\r\n              {\r\n                [navbarClasses[navbarType]]: navbarType !== 'static',\r\n                'floating-nav':\r\n                  (!navbarClasses[navbarType] && navbarType !== 'static') ||\r\n                  navbarType === 'floating'\r\n              }\r\n            )}\r\n          >\r\n            {menu ? (\r\n              menu\r\n            ) : (\r\n              <MenuComponent\r\n                menuData={menuData}\r\n                routerProps={routerProps}\r\n                currentActiveItem={currentActiveItem}\r\n              />\r\n            )}\r\n          </Navbar>\r\n        </div>\r\n      ) : null}\r\n\r\n      {children}\r\n      {themeConfig.layout.customizer === true ? (\r\n        <Customizer\r\n          skin={skin}\r\n          setSkin={setSkin}\r\n          footerType={footerType}\r\n          setFooterType={setFooterType}\r\n          navbarType={navbarType}\r\n          setNavbarType={setNavbarType}\r\n          navbarColor={navbarColor}\r\n          setNavbarColor={setNavbarColor}\r\n          isRtl={isRtl}\r\n          setIsRtl={setIsRtl}\r\n          layout={props.layout}\r\n          setLastLayout={setLastLayout}\r\n          setLayout={props.setLayout}\r\n          isHidden={isHidden}\r\n          setIsHidden={setIsHidden}\r\n          contentWidth={contentWidth}\r\n          setContentWidth={setContentWidth}\r\n          transition={props.transition}\r\n          setTransition={props.setTransition}\r\n          themeConfig={themeConfig}\r\n        />\r\n      ) : null}\r\n      <footer\r\n        className={classnames(\r\n          `footer footer-light ${footerClasses[footerType] || 'footer-static'}`,\r\n          {\r\n            'd-none': footerType === 'hidden'\r\n          }\r\n        )}\r\n      >\r\n        {footer ? (\r\n          footer\r\n        ) : (\r\n          <FooterComponent\r\n            footerType={footerType}\r\n            footerClasses={footerClasses}\r\n          />\r\n        )}\r\n      </footer>\r\n\r\n      {themeConfig.layout.scrollTop === true ? (\r\n        <div className='scroll-to-top'>\r\n          <ScrollToTop showOffset={300} className='scroll-top d-block'>\r\n            <Button className='btn-icon' color='primary'>\r\n              <ArrowUp size={14} />\r\n            </Button>\r\n          </ScrollToTop>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\nexport default HorizontalLayout\r\n","D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\VerticalLayout.js",["3580","3581","3582"],"// ** React Imports\r\nimport { useState, useEffect } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\n// ** Store & Actions\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  handleMenuCollapsed,\r\n  handleContentWidth,\r\n  handleMenuHidden\r\n} from '@store/layout'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { ArrowUp } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Navbar, Button } from 'reactstrap'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\n// ** Custom Components\r\nimport Customizer from '@components/customizer'\r\nimport ScrollToTop from '@components/scrolltop'\r\nimport FooterComponent from './components/footer'\r\nimport NavbarComponent from './components/navbar'\r\nimport SidebarComponent from './components/menu/vertical-menu'\r\n\r\n// ** Custom Hooks\r\nimport { useRTL } from '@hooks/useRTL'\r\nimport { useSkin } from '@hooks/useSkin'\r\nimport { useNavbarType } from '@hooks/useNavbarType'\r\nimport { useFooterType } from '@hooks/useFooterType'\r\nimport { useNavbarColor } from '@hooks/useNavbarColor'\r\n\r\n// ** Styles\r\nimport '@styles/base/core/menu/menu-types/vertical-menu.scss'\r\nimport '@styles/base/core/menu/menu-types/vertical-overlay-menu.scss'\r\n\r\nconst VerticalLayout = props => {\r\n  // ** Props\r\n  const {\r\n    menu,\r\n    navbar,\r\n    footer,\r\n    menuData,\r\n    children,\r\n    routerProps,\r\n    setLastLayout,\r\n    currentActiveItem\r\n  } = props\r\n\r\n  // ** Hooks\r\n  const [isRtl, setIsRtl] = useRTL()\r\n  const { skin, setSkin } = useSkin()\r\n  const { navbarType, setNavbarType } = useNavbarType()\r\n  const { footerType, setFooterType } = useFooterType()\r\n  const { navbarColor, setNavbarColor } = useNavbarColor()\r\n\r\n  // ** States\r\n  const [isMounted, setIsMounted] = useState(false)\r\n  const [menuVisibility, setMenuVisibility] = useState(false)\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth)\r\n\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const layoutStore = useSelector(state => state.layout)\r\n\r\n  // ** Update Window Width\r\n  const handleWindowWidth = () => {\r\n    setWindowWidth(window.innerWidth)\r\n  }\r\n\r\n  // ** Vars\r\n  const location = useLocation()\r\n  const contentWidth = layoutStore.contentWidth\r\n  const menuCollapsed = layoutStore.menuCollapsed\r\n  const isHidden = layoutStore.menuHidden\r\n\r\n  // ** Toggles Menu Collapsed\r\n  const setMenuCollapsed = val => dispatch(handleMenuCollapsed(val))\r\n\r\n  // ** Handles Content Width\r\n  const setContentWidth = val => dispatch(handleContentWidth(val))\r\n\r\n  // ** Handles Content Width\r\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\r\n\r\n  //** This function will detect the Route Change and will hide the menu on menu item click\r\n  useEffect(() => {\r\n    if (menuVisibility && windowWidth < 1200) {\r\n      setMenuVisibility(false)\r\n    }\r\n  }, [location])\r\n\r\n  //** Sets Window Size & Layout Props\r\n  useEffect(() => {\r\n    if (window !== undefined) {\r\n      window.addEventListener('resize', handleWindowWidth)\r\n    }\r\n  }, [windowWidth])\r\n\r\n  //** ComponentDidMount\r\n  useEffect(() => {\r\n    setIsMounted(true)\r\n    return () => setIsMounted(false)\r\n  }, [])\r\n\r\n  // ** Vars\r\n  const footerClasses = {\r\n    static: 'footer-static',\r\n    sticky: 'footer-fixed',\r\n    hidden: 'footer-hidden'\r\n  }\r\n\r\n  const navbarWrapperClasses = {\r\n    floating: 'navbar-floating',\r\n    sticky: 'navbar-sticky',\r\n    static: 'navbar-static',\r\n    hidden: 'navbar-hidden'\r\n  }\r\n\r\n  const navbarClasses = {\r\n    floating:\r\n      contentWidth === 'boxed' ? 'floating-nav container-xxl' : 'floating-nav',\r\n    sticky: 'fixed-top',\r\n    static: 'navbar-static-top',\r\n    hidden: 'd-none'\r\n  }\r\n\r\n  const bgColorCondition =\r\n    navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\r\n\r\n  if (!isMounted) {\r\n    return null\r\n  }\r\n  return (\r\n    <div\r\n      className={classnames(\r\n        `wrapper vertical-layout ${\r\n          navbarWrapperClasses[navbarType] || 'navbar-floating'\r\n        } ${footerClasses[footerType] || 'footer-static'}`,\r\n        {\r\n          // Modern Menu\r\n          'vertical-menu-modern': windowWidth >= 1200,\r\n          'menu-collapsed': menuCollapsed && windowWidth >= 1200,\r\n          'menu-expanded': !menuCollapsed && windowWidth > 1200,\r\n\r\n          // Overlay Menu\r\n          'vertical-overlay-menu': windowWidth < 1200,\r\n          'menu-hide': !menuVisibility && windowWidth < 1200,\r\n          'menu-open': menuVisibility && windowWidth < 1200\r\n        }\r\n      )}\r\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\r\n    >\r\n      {!isHidden ? (\r\n        <SidebarComponent\r\n          skin={skin}\r\n          menu={menu}\r\n          menuData={menuData}\r\n          routerProps={routerProps}\r\n          menuCollapsed={menuCollapsed}\r\n          menuVisibility={menuVisibility}\r\n          setMenuCollapsed={setMenuCollapsed}\r\n          setMenuVisibility={setMenuVisibility}\r\n          currentActiveItem={currentActiveItem}\r\n        />\r\n      ) : null}\r\n     \r\n\r\n      <Navbar\r\n        expand='lg'\r\n        container={false}\r\n        light={skin !== 'dark'}\r\n        dark={skin === 'dark' || bgColorCondition}\r\n        color={bgColorCondition ? navbarColor : undefined}\r\n        className={classnames(\r\n          `header-navbar navbar align-items-center ${\r\n            navbarClasses[navbarType] || 'floating-nav'\r\n          } navbar-shadow`\r\n        )}\r\n      >\r\n        <div className='navbar-container d-flex content'>\r\n          {navbar ? (\r\n            navbar\r\n          ) : (\r\n            <NavbarComponent\r\n              setMenuVisibility={setMenuVisibility}\r\n              skin={skin}\r\n              setSkin={setSkin}\r\n            />\r\n          )}\r\n        </div>\r\n      </Navbar>\r\n      {children}\r\n\r\n      {/* Vertical Nav Menu Overlay */}\r\n      <div\r\n        className={classnames('sidenav-overlay', {\r\n          show: menuVisibility\r\n        })}\r\n        onClick={() => setMenuVisibility(false)}\r\n      ></div>\r\n      {/* Vertical Nav Menu Overlay */}\r\n\r\n      {themeConfig.layout.customizer === true ? (\r\n        <Customizer\r\n          skin={skin}\r\n          setSkin={setSkin}\r\n          footerType={footerType}\r\n          setFooterType={setFooterType}\r\n          navbarType={navbarType}\r\n          setNavbarType={setNavbarType}\r\n          navbarColor={navbarColor}\r\n          setNavbarColor={setNavbarColor}\r\n          isRtl={isRtl}\r\n          setIsRtl={setIsRtl}\r\n          layout={props.layout}\r\n          setLayout={props.setLayout}\r\n          setLastLayout={setLastLayout}\r\n          isHidden={isHidden}\r\n          setIsHidden={setIsHidden}\r\n          contentWidth={contentWidth}\r\n          setContentWidth={setContentWidth}\r\n          menuCollapsed={menuCollapsed}\r\n          setMenuCollapsed={setMenuCollapsed}\r\n          transition={props.transition}\r\n          setTransition={props.setTransition}\r\n          themeConfig={themeConfig}\r\n        />\r\n      ) : null}\r\n      {/* <footer\r\n        className={classnames(\r\n          `footer footer-light ${footerClasses[footerType] || 'footer-static'}`,\r\n          {\r\n            'd-none': footerType === 'hidden'\r\n          }\r\n        )}\r\n      >\r\n        {footer ? (\r\n          footer\r\n        ) : (\r\n          <FooterComponent\r\n            footerType={footerType}\r\n            footerClasses={footerClasses}\r\n          />\r\n        )}\r\n      </footer> */}\r\n\r\n      {themeConfig.layout.scrollTop === true ? (\r\n        <div className='scroll-to-top'>\r\n          <ScrollToTop showOffset={300} className='scroll-top d-block'>\r\n            <Button className='btn-icon' color='primary'>\r\n              <ArrowUp size={14} />\r\n            </Button>\r\n          </ScrollToTop>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VerticalLayout\r\n","D:\\Utecho\\Scaff-cert\\src\\utility\\hooks\\useSkin.js",[],"D:\\Utecho\\Scaff-cert\\src\\auth\\jwt\\useJwt.js",[],"D:\\Utecho\\Scaff-cert\\src\\router\\routes\\PageLayouts.js",[],"D:\\Utecho\\Scaff-cert\\src\\router\\routes\\Dashboards.js",[],"D:\\Utecho\\Scaff-cert\\src\\router\\routes\\Charts.js",[],"D:\\Utecho\\Scaff-cert\\src\\router\\routes\\Extensions.js",[],"D:\\Utecho\\Scaff-cert\\src\\router\\routes\\UiElements.js",[],"D:\\Utecho\\Scaff-cert\\src\\router\\routes\\Tables.js",[],"D:\\Utecho\\Scaff-cert\\src\\router\\routes\\Pages.js",[],"D:\\Utecho\\Scaff-cert\\src\\router\\routes\\Forms.js",[],"D:\\Utecho\\Scaff-cert\\src\\navigation\\horizontal\\index.js",["3583"],"// ** Navigation imports\r\nimport apps from './apps'\r\nimport pages from './pages'\r\nimport others from './others'\r\nimport charts from './charts'\r\nimport dashboards from './dashboards'\r\nimport uiElements from './ui-elements'\r\nimport formsAndTables from './forms-tables'\r\n\r\n// ** Merge & Export\r\nexport default [...dashboards, ...apps, ...uiElements, ...formsAndTables, ...pages, ...charts, ...others]\r\n","D:\\Utecho\\Scaff-cert\\src\\navigation\\vertical\\index.js",["3584"],"// ** Navigation imports\r\nimport apps from './apps'\r\nimport pages from './pages'\r\nimport forms from './forms'\r\nimport tables from './tables'\r\nimport others from './others'\r\nimport charts from './charts'\r\nimport dashboards from './dashboards'\r\nimport uiElements from './ui-elements'\r\n\r\n// ** Merge & Export\r\nexport default [...dashboards, ...apps, ...pages, ...uiElements, ...forms, ...tables, ...charts, ...others]\r\n","D:\\Utecho\\Scaff-cert\\src\\router\\routes\\Apps.js",[],"D:\\Utecho\\Scaff-cert\\src\\utility\\hooks\\useFooterType.js",[],"D:\\Utecho\\Scaff-cert\\src\\utility\\hooks\\useNavbarColor.js",[],"D:\\Utecho\\Scaff-cert\\src\\utility\\hooks\\useRTL.js",[],"D:\\Utecho\\Scaff-cert\\src\\utility\\hooks\\useNavbarType.js",[],"D:\\Utecho\\Scaff-cert\\src\\@core\\auth\\jwt\\useJwt.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\page-layouts\\LayoutBlank.js",["3585"],"// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Alert } from 'reactstrap'\r\n\r\nconst LayoutBlank = () => {\r\n  return (\r\n    <Fragment>\r\n      <div className='row'>\r\n        <div className='col-12 p-4'>\r\n          <h4 className='mb-2'>Layout Blank</h4>\r\n          <Alert color='primary'>\r\n            <div className='alert-body'>\r\n              <span className='fw-bold'>Info: </span>\r\n              <span>\r\n                This layout is used in Authentication & Miscellaneous page. Please check the{' '}\r\n                <a\r\n                  href='https://pixinvent.com/demo/vuexy-react-admin-dashboard-template/documentation/docs/development/page-layouts'\r\n                  target='_blank'\r\n                >\r\n                  Layout blank documentation\r\n                </a>\r\n                for more details.\r\n              </span>\r\n            </div>\r\n          </Alert>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default LayoutBlank\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\misc\\Maintenance.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\misc\\ComingSoon.js",[],"D:\\Utecho\\Scaff-cert\\src\\navigation\\horizontal\\forms-tables.js",["3586"],"// ** Icons Import\r\nimport {\r\n  Edit,\r\n  Copy,\r\n  Circle,\r\n  Box,\r\n  Package,\r\n  AlertTriangle,\r\n  RotateCw,\r\n  Server,\r\n  Grid\r\n} from 'react-feather'\r\n\r\nexport default [\r\n  {\r\n    id: 'formsAndTable',\r\n    title: 'Forms & Tables',\r\n    icon: <Edit />,\r\n    children: [\r\n      {\r\n        id: 'formElements',\r\n        title: 'Form Elements',\r\n        icon: <Copy />,\r\n        children: [\r\n          {\r\n            id: 'input',\r\n            title: 'Input',\r\n            icon: <Circle />,\r\n            navLink: '/forms/elements/input'\r\n          },\r\n          {\r\n            id: 'inputGroup',\r\n            title: 'Input Groups',\r\n            icon: <Circle />,\r\n            navLink: '/forms/elements/input-group'\r\n          },\r\n          {\r\n            id: 'inputMask',\r\n            title: 'Input Mask',\r\n            icon: <Circle />,\r\n            navLink: '/forms/elements/input-mask'\r\n          },\r\n          {\r\n            id: 'textarea',\r\n            title: 'Textarea',\r\n            icon: <Circle />,\r\n            navLink: '/forms/elements/textarea'\r\n          },\r\n          {\r\n            id: 'checkbox',\r\n            title: 'Checkbox',\r\n            icon: <Circle />,\r\n            navLink: '/forms/elements/checkbox'\r\n          },\r\n          {\r\n            id: 'radio',\r\n            title: 'Radio',\r\n            icon: <Circle />,\r\n            navLink: '/forms/elements/radio'\r\n          },\r\n          {\r\n            id: 'switch',\r\n            title: 'Switch',\r\n            icon: <Circle />,\r\n            navLink: '/forms/elements/switch'\r\n          },\r\n          {\r\n            id: 'select',\r\n            title: 'Select',\r\n            icon: <Circle />,\r\n            navLink: '/forms/elements/select'\r\n          },\r\n          {\r\n            id: 'numberInput',\r\n            title: 'Number Input',\r\n            icon: <Circle />,\r\n            navLink: '/forms/elements/number-input'\r\n          },\r\n          {\r\n            id: 'fileUploader',\r\n            title: 'File Uploader',\r\n            icon: <Circle />,\r\n            navLink: '/forms/elements/file-uploader'\r\n          },\r\n          {\r\n            id: 'quillEditor',\r\n            title: 'Editor',\r\n            icon: <Circle />,\r\n            navLink: '/forms/elements/editor'\r\n          },\r\n          {\r\n            id: 'date_&_timePicker',\r\n            title: 'Date & Time Picker',\r\n            icon: <Circle />,\r\n            navLink: '/forms/elements/pickers'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 'formLayouts',\r\n        title: 'Form Layout',\r\n        icon: <Box />,\r\n        navLink: '/forms/layout/form-layout'\r\n      },\r\n      {\r\n        id: 'wizard',\r\n        title: 'Form Wizard',\r\n        icon: <Package />,\r\n        navLink: '/forms/wizard'\r\n      },\r\n      {\r\n        id: 'formValidation',\r\n        title: 'Form Validation',\r\n        icon: <AlertTriangle size={12} />,\r\n        navLink: '/forms/form-validation'\r\n      },\r\n      {\r\n        id: 'formRepeater',\r\n        title: 'Form Repeater',\r\n        icon: <RotateCw />,\r\n        navLink: '/forms/form-repeater'\r\n      },\r\n      {\r\n        id: 'tablesReactstrap',\r\n        title: 'Table',\r\n        icon: <Server />,\r\n        navLink: '/tables/reactstrap'\r\n      },\r\n      {\r\n        id: 'dataTable',\r\n        title: 'DataTable',\r\n        icon: <Grid />,\r\n        children: [\r\n          {\r\n            id: 'dtBasic',\r\n            title: 'Basic',\r\n            icon: <Circle />,\r\n            navLink: '/datatables/basic'\r\n          },\r\n          {\r\n            id: 'dtAdvance',\r\n            title: 'Advanced',\r\n            icon: <Circle />,\r\n            navLink: '/datatables/advance'\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n]\r\n","D:\\Utecho\\Scaff-cert\\src\\navigation\\horizontal\\ui-elements.js",["3587"],"// ** Icons Import\r\nimport { Layers, Type, Eye, CreditCard, Circle, Briefcase, Box, Layout } from 'react-feather'\r\n\r\nexport default [\r\n  {\r\n    id: 'uiElements',\r\n    title: 'User Interface',\r\n    icon: <Layers />,\r\n    children: [\r\n      {\r\n        id: 'typography',\r\n        title: 'Typography',\r\n        icon: <Type />,\r\n        navLink: '/ui-element/typography'\r\n      },\r\n      {\r\n        id: 'feather',\r\n        title: 'Feather',\r\n        icon: <Eye />,\r\n        navLink: '/icons/reactfeather'\r\n      },\r\n      {\r\n        id: 'cards',\r\n        title: 'Card',\r\n        icon: <CreditCard />,\r\n        badge: 'success',\r\n        badgeText: 'New',\r\n        children: [\r\n          {\r\n            id: 'basic',\r\n            title: 'Basic',\r\n            icon: <Circle />,\r\n            navLink: '/cards/basic'\r\n          },\r\n          {\r\n            id: 'cardAdvance',\r\n            title: 'Advance',\r\n            icon: <Circle />,\r\n            navLink: '/cards/advance'\r\n          },\r\n          {\r\n            id: 'cardStatistics',\r\n            title: 'Statistics',\r\n            icon: <Circle />,\r\n            navLink: '/cards/statistics'\r\n          },\r\n          {\r\n            id: 'CardAnalytics',\r\n            title: 'Analytics',\r\n            icon: <Circle />,\r\n            navLink: '/cards/analytics'\r\n          },\r\n          {\r\n            id: 'cardActions',\r\n            title: 'Actions',\r\n            icon: <Circle />,\r\n            navLink: '/cards/action'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 'components',\r\n        title: 'Components',\r\n        icon: <Briefcase />,\r\n        children: [\r\n          {\r\n            id: 'accordion',\r\n            title: 'Accordion',\r\n            icon: <Circle />,\r\n            navLink: '/components/accordion'\r\n          },\r\n          {\r\n            id: 'alerts',\r\n            title: 'Alerts',\r\n            icon: <Circle />,\r\n            navLink: '/components/alerts'\r\n          },\r\n          {\r\n            id: 'autoComplete',\r\n            title: 'Auto Complete',\r\n            icon: <Circle />,\r\n            navLink: '/components/auto-complete'\r\n          },\r\n          {\r\n            id: 'avatar',\r\n            title: 'Avatar',\r\n            icon: <Circle />,\r\n            navLink: '/components/avatar'\r\n          },\r\n          {\r\n            id: 'badges',\r\n            title: 'Badges',\r\n            icon: <Circle />,\r\n            navLink: '/components/badges'\r\n          },\r\n          {\r\n            id: 'blockui',\r\n            title: 'BlockUI',\r\n            icon: <Circle />,\r\n            navLink: '/components/blockui'\r\n          },\r\n          {\r\n            id: 'breadCrumbs',\r\n            title: 'Breadcrumbs',\r\n            icon: <Circle />,\r\n            navLink: '/components/breadcrumbs'\r\n          },\r\n          {\r\n            id: 'buttons',\r\n            title: 'Buttons',\r\n            icon: <Circle />,\r\n            navLink: '/components/buttons'\r\n          },\r\n          {\r\n            id: 'collapse',\r\n            title: 'Collapse',\r\n            icon: <Circle />,\r\n            navLink: '/components/collapse'\r\n          },\r\n          {\r\n            id: 'divider',\r\n            title: 'Divider',\r\n            icon: <Circle />,\r\n            navLink: '/components/divider'\r\n          },\r\n          {\r\n            id: 'dropDowns',\r\n            title: 'Dropdowns',\r\n            icon: <Circle />,\r\n            navLink: '/components/dropdowns'\r\n          },\r\n          {\r\n            id: 'listGroup',\r\n            title: 'List Group',\r\n            icon: <Circle />,\r\n            navLink: '/components/list-group'\r\n          },\r\n          {\r\n            id: 'modals',\r\n            title: 'Modals',\r\n            icon: <Circle />,\r\n            navLink: '/components/modals'\r\n          },\r\n          {\r\n            id: 'navsComponent',\r\n            title: 'Navs Component',\r\n            icon: <Circle />,\r\n            navLink: '/components/nav-component'\r\n          },\r\n          {\r\n            id: 'offCanvas',\r\n            title: 'OffCanvas',\r\n            icon: <Circle size={12} />,\r\n            navLink: '/components/offcanvas'\r\n          },\r\n          {\r\n            id: 'pagination',\r\n            title: 'Pagination',\r\n            icon: <Circle />,\r\n            navLink: '/components/pagination'\r\n          },\r\n          {\r\n            id: 'pillBadges',\r\n            title: 'Pill Badges',\r\n            icon: <Circle />,\r\n            navLink: '/components/pill-badges'\r\n          },\r\n          {\r\n            id: 'pillsComponent',\r\n            title: 'Pills Component',\r\n            icon: <Circle />,\r\n            navLink: '/components/pills-component'\r\n          },\r\n          {\r\n            id: 'popovers',\r\n            title: 'Popovers',\r\n            icon: <Circle />,\r\n            navLink: '/components/popovers'\r\n          },\r\n          {\r\n            id: 'progress',\r\n            title: 'Progress',\r\n            icon: <Circle />,\r\n            navLink: '/components/progress'\r\n          },\r\n          {\r\n            id: 'spinners',\r\n            title: 'Spinner',\r\n            icon: <Circle />,\r\n            navLink: '/components/spinners'\r\n          },\r\n          {\r\n            id: 'tabsComponent',\r\n            title: 'Tabs Component',\r\n            icon: <Circle />,\r\n            navLink: '/components/tabs-component'\r\n          },\r\n          {\r\n            id: 'timeline',\r\n            title: 'Timeline',\r\n            icon: <Circle />,\r\n            navLink: '/components/timeline'\r\n          },\r\n          {\r\n            id: 'toasts',\r\n            title: 'Toasts',\r\n            icon: <Circle />,\r\n            navLink: '/components/toasts'\r\n          },\r\n          {\r\n            id: 'tooltips',\r\n            title: 'Tooltips',\r\n            icon: <Circle />,\r\n            navLink: '/components/tooltips'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 'extensions',\r\n        title: 'Extensions',\r\n        icon: <Box />,\r\n        children: [\r\n          {\r\n            id: 'sweetAlert',\r\n            title: 'Sweet Alert',\r\n            icon: <Circle />,\r\n            navLink: '/extensions/sweet-alert'\r\n          },\r\n\r\n          {\r\n            id: 'toastr',\r\n            title: 'Toastr',\r\n            icon: <Circle />,\r\n            navLink: '/extensions/toastr'\r\n          },\r\n          {\r\n            id: 'slider',\r\n            title: 'Sliders',\r\n            icon: <Circle />,\r\n            navLink: '/extensions/slider'\r\n          },\r\n          {\r\n            id: 'drag_&_drop',\r\n            title: 'Drag & Drop',\r\n            icon: <Circle />,\r\n            navLink: '/extensions/drag-and-drop'\r\n          },\r\n          {\r\n            id: 'tour',\r\n            title: 'Tour',\r\n            icon: <Circle />,\r\n            navLink: '/extensions/tour'\r\n          },\r\n          {\r\n            id: 'clipBoard',\r\n            title: 'Clipboard',\r\n            icon: <Circle />,\r\n            navLink: '/extensions/clipboard'\r\n          },\r\n          {\r\n            id: 'reactPlayer',\r\n            title: 'React Player',\r\n            icon: <Circle />,\r\n            navLink: '/extensions/react-player'\r\n          },\r\n          {\r\n            id: 'contentMenu',\r\n            title: 'Context Menu',\r\n            icon: <Circle />,\r\n            navLink: '/extensions/context-menu'\r\n          },\r\n          {\r\n            id: 'swiper',\r\n            title: 'Swiper',\r\n            icon: <Circle />,\r\n            navLink: '/extensions/swiper'\r\n          },\r\n          {\r\n            id: 'ratings',\r\n            title: 'Ratings',\r\n            icon: <Circle />,\r\n            navLink: '/extensions/ratings'\r\n          },\r\n          {\r\n            id: 'i18n',\r\n            title: 'I18n',\r\n            icon: <Circle />,\r\n            navLink: '/extensions/i18n'\r\n          },\r\n          {\r\n            id: 'extPagination',\r\n            title: 'React Paginate',\r\n            icon: <Circle />,\r\n            navLink: '/extensions/pagination'\r\n          },\r\n          {\r\n            id: 'extImport',\r\n            title: 'Import',\r\n            icon: <Circle />,\r\n            navLink: '/extensions/import'\r\n          },\r\n          {\r\n            id: 'extExport',\r\n            title: 'Export',\r\n            icon: <Circle />,\r\n            navLink: '/extensions/export'\r\n          },\r\n          {\r\n            id: 'extExportSelected',\r\n            title: 'Export Selected',\r\n            icon: <Circle />,\r\n            navLink: '/extensions/export-selected'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 'pageLayouts',\r\n        title: 'Page Layouts',\r\n        icon: <Layout />,\r\n        children: [\r\n          {\r\n            id: 'layoutBoxed',\r\n            title: 'Layout Boxed',\r\n            icon: <Circle />,\r\n            navLink: '/page-layout/layout-boxed'\r\n          },\r\n          {\r\n            id: 'withoutMenu',\r\n            title: 'Without Menu',\r\n            icon: <Circle />,\r\n            navLink: '/page-layout/without-menu'\r\n          },\r\n          {\r\n            id: 'layoutEmpty',\r\n            title: 'Layout Empty',\r\n            icon: <Circle />,\r\n            navLink: '/page-layout/layout-empty'\r\n          },\r\n          {\r\n            id: 'layoutBlank',\r\n            title: 'Layout Blank',\r\n            icon: <Circle />,\r\n            navLink: '/page-layout/layout-blank'\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n]\r\n","D:\\Utecho\\Scaff-cert\\src\\navigation\\vertical\\ui-elements.js",["3588","3589","3590","3591","3592","3593","3594","3595"],"// ** Icons Import\r\nimport {\r\n  Type,\r\n  Eye,\r\n  CreditCard,\r\n  Circle,\r\n  Briefcase,\r\n  Box,\r\n  Layout\r\n} from 'react-feather'\r\n\r\nexport default []\r\n\r\n// {\r\n//   header: 'User Interface'\r\n// },\r\n// {\r\n//   id: 'typography',\r\n//   title: 'Typography',\r\n//   icon: <Type size={12} />,\r\n//   navLink: '/ui-element/typography'\r\n// },\r\n// {\r\n//   id: 'feather',\r\n//   title: 'Feather',\r\n//   icon: <Eye size={20} />,\r\n//   navLink: '/icons/reactfeather'\r\n// },\r\n// {\r\n//   id: 'cards',\r\n//   title: 'Card',\r\n//   icon: <CreditCard size={20} />,\r\n//   badge: 'light-success',\r\n//   badgeText: 'New',\r\n//   children: [\r\n//     {\r\n//       id: 'basic',\r\n//       title: 'Basic',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/cards/basic'\r\n//     },\r\n//     {\r\n//       id: 'cardAdvance',\r\n//       title: 'Advance',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/cards/advance'\r\n//     },\r\n//     {\r\n//       id: 'cardStatistics',\r\n//       title: 'Statistics',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/cards/statistics'\r\n//     },\r\n//     {\r\n//       id: 'CardAnalytics',\r\n//       title: 'Analytics',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/cards/analytics'\r\n//     },\r\n//     {\r\n//       id: 'cardActions',\r\n//       title: 'Actions',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/cards/action'\r\n//     }\r\n//   ]\r\n// },\r\n// {\r\n//   id: 'components',\r\n//   title: 'Components',\r\n//   icon: <Briefcase size={20} />,\r\n//   children: [\r\n//     {\r\n//       id: 'accordion',\r\n//       title: 'Accordion',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/components/accordion'\r\n//     },\r\n//     {\r\n//       id: 'alerts',\r\n//       title: 'Alerts',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/components/alerts'\r\n//     },\r\n//     {\r\n//       id: 'autoComplete',\r\n//       title: 'Auto Complete',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/components/auto-complete'\r\n//     },\r\n//     {\r\n//       id: 'avatar',\r\n//       title: 'Avatar',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/components/avatar'\r\n//     },\r\n//     {\r\n//       id: 'badges',\r\n//       title: 'Badges',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/components/badges'\r\n//     },\r\n//     {\r\n//       id: 'blockui',\r\n//       title: 'BlockUI',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/components/blockui'\r\n//     },\r\n//     {\r\n//       id: 'breadCrumbs',\r\n//       title: 'Breadcrumbs',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/components/breadcrumbs'\r\n//     },\r\n//     {\r\n//       id: 'buttons',\r\n//       title: 'Buttons',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/components/buttons'\r\n//     },\r\n//     {\r\n//       id: 'collapse',\r\n//       title: 'Collapse',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/components/collapse'\r\n//     },\r\n//     {\r\n//       id: 'divider',\r\n//       title: 'Divider',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/components/divider'\r\n//     },\r\n//     {\r\n//       id: 'dropDowns',\r\n//       title: 'Dropdowns',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/components/dropdowns'\r\n//     },\r\n//     {\r\n//       id: 'listGroup',\r\n//       title: 'List Group',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/components/list-group'\r\n//     },\r\n//     {\r\n//       id: 'modals',\r\n//       title: 'Modals',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/components/modals'\r\n//     },\r\n//     {\r\n//       id: 'navsComponent',\r\n//       title: 'Navs Component',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/components/nav-component'\r\n//     },\r\n//     {\r\n//       id: 'offCanvas',\r\n//       title: 'OffCanvas',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/components/offcanvas'\r\n//     },\r\n//     {\r\n//       id: 'pagination',\r\n//       title: 'Pagination',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/components/pagination'\r\n//     },\r\n//     {\r\n//       id: 'pillBadges',\r\n//       title: 'Pill Badges',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/components/pill-badges'\r\n//     },\r\n//     {\r\n//       id: 'pillsComponent',\r\n//       title: 'Pills Component',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/components/pills-component'\r\n//     },\r\n//     {\r\n//       id: 'popovers',\r\n//       title: 'Popovers',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/components/popovers'\r\n//     },\r\n//     {\r\n//       id: 'progress',\r\n//       title: 'Progress',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/components/progress'\r\n//     },\r\n//     {\r\n//       id: 'spinners',\r\n//       title: 'Spinner',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/components/spinners'\r\n//     },\r\n//     {\r\n//       id: 'tabsComponent',\r\n//       title: 'Tabs Component',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/components/tabs-component'\r\n//     },\r\n//     {\r\n//       id: 'timeline',\r\n//       title: 'Timeline',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/components/timeline'\r\n//     },\r\n//     {\r\n//       id: 'toasts',\r\n//       title: 'Toasts',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/components/toasts'\r\n//     },\r\n//     {\r\n//       id: 'tooltips',\r\n//       title: 'Tooltips',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/components/tooltips'\r\n//     }\r\n//   ]\r\n// },\r\n// {\r\n//   id: 'extensions',\r\n//   title: 'Extensions',\r\n//   icon: <Box size={20} />,\r\n//   children: [\r\n//     {\r\n//       id: 'sweetAlert',\r\n//       title: 'Sweet Alert',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/extensions/sweet-alert'\r\n//     },\r\n//     {\r\n//       id: 'toastr',\r\n//       title: 'Toastr',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/extensions/toastr'\r\n//     },\r\n//     {\r\n//       id: 'slider',\r\n//       title: 'Sliders',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/extensions/slider'\r\n//     },\r\n//     {\r\n//       id: 'drag_&_drop',\r\n//       title: 'Drag & Drop',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/extensions/drag-and-drop'\r\n//     },\r\n//     {\r\n//       id: 'tour',\r\n//       title: 'Tour',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/extensions/tour'\r\n//     },\r\n//     {\r\n//       id: 'clipBoard',\r\n//       title: 'Clipboard',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/extensions/clipboard'\r\n//     },\r\n//     {\r\n//       id: 'reactPlayer',\r\n//       title: 'React Player',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/extensions/react-player'\r\n//     },\r\n//     {\r\n//       id: 'contentMenu',\r\n//       title: 'Context Menu',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/extensions/context-menu'\r\n//     },\r\n//     {\r\n//       id: 'swiper',\r\n//       title: 'Swiper',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/extensions/swiper'\r\n//     },\r\n//     {\r\n//       id: 'ratings',\r\n//       title: 'Ratings',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/extensions/ratings'\r\n//     },\r\n//     {\r\n//       id: 'i18n',\r\n//       title: 'I18n',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/extensions/i18n'\r\n//     },\r\n//     {\r\n//       id: 'extPagination',\r\n//       title: 'React Paginate',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/extensions/pagination'\r\n//     },\r\n//     {\r\n//       id: 'extImport',\r\n//       title: 'Import',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/extensions/import'\r\n//     },\r\n//     {\r\n//       id: 'extExport',\r\n//       title: 'Export',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/extensions/export'\r\n//     },\r\n//     {\r\n//       id: 'extExportSelected',\r\n//       title: 'Export Selected',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/extensions/export-selected'\r\n//     }\r\n//   ]\r\n// },\r\n// {\r\n//   id: 'pageLayouts',\r\n//   title: 'Page Layouts',\r\n//   icon: <Layout size={20} />,\r\n//   children: [\r\n//     {\r\n//       id: 'collapsedMenu',\r\n//       title: 'Collapsed Menu',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/page-layout/collapse-menu'\r\n//     },\r\n//     {\r\n//       id: 'layoutBoxed',\r\n//       title: 'Layout Boxed',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/page-layout/layout-boxed'\r\n//     },\r\n//     {\r\n//       id: 'withoutMenu',\r\n//       title: 'Without Menu',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/page-layout/without-menu'\r\n//     },\r\n//     {\r\n//       id: 'layoutEmpty',\r\n//       title: 'Layout Empty',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/page-layout/layout-empty'\r\n//     },\r\n//     {\r\n//       id: 'layoutBlank',\r\n//       title: 'Layout Blank',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/page-layout/layout-blank'\r\n//     }\r\n//   ]\r\n// }\r\n","D:\\Utecho\\Scaff-cert\\src\\navigation\\vertical\\dashboards.js",["3596","3597"],"// ** Icons Import\r\nimport { Home, Circle } from 'react-feather'\r\n\r\nexport default [\r\n  {\r\n    id: 'dashboards',\r\n    title: 'Dashboards',\r\n\r\n    icon: <Home size={20} />,\r\n    // badge: 'light-warning',\r\n    // badgeText: '2',\r\n    // navLink:\"\",\r\n    navLink: '/dashboard',\r\n    // children: [\r\n    //   {\r\n    //     id: 'analyticsDash',\r\n    //     title: 'Analytics',\r\n    //     icon: <Circle size={12} />,\r\n    //     navLink: '/dashboard/analytics'\r\n    //   },\r\n    // {\r\n    //   id: 'eCommerceDash',\r\n    //   title: 'eCommerce',\r\n    //   icon: <Circle size={12} />,\r\n    //   navLink: '/dashboard/ecommerce'\r\n    // }\r\n\r\n    // ]\r\n  }\r\n]\r\n","D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\components\\navbar\\index.js",["3598"],"// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Custom Components\r\nimport NavbarUser from './NavbarUser'\r\nimport NavbarBookmarks from './NavbarBookmarks'\r\nimport { transparentBg } from '@src/assets/images/svg/transparent.svg';\r\n\r\nconst ThemeNavbar = (props) => {\r\n  // ** Props\r\n  const { skin, setSkin, setMenuVisibility } = props;\r\n\r\n  const myInlineStyles = {\r\n    backgroundColor: 'transparent',\r\n    outline: 'none',\r\n    color: 'white',\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n      <div className='bookmark-wrapper d-flex align-items-center flex-row-reverse'>\r\n        <div className='d-flex align-items-center ms-1'>\r\n          <img className='search_icon' src=\"./icons/search.png\" alt=\"\" />\r\n          <input className='border-0 ms-1 w-100' style={myInlineStyles} type=\"search\" placeholder='Search(Ctrl +/)' />\r\n\r\n        </div>\r\n        <NavbarBookmarks setMenuVisibility={setMenuVisibility} />\r\n      </div>\r\n      <NavbarUser skin={skin} setSkin={setSkin} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ThemeNavbar\r\n","D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\components\\footer\\index.js",["3599","3600"],"// ** Icons Import\r\nimport { Heart } from 'react-feather'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <p className='clearfix mb-0'>\r\n      <span className='float-md-start d-block d-md-inline-block mt-25'>\r\n        COPYRIGHT © {new Date().getFullYear()}{' '}\r\n        <a href='#' target='_blank' rel='noopener noreferrer'>\r\n          Logistics Network\r\n        </a>\r\n        <span className='d-none d-sm-inline-block'>, All rights Reserved</span>\r\n      </span>\r\n      {/* <span className='float-md-end d-none d-md-block'>\r\n        Hand-crafted & Made with\r\n        <Heart size={14} />\r\n      </span> */}\r\n    </p>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\components\\menu\\vertical-menu\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\@core\\components\\scrolltop\\index.js",["3601"],"// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\n\r\nconst ScrollTop = props => {\r\n  // ** Props\r\n  const { showOffset, scrollBehaviour, children, ...rest } = props\r\n\r\n  // ** State\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (window) {\r\n      window.addEventListener('scroll', () => {\r\n        if (window.pageYOffset >= showOffset) {\r\n          setVisible(true)\r\n        } else {\r\n          setVisible(false)\r\n        }\r\n      })\r\n    }\r\n  }, [])\r\n\r\n  const handleScrollToTop = () => {\r\n    window.scroll({ top: 0, behavior: scrollBehaviour })\r\n  }\r\n\r\n  return (\r\n    visible && (\r\n      <div className='scroll-to-top' onClick={handleScrollToTop} {...rest}>\r\n        {children}\r\n      </div>\r\n    )\r\n  )\r\n}\r\n\r\nexport default ScrollTop\r\n\r\n// ** PropTypes\r\nScrollTop.propTypes = {\r\n  showOffset: Proptypes.number,\r\n  children: Proptypes.any.isRequired,\r\n  scrollBehaviour: Proptypes.oneOf(['smooth', 'instant', 'auto'])\r\n}\r\n\r\nScrollTop.defaultProps = {\r\n  scrollBehaviour: 'smooth'\r\n}\r\n","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Job_detail.js",["3602","3603","3604","3605","3606","3607"],"import \"@styles/react/apps/app-users.scss\";\r\nimport ClientDataTable from \"./table\";\r\nimport \"./table.css\";\r\n\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\";\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport \"./table.css\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport code_Qr from \"../../Admin/assests/qr-code2.png\";\r\nimport reportIcon from \"../../Admin/assests/icons/report_icon.png\";\r\nimport inspecPhoto from \"../../Admin/assests/inspecPhoto.png\";\r\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\r\nimport Spinerr from \"../../views/components/spinners/SpinnerGrowing\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  UncontrolledButtonDropdown,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n} from \"reactstrap\";\r\nimport { MoreHorizontal, Trash, Edit2 } from \"react-feather\";\r\nimport { Button } from \"reactstrap\";\r\nimport { log } from \"@craco/craco/lib/logger\";\r\n\r\nconst iconSize = {\r\n  width: \"20px\",\r\n  height: \"20px\",\r\n};\r\n\r\nconst inspe_photo = {\r\n  width: \"85px\",\r\n  height: \"85px\",\r\n  borderRadius: \"8px\",\r\n};\r\n\r\nconst JobDetail = () => {\r\n  // get\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const { id } = useParams();\r\n  const [dataRow, setDataRow] = useState({});\r\n\r\n  function getData(id) {\r\n    setIsLoading(true);\r\n    axios\r\n      .post(`${global.BASEURL}getRecords/jobs`)\r\n      .then((res) => {\r\n        const matchedData = res.data.data.find((item) => item._id === id);\r\n        setDataRow(matchedData);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data: \", error);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData(id);\r\n  }, [id]);\r\n\r\n  let data = [\r\n    {\r\n      srno: \"09\",\r\n      job_no: \"7003\",\r\n      inpsection_date: \"27-03-2023\",\r\n      rep: \"Max Well\",\r\n      inspection_report: (\r\n        <>\r\n          <img style={iconSize} src={reportIcon} alt=\"\" />\r\n        </>\r\n      ),\r\n      photo: (\r\n        <div>\r\n          <img style={inspe_photo} src={inspecPhoto} alt=\"\" />\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Sr.no\",\r\n      selector: (row) => row.srno,\r\n      sortable: \"true\",\r\n      maxWidth: \"2rem\",\r\n    },\r\n    {\r\n      name: \"Job Number\",\r\n      selector: (row) => row.job_no,\r\n      sortable: \"true\",\r\n      // maxWidth: \"2rem\",\r\n    },\r\n    {\r\n      name: \"Inspection Date\",\r\n      selector: (row) => row.inpsection_date,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Rep\",\r\n      selector: (row) => row.rep,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Inspection Report\",\r\n      selector: (row) => row.inspection_report,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Photo\",\r\n      selector: (row) => row.photo,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      allowOverflow: true,\r\n      maxWidth: \"7rem\",\r\n      minWidth: \"2rem\",\r\n      cell: () => {\r\n        // modal edit\r\n\r\n        return (\r\n          <div className=\"d-flex justify-content-center w-100\">\r\n            <UncontrolledDropdown className=\"\">\r\n              <DropdownToggle className=\"pe-1 \" tag=\"span\">\r\n                <MoreHorizontal size={15} />\r\n              </DropdownToggle>\r\n              <DropdownMenu end>\r\n                <DropdownItem>\r\n                  <div className=\"btn btn-white w-100 p-0 m-0\">\r\n                    <span className=\"align-middle ms-50\">Edit</span>\r\n                  </div>\r\n                </DropdownItem>\r\n\r\n                <DropdownItem>\r\n                  <div className=\"btn btn-white w-100 p-0 m-0\">\r\n                    <span className=\"align-middle ms-50\">Delete</span>\r\n                  </div>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  // tabel secound data satrt\r\n  let data2 = [\r\n    {\r\n      srno: \"09\",\r\n      ass_rep: \"7003\",\r\n      per_req: \"Lorem\",\r\n      ppp_req: \"Lorem\",\r\n      employee: \"Max Well\",\r\n    },\r\n  ];\r\n\r\n  const columns2 = [\r\n    {\r\n      name: \"Sr.no\",\r\n      selector: (row) => row.srno,\r\n      sortable: \"true\",\r\n      maxWidth: \"2rem\",\r\n    },\r\n    {\r\n      name: \"Assigned Rep\",\r\n      selector: (row) => row.ass_rep,\r\n      sortable: \"true\",\r\n      // maxWidth: \"2rem\",\r\n    },\r\n    {\r\n      name: \"Permits Required\",\r\n      selector: (row) => row.per_req,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"P.P.E Required\",\r\n      selector: (row) => row.ppp_req,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Employee\",\r\n      selector: (row) => row.employee,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n\r\n    {\r\n      name: \"Action\",\r\n      allowOverflow: true,\r\n      maxWidth: \"7rem\",\r\n      minWidth: \"2rem\",\r\n      cell: () => {\r\n        // modal edit\r\n\r\n        return (\r\n          <div className=\"d-flex justify-content-center w-100\">\r\n            <UncontrolledDropdown className=\"\">\r\n              <DropdownToggle className=\"pe-1 \" tag=\"span\">\r\n                <MoreHorizontal size={15} />\r\n              </DropdownToggle>\r\n              <DropdownMenu end>\r\n                <DropdownItem>\r\n                  <div className=\"btn btn-white w-100 p-0 m-0\">\r\n                    <span className=\"align-middle ms-50\">Edit</span>\r\n                  </div>\r\n                </DropdownItem>\r\n\r\n                <DropdownItem>\r\n                  <div className=\"btn btn-white w-100 p-0 m-0\">\r\n                    <span className=\"align-middle ms-50\">Delete</span>\r\n                  </div>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  // tabel therd data satrt\r\n  let data3 = [\r\n    {\r\n      srno: \"09\",\r\n      inventory_name: \"Standard 3.0m\",\r\n      qty: \"1\",\r\n      total_weight: \"18\",\r\n      employee: \"Max Well\",\r\n    },\r\n  ];\r\n\r\n  const columns3 = [\r\n    {\r\n      name: \"Sr.no\",\r\n      selector: (row) => row.srno,\r\n      sortable: \"true\",\r\n      maxWidth: \"2rem\",\r\n    },\r\n    {\r\n      name: \"Inventroy Name\",\r\n      selector: (row) => row.inventory_name,\r\n      sortable: \"true\",\r\n      // maxWidth: \"2rem\",\r\n    },\r\n    {\r\n      name: \"Qty\",\r\n      selector: (row) => row.qty,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Total Weight()Kg\",\r\n      selector: (row) => row.total_weight,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n  ];\r\n\r\n  // tabel fourth data satrt\r\n  let data4 = [\r\n    {\r\n      srno: \"09\",\r\n      delivery_id: \"DEL-1188\",\r\n      job_number: \"50600\",\r\n      date: \"18-03-2023\",\r\n      rep: \"Non\",\r\n      photo: (\r\n        <div>\r\n          <img style={inspe_photo} src={inspecPhoto} alt=\"\" />\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const columns4 = [\r\n    {\r\n      name: \"Sr.no\",\r\n      selector: (row) => row.srno,\r\n      sortable: \"true\",\r\n      maxWidth: \"2rem\",\r\n    },\r\n    {\r\n      name: \"Delivery ID\",\r\n      selector: (row) => row.delivery_id,\r\n      sortable: \"true\",\r\n      // maxWidth: \"2rem\",\r\n    },\r\n    {\r\n      name: \"Job Number\",\r\n      selector: (row) => row.job_number,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: (row) => row.date,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Rep\",\r\n      selector: (row) => row.rep,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Photo\",\r\n      selector: (row) => row.photo,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      allowOverflow: true,\r\n      maxWidth: \"7rem\",\r\n      minWidth: \"2rem\",\r\n      cell: () => {\r\n        // modal edit\r\n\r\n        return (\r\n          <div className=\"d-flex justify-content-center w-100\">\r\n            <UncontrolledDropdown className=\"\">\r\n              <DropdownToggle className=\"pe-1 \" tag=\"span\">\r\n                <MoreHorizontal size={15} />\r\n              </DropdownToggle>\r\n              <DropdownMenu end>\r\n                <DropdownItem>\r\n                  <div className=\"btn btn-white w-100 p-0 m-0\">\r\n                    <span className=\"align-middle ms-50\">Edit</span>\r\n                  </div>\r\n                </DropdownItem>\r\n\r\n                <DropdownItem>\r\n                  <div className=\"btn btn-white w-100 p-0 m-0\">\r\n                    <span className=\"align-middle ms-50\">Delete</span>\r\n                  </div>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  // tabel fiver data satrt\r\n  let data5 = [\r\n    {\r\n      srno: \"09\",\r\n      item_name: \"DEL-1188\",\r\n      qty: \"19\",\r\n      weight: \"18\",\r\n      job: \"Non\",\r\n      branch: \"Branch\",\r\n    },\r\n  ];\r\n\r\n  const columns5 = [\r\n    {\r\n      name: \"Sr.no\",\r\n      selector: (row) => row.srno,\r\n      sortable: \"true\",\r\n      maxWidth: \"2rem\",\r\n    },\r\n    {\r\n      name: \"Item Name\",\r\n      selector: (row) => row.item_name,\r\n      sortable: \"true\",\r\n      // maxWidth: \"2rem\",\r\n    },\r\n    {\r\n      name: \"Qty\",\r\n      selector: (row) => row.qty,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Weight\",\r\n      selector: (row) => row.weight,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Job\",\r\n      selector: (row) => row.job,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Branch\",\r\n      selector: (row) => row.branch,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n  ];\r\n\r\n  const [activeTabSection1, setActiveTabSection1] = useState(\"1\");\r\n\r\n  const toggleTabSection1 = (tab) => {\r\n    if (activeTabSection1 !== tab) {\r\n      setActiveTabSection1(tab);\r\n    }\r\n  };\r\n  // edit client modal start\r\n\r\n  // end\r\n\r\n  const codeStyle = {\r\n    width: \"200px\",\r\n    height: \"200px\",\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex_space mt-3 mb-3\">\r\n        <h5 className=\"head_title\"> Job Number: {dataRow.job_no}</h5>\r\n        <div className=\"d-flex align-items-center\">\r\n          <div>\r\n            <Button className=\"default_btn\">Edit Job</Button>\r\n          </div>\r\n          <div className=\"ms-2\">\r\n            <Button className=\"default_btn\">Add New Job</Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Fragment>\r\n        <Nav tabs justified>\r\n          <NavItem>\r\n            <NavLink\r\n              className={activeTabSection1 === \"1\" ? \"active\" : \"\"}\r\n              onClick={() => {\r\n                toggleTabSection1(\"1\");\r\n              }}\r\n            >\r\n              Job Info\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink\r\n              className={activeTabSection1 === \"2\" ? \"active\" : \"\"}\r\n              onClick={() => {\r\n                toggleTabSection1(\"2\");\r\n              }}\r\n            >\r\n              Inspection\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink\r\n              className={activeTabSection1 === \"3\" ? \"active\" : \"\"}\r\n              onClick={() => {\r\n                toggleTabSection1(\"3\");\r\n              }}\r\n            >\r\n              JSA\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink\r\n              className={activeTabSection1 === \"4\" ? \"active\" : \"\"}\r\n              onClick={() => {\r\n                toggleTabSection1(\"4\");\r\n              }}\r\n            >\r\n              Job Inventory Items\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink\r\n              className={activeTabSection1 === \"5\" ? \"active\" : \"\"}\r\n              onClick={() => {\r\n                toggleTabSection1(\"5\");\r\n              }}\r\n            >\r\n              Delivery/Return Docket\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink\r\n              className={activeTabSection1 === \"6\" ? \"active\" : \"\"}\r\n              onClick={() => {\r\n                toggleTabSection1(\"6\");\r\n              }}\r\n            >\r\n              Adjustment Docket\r\n            </NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n        <TabContent className=\"py-50\" activeTab={activeTabSection1}>\r\n          {/* Job Info tab */}\r\n          <TabPane tabId=\"1\">\r\n            <div className=\"table_main p-1\">\r\n              <h4 className=\"head_title ms-2 mb-1\">Job Information</h4>\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  {isLoading ? (\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        height: \"100%\",\r\n                      }}\r\n                    >\r\n                      <Spinerr />\r\n                    </div>\r\n                  ) : dataRow.length === 0 ? (\r\n                    <p>There is no data to show.</p>\r\n                  ) : (\r\n                    <Row className=\"mt-2\">\r\n                      <Col lg=\"6\" md=\"6\" sm=\"6\">\r\n                        <Row className=\"mb-2\">\r\n                          <Col lg=\"6\">\r\n                            <h5 className=\"job_cont\">Job Number:</h5>\r\n                          </Col>\r\n                          <Col lg=\"6\">\r\n                            <h5 className=\"job_cont\">{dataRow.job_no}</h5>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row className=\"mb-2\">\r\n                          <Col lg=\"6\">\r\n                            <h5 className=\"job_cont\">Job Name:</h5>\r\n                          </Col>\r\n                          <Col lg=\"6\">\r\n                            <h5 className=\"job_cont\">{dataRow.job_name}</h5>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row className=\"mb-2\">\r\n                          <Col lg=\"6\">\r\n                            <h5 className=\"job_cont\">Client Name:</h5>\r\n                          </Col>\r\n                          <Col lg=\"6\">\r\n                            <h5 className=\"job_cont\">{dataRow.client}</h5>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row className=\"mb-2\">\r\n                          <Col lg=\"6\">\r\n                            <h5 className=\"job_cont\">Assigned Group:</h5>\r\n                          </Col>\r\n                          <Col lg=\"6\">\r\n                            <h5 className=\"job_cont\">{dataRow.group}</h5>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row className=\"mb-2\">\r\n                          <Col lg=\"6\">\r\n                            <h5 className=\"job_cont\">Job Address:</h5>\r\n                          </Col>\r\n                          <Col lg=\"6\">\r\n                            <h5 className=\"job_cont\">{dataRow.job_address}</h5>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row className=\"mb-2\">\r\n                          <Col lg=\"6\">\r\n                            <h5 className=\"job_cont\">Descripton:</h5>\r\n                          </Col>\r\n                          <Col lg=\"6\">\r\n                            <h5 className=\"job_cont\">{dataRow.description}</h5>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row className=\"mb-2\">\r\n                          <Col lg=\"6\">\r\n                            <h5 className=\"job_cont\">Load Rating:</h5>\r\n                          </Col>\r\n                          <Col lg=\"6\">\r\n                            <h5 className=\"job_cont\">{dataRow.load_rating}</h5>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row className=\"mb-2\">\r\n                          <Col lg=\"6\">\r\n                            <h5 className=\"job_cont\">Drawing Number:</h5>\r\n                          </Col>\r\n                          <Col lg=\"6\">\r\n                            <h5 className=\"job_cont\">\r\n                              {dataRow.drawing_numbers}\r\n                            </h5>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row className=\"mb-2\">\r\n                          <Col lg=\"6\">\r\n                            <h5 className=\"job_cont\">Intended Purpose:</h5>\r\n                          </Col>\r\n                          <Col lg=\"6\">\r\n                            <h5 className=\"job_cont\">{dataRow.purpose}</h5>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                      <Col lg=\"6\" md=\"6\" sm=\"6\">\r\n                        <div style={{ float: \"right\" }}>\r\n                          <img style={codeStyle} src={code_Qr} alt=\"\" />\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TabPane>\r\n          {/* Inspection tab */}\r\n          <TabPane  tabId=\"2\">\r\n            <div className=\"flex_space mt-3 mb-3\">\r\n              <h4 className=\"head_title ms-2 mb-1\">Job Inspection</h4>\r\n              <input\r\n                style={{ width: \"fit-content\" }}\r\n                className=\"form-control\"\r\n                placeholder=\"Search....\"\r\n                type=\"search\"\r\n              />\r\n            </div>\r\n            <div className=\"table_main p-1 mt-2 pb-3\">\r\n              <ClientDataTable columns={columns} data={data} />\r\n            </div>\r\n          </TabPane>\r\n          {/* JSA tab */}\r\n          <TabPane tabId=\"3\">\r\n            <div className=\"flex_space mt-3 mb-3\">\r\n              <h4 className=\"head_title ms-2 mb-1\">JSA</h4>\r\n            </div>\r\n            <div className=\"table_main p-1 mt-2 pb-3\">\r\n              <ClientDataTable columns={columns2} data={data2} />\r\n            </div>\r\n          </TabPane>\r\n          {/* Job Inventory Items tab */}\r\n          <TabPane tabId=\"4\">\r\n            <div className=\"flex_space mt-3 mb-3\">\r\n              <h4 className=\"head_title ms-2 mb-1\">Job Inventory Items</h4>\r\n              <input\r\n                placeholder=\"Search...\"\r\n                style={{ width: \"fit-content\" }}\r\n                className=\"form-control\"\r\n                type=\"search\"\r\n              />\r\n            </div>\r\n            <div className=\"table_main p-1 mt-2 pb-3\">\r\n              <ClientDataTable columns={columns3} data={data3} />\r\n            </div>\r\n          </TabPane>\r\n          {/* Delivery/Return Docket tab */}\r\n          <TabPane tabId=\"5\">\r\n            <div className=\"flex_space mt-3 mb-3\">\r\n              <h4 className=\"head_title ms-2 mb-1\">Delivery Docket</h4>\r\n              <input\r\n                placeholder=\"Search...\"\r\n                style={{ width: \"fit-content\" }}\r\n                className=\"form-control\"\r\n                type=\"search\"\r\n              />\r\n            </div>\r\n            <div className=\"table_main p-1 mt-2 pb-3\">\r\n              <ClientDataTable columns={columns4} data={data4} />\r\n            </div>\r\n\r\n            {/* section secund */}\r\n\r\n            <div className=\"flex_space mt-3 mb-3\">\r\n              <h4 className=\"head_title ms-2 mb-1\">Inventory Items</h4>\r\n              <input\r\n                placeholder=\"Search...\"\r\n                style={{ width: \"fit-content\" }}\r\n                className=\"form-control\"\r\n                type=\"search\"\r\n              />\r\n            </div>\r\n            <div className=\"table_main p-1 mt-2 pb-3\">\r\n              <ClientDataTable columns={columns4} data={data4} />\r\n            </div>\r\n          </TabPane>\r\n          {/* Adjustment Docket tab */}\r\n          <TabPane tabId=\"6\">\r\n            <div className=\"flex_space mt-3 mb-3\">\r\n              <h4 className=\"head_title ms-2 mb-1\">Adjustment Docket</h4>\r\n              <input\r\n                placeholder=\"Search...\"\r\n                style={{ width: \"fit-content\" }}\r\n                className=\"form-control\"\r\n                type=\"search\"\r\n              />\r\n            </div>\r\n            <div className=\"table_main p-1 mt-2 pb-3\">\r\n              <ClientDataTable columns={columns5} data={data5} />\r\n            </div>\r\n          </TabPane>\r\n        </TabContent>\r\n\r\n        {/* secound tab start */}\r\n      </Fragment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JobDetail;\r\n","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Branch_inventory.js",["3608","3609","3610","3611","3612","3613"],"import \"@styles/react/apps/app-users.scss\";\r\nimport ClientDataTable from \"./table\";\r\nimport \"./table.css\";\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport active from \"../../Admin/assests/icons/active.png\";\r\nimport block from \"../../Admin/assests/icons/block.png\";\r\nimport inventory_order2 from \"../../Admin/assests/side_icon/inventory_order2.png\";\r\nimport Select from \"react-select\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport {\r\n  UncontrolledButtonDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Form,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n} from \"reactstrap\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n// for spinner\r\nimport Spinerr from \"../../views/components/spinners/SpinnerGrowing\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst BranchInventory = () => {\r\n  const history = useHistory();\r\n\r\n  const queryParams = new URLSearchParams(history.location.search);\r\n  const itemName = queryParams.get(\"bN\");\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [defaultData_, setDefaultData_] = useState(\"\");\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [branch_code, setBranch_code] = useState(itemName);\r\n  const [quantity, setQuantity] = useState(\"\");\r\n  const [weight, setWeight] = useState(\"\");\r\n  const [status, setStatus] = useState(\"Instock\");\r\n\r\n\r\n  // post data\r\n\r\n  const postData = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!name || !branch_code || !quantity || !weight) {\r\n      toast.error(\"Please fill out all required fields.\");\r\n      return;\r\n    }\r\n    setName(\"\");\r\n    setBranch_code(\"\");\r\n    setQuantity(\"\");\r\n    setWeight(\"\");\r\n    // setStatus(\"\");\r\n\r\n    axios\r\n      .post(`${global.BASEURL}createInventory`, {\r\n        name,\r\n        branch_code,\r\n        quantity,\r\n        weight,\r\n        status,\r\n      })\r\n      .then(() => {\r\n        toggaleInventory();\r\n        getData();\r\n        toast.success(\"Data added successfully.\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error adding data: \", error);\r\n        toast.error(\"Failed to add data.\");\r\n      });\r\n  };\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  function getData() {\r\n    setIsLoading(true);\r\n    axios\r\n      .post(`${global.BASEURL}getbranchInventory`, {\r\n        branch_code: itemName,\r\n      })\r\n      .then((res) => {\r\n        setData(res.data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data: \", error);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  let counter = 0;\r\n  const columns = [\r\n    {\r\n      name: \"Sr.no\",\r\n      selector: (row) => ++counter,\r\n      sortable: \"true\",\r\n      maxWidth: \"2rem\",\r\n    },\r\n    {\r\n      name: \"Item Name\",\r\n      selector: (row) => row.name,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Owned\",\r\n      selector: (row) => row.owned,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"In Stock\",\r\n      selector: (row) => row.quantity,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Weight (per Item)\",\r\n      selector: (row) => row.weight,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Total Weight\",\r\n      selector: (row) => row.weight * row.quantity,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"On Site\",\r\n      selector: (row) => row.quantity,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n\r\n    {\r\n      name: \"Status\",\r\n      cell: (row) => (\r\n        <div className=\"d-flex align-items-center\">\r\n          {row.status === \"Instock\" ? (\r\n            <>\r\n              <img\r\n                src={active}\r\n                alt=\"active\"\r\n                width=\"11\"\r\n                height=\"11\"\r\n                className=\"me-1\"\r\n              />\r\n              <span>{row.status}</span>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <img\r\n                src={block}\r\n                alt=\"block\"\r\n                width=\"11\"\r\n                height=\"11\"\r\n                className=\"me-1\"\r\n              />\r\n              <span>{row.status}</span>\r\n            </>\r\n          )}\r\n        </div>\r\n      ),\r\n      sortable: true,\r\n    },\r\n  ];\r\n\r\n  // edit client modal start\r\n\r\n  const [addInventory, setAddInventory] = useState(false);\r\n\r\n  const toggaleInventory = () => {\r\n    setAddInventory(!addInventory);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n\r\n      <div className=\"d-flex align-align-items-center justify-content-between mt-3 mb-3\">\r\n        <h5 className=\"head_title\">\r\n          Branch / Branches /{\" \"}\r\n          <span style={{ fontSize: \"20px\" }}>Inventory</span>\r\n        </h5>\r\n        <div className=\"d-flex align-items-center\">\r\n          <div>\r\n            <Button className=\"default_btn\" onClick={toggaleInventory}>\r\n              Add New Inventory\r\n            </Button>\r\n          </div>\r\n          <div className=\"ms-2\">\r\n            <UncontrolledButtonDropdown>\r\n              <DropdownToggle className=\"filter_btn\">\r\n                <img className=\"filter_img\" src=\"./icons/filter_icon.png\" />\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem\r\n                  href=\"/\"\r\n                  tag=\"a\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  All\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  href=\"/\"\r\n                  tag=\"a\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  New User\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  href=\"/\"\r\n                  tag=\"a\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  Active User\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  href=\"/\"\r\n                  tag=\"a\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  Blocked User\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledButtonDropdown>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* modal start */}\r\n\r\n      {/* add modal inventroy */}\r\n\r\n      <Modal isOpen={addInventory} toggle={toggaleInventory} size=\"lg\">\r\n        <ModalHeader toggle={toggaleInventory}></ModalHeader>\r\n        <ModalBody>\r\n          <div className=\"icon_div_main mb-2\">\r\n            <img className=\"icon_sizee\" src={inventory_order2} alt=\"\" />\r\n          </div>\r\n          <h5 className=\"modal_title\">Add Inventory Item</h5>\r\n          <span className=\"modal_subtitle\">\r\n            Enter the correct details of the item which you want to add.\r\n          </span>\r\n\r\n          <Form className=\"d-flex flex-column p-1\">\r\n            <Row>\r\n              <Col className=\"mb-2\" lg=\"12\">\r\n                <Label className=\"value_font input_label\">Select Branch*</Label>\r\n                <Input\r\n                  onChange={(e) => setBranch_code(e.target.value)}\r\n                  value={itemName}\r\n                  readOnly\r\n                  type=\"text\"\r\n                  placeholder=\"Item Name*\"\r\n                />\r\n              </Col>\r\n              <Col className=\"mb-2\" lg=\"12\">\r\n                <Row>\r\n                  <Col lg=\"6\" md=\"12\" className=\"mb-2\">\r\n                    <Label className=\"value_font input_label\">Item Name*</Label>\r\n                    <Input\r\n                      onChange={(e) => setName(e.target.value)}\r\n                      value={name}\r\n                      type=\"text\"\r\n                      placeholder=\"Item Name*\"\r\n                    />\r\n                  </Col>\r\n                  <Col lg=\"6\" md=\"12\">\r\n                    <Row>\r\n                      <Col lg=\"6\" md=\"12\" className=\"mb-2\">\r\n                        <Label className=\"value_font input_label\">\r\n                          Quantity*\r\n                        </Label>\r\n                        <Input\r\n                          onChange={(e) => setQuantity(e.target.value)}\r\n                          value={quantity}\r\n                          type=\"number\"\r\n                          placeholder=\"Quantity*\"\r\n                        />\r\n                      </Col>\r\n                      <Col lg=\"6\" md=\"12\" className=\"mb-2\">\r\n                        <Label className=\"value_font input_label\">\r\n                          Weight (kg) Per Item*\r\n                        </Label>\r\n                        <Input\r\n                          onChange={(e) => setWeight(e.target.value)}\r\n                          value={weight}\r\n                          type=\"number\"\r\n                          placeholder=\"Weight (kg) Per Item*\"\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n            <div className=\"mx-auto\">\r\n              <Button\r\n                onClick={postData}\r\n                type=\"submit\"\r\n                className=\"mt-2 default_btn\"\r\n              >\r\n                Create\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n\r\n      {/* ended modal  */}\r\n      {/* table start */}\r\n      <div>\r\n        {isLoading ? (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: \"100%\",\r\n            }}\r\n          >\r\n            <Spinerr />\r\n          </div>\r\n        ) : data.length === 0 ? (\r\n          <p>There is no data to show.</p>\r\n        ) : (\r\n          <ClientDataTable columns={columns} data={data} />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BranchInventory;\r\n","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Hire_job.js",["3614","3615","3616","3617"],"import \"@styles/react/apps/app-users.scss\";\r\nimport ClientDataTable from \"./table\";\r\n// import './client.css';\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./table.css\";\r\nimport active from \"../../Admin/assests/icons/active.png\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"reactstrap\";\r\nimport { MoreHorizontal, Trash, Edit2 } from \"react-feather\";\r\nimport Spinerr from \"../../views/components/spinners/SpinnerGrowing\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst completed_icon = {\r\n  width: \"11px\",\r\n  height: \"11px\",\r\n  backgroundColor: \"#696CFF\", // Use backgroundColor instead of background\r\n  borderRadius: \"50%\",\r\n  marginRight: \"10px\",\r\n};\r\n\r\nconst JobHire = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // show data start code\r\n  const [data, setData] = useState([]);\r\n\r\n  function getData() {\r\n    setIsLoading(true);\r\n    axios\r\n      .post(`${global.BASEURL}getRecords/jobs`)\r\n      .then((res) => {\r\n        const resp = res.data.data;\r\n        const filterData = resp.filter((item) => item.day_hire === \"true\");\r\n        setData(filterData);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data: \", error);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false); // Hide spinner after data is fetched\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Sr.no\",\r\n      selector: (row, index) => index + 1,\r\n      sortable: \"true\",\r\n      maxWidth: \"2rem\",\r\n    },\r\n    {\r\n      name: \"Job Number\",\r\n      selector: (row) => row.job_no,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Job Name\",\r\n      selector: (row) => row.job_name,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n\r\n    {\r\n      name: \"Job Type\",\r\n      selector: (row) => row.day_hire === \"true\" ? (<span>Dry Hire Job</span>):\"\",\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n\r\n    {\r\n      name: \"Status\",\r\n      cell: (row) => (\r\n        <div className=\"d-flex align-items-center\">\r\n          {row.status === \"Active\" ? (\r\n            <>\r\n              <img\r\n                src={active}\r\n                alt=\"active\"\r\n                width=\"11\"\r\n                height=\"11\"\r\n                className=\"me-1\"\r\n              />\r\n              <span>{row.status}</span>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <div style={completed_icon}></div>\r\n              <span>{row.status}</span>\r\n            </>\r\n          )}\r\n        </div>\r\n      ),\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      allowOverflow: true,\r\n      maxWidth: \"7rem\",\r\n      minWidth: \"2rem\",\r\n      cell: (row) => {\r\n        // modal edit\r\n        const id = row._id;\r\n\r\n        return (\r\n          <div className=\"d-flex justify-content-end w-100\">\r\n            <UncontrolledDropdown>\r\n              <DropdownToggle className=\"pe-1\" tag=\"span\">\r\n                <MoreHorizontal size={15} />\r\n              </DropdownToggle>\r\n              <DropdownMenu className=\"scrolDrop\" end>\r\n                <DropdownItem>\r\n                  <NavLink\r\n                    to={`/job_detail/${id}`}\r\n                    className=\"btn btn-white w-100 p-0 m-0\"\r\n                  >\r\n                    <span className=\"align-middle ms-50\">Views</span>\r\n                  </NavLink>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  // edit client modal start\r\n\r\n  // Step 2: Add state for managing modal visibility\r\n  const [branchEdit, setbranchEdit] = useState(false);\r\n\r\n  const editModalBranch = () => {\r\n    setbranchEdit(!branchEdit);\r\n  };\r\n\r\n  const [isLargeModalOpen, setIsLargeModalOpen] = useState(false);\r\n\r\n  const toggleLargeModal = () => {\r\n    setIsLargeModalOpen(!isLargeModalOpen);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h5 className=\"head_title  mt-3 mb-3\">Dry Hire Job</h5>\r\n      <div className=\"d-flex align-align-items-center justify-content-between mt-3 mb-3\">\r\n        <h5 className=\"head_title\">List of Dry Hire Jobs</h5>\r\n        <input\r\n          style={{ width: \"fit-content\" }}\r\n          className=\"form-control\"\r\n          placeholder=\"Search\"\r\n          type=\"search\"\r\n        />\r\n      </div>\r\n      {/* table start */}\r\n      <div>\r\n        {isLoading ? (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: \"100%\",\r\n            }}\r\n          >\r\n            <Spinerr />\r\n          </div>\r\n        ) : data.length === 0 ? (\r\n          <p>There is no data to show.</p>\r\n        ) : (\r\n          <ClientDataTable columns={columns} data={data} />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JobHire;\r\n","D:\\Utecho\\Scaff-cert\\src\\@core\\components\\customizer\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\components\\menu\\horizontal-menu\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\@core\\auth\\jwt\\jwtService.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\dashboard\\analytics\\index.js",["3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632"],"// ** React Imports\r\nimport { useContext } from 'react'\r\n\r\n// ** Icons Imports\r\nimport { List } from 'react-feather'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\nimport Timeline from '@components/timeline'\r\nimport AvatarGroup from '@components/avatar-group'\r\n\r\n// ** Utils\r\nimport { kFormatter } from '@utils'\r\n\r\n// ** Context\r\nimport { ThemeColors } from '@src/utility/context/ThemeColors'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, Card, CardHeader, CardTitle, CardBody } from 'reactstrap'\r\n\r\n// ** Demo Components\r\nimport InvoiceList from '@src/views/apps/invoice/list'\r\nimport Sales from '@src/views/ui-elements/cards/analytics/Sales'\r\nimport AvgSessions from '@src/views/ui-elements/cards/analytics/AvgSessions'\r\nimport CardAppDesign from '@src/views/ui-elements/cards/advance/CardAppDesign'\r\nimport SupportTracker from '@src/views/ui-elements/cards/analytics/SupportTracker'\r\nimport OrdersReceived from '@src/views/ui-elements/cards/statistics/OrdersReceived'\r\nimport SubscribersGained from '@src/views/ui-elements/cards/statistics/SubscribersGained'\r\nimport RevenueGenerated from '@src/views/ui-elements/cards/statistics/RevenueGenerated'\r\n\r\nimport CardCongratulations from '@src/views/ui-elements/cards/advance/CardCongratulations'\r\n\r\n// ** Images\r\n// import jsonImg from '@src/assets/images/icons/json.png'\r\n// import ceo from '@src/assets/images/portrait/small/avatar-s-9.jpg'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/charts/apex-charts.scss'\r\nimport Sales2 from '../../ui-elements/cards/analytics/Sales2'\r\nimport SessionByDevice from '../../ui-elements/cards/analytics/SessionByDevice'\r\nimport ProductOrders from '../../ui-elements/cards/analytics/ProductOrders'\r\n\r\nconst AnalyticsDashboard = () => {\r\n  // ** Context\r\n  const { colors } = useContext(ThemeColors)\r\n\r\n  // ** Vars\r\n  // const avatarGroupArr = [\r\n  //   {\r\n  //     imgWidth: 33,\r\n  //     imgHeight: 33,\r\n  //     title: 'Billy Hopkins',\r\n  //     placement: 'bottom',\r\n  //     img: require('@src/assets/images/portrait/small/avatar-s-9.jpg').default\r\n  //   },\r\n  //   {\r\n  //     imgWidth: 33,\r\n  //     imgHeight: 33,\r\n  //     title: 'Amy Carson',\r\n  //     placement: 'bottom',\r\n  //     img: require('@src/assets/images/portrait/small/avatar-s-6.jpg').default\r\n  //   },\r\n  //   {\r\n  //     imgWidth: 33,\r\n  //     imgHeight: 33,\r\n  //     title: 'Brandon Miles',\r\n  //     placement: 'bottom',\r\n  //     img: require('@src/assets/images/portrait/small/avatar-s-8.jpg').default\r\n  //   },\r\n  //   {\r\n  //     imgWidth: 33,\r\n  //     imgHeight: 33,\r\n  //     title: 'Daisy Weber',\r\n  //     placement: 'bottom',\r\n  //     img: require('@src/assets/images/portrait/small/avatar-s-7.jpg').default\r\n  //   },\r\n  //   {\r\n  //     imgWidth: 33,\r\n  //     imgHeight: 33,\r\n  //     title: 'Jenny Looper',\r\n  //     placement: 'bottom',\r\n  //     img: require('@src/assets/images/portrait/small/avatar-s-20.jpg').default\r\n  //   }\r\n  // ]\r\n  // const data = [\r\n  //   {\r\n  //     title: '12 Invoices have been paid',\r\n  //     content: 'Invoices have been paid to the company.',\r\n  //     meta: '',\r\n  //     metaClassName: 'me-1',\r\n  //     customContent: (\r\n  //       <div className='d-flex align-items-center'>\r\n  //         <img className='me-1' src={jsonImg} alt='data.json' height='23' />\r\n  //         <span>data.json</span>\r\n  //       </div>\r\n  //     )\r\n  //   },\r\n  //   {\r\n  //     title: 'Client Meeting',\r\n  //     content: 'Project meeting with john @10:15am.',\r\n  //     meta: '',\r\n  //     metaClassName: 'me-1',\r\n  //     color: 'warning',\r\n  //     customContent: (\r\n  //       <div className='d-flex align-items-center'>\r\n  //         <Avatar img={ceo} />\r\n  //         <div className='ms-50'>\r\n  //           <h6 className='mb-0'>John Doe (Client)</h6>\r\n  //           <span>CEO of Infibeam</span>\r\n  //         </div>\r\n  //       </div>\r\n  //     )\r\n  //   },\r\n  //   {\r\n  //     title: 'Create a new project for client',\r\n  //     content: 'Add files to new design folder',\r\n  //     color: 'info',\r\n  //     meta: '',\r\n  //     metaClassName: 'me-1',\r\n  //     customContent: <AvatarGroup data={avatarGroupArr} />\r\n  //   },\r\n  //   {\r\n  //     title: 'Create a new project for client',\r\n  //     content: 'Add files to new design folder',\r\n  //     color: 'danger',\r\n  //     meta: '',\r\n  //     metaClassName: 'me-1'\r\n  //   }\r\n  // ]\r\n\r\n  return (\r\n    <div id='dashboard-analytics'>\r\n      <Row className='match-height'>\r\n        <Col lg='12' sm='12'>\r\n          <CardCongratulations />\r\n        </Col>\r\n        <Col lg='4' sm='6'>\r\n          <SubscribersGained kFormatter={kFormatter} />\r\n        </Col>\r\n        <Col lg='4' sm='6'>\r\n          <OrdersReceived\r\n            kFormatter={kFormatter}\r\n            warning={colors.warning.main}\r\n          />\r\n        </Col>\r\n        <Col lg='4' sm='6'>\r\n          <RevenueGenerated\r\n            kFormatter={kFormatter}\r\n            success={colors.success.main}\r\n          />\r\n        </Col>\r\n        <Col lg='4' sm='6'>\r\n          <ProductOrders\r\n            primary={colors.primary.main}\r\n            warning={colors.warning.main}\r\n            danger={colors.danger.main}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      {/* <Row className='match-height'>\r\n        <Col lg='6' xs='12'>\r\n          <AvgSessions primary={colors.primary.main} />\r\n        </Col>\r\n        <Col lg='6' xs='12'>\r\n          <SupportTracker primary={colors.primary.main} danger={colors.danger.main} />\r\n        </Col>\r\n      </Row>\r\n      <Row className='match-height'>\r\n        <Col lg='4' xs='12'>\r\n          <Card className='card-user-timeline'>\r\n            <CardHeader>\r\n              <div className='d-flex align-items-center'>\r\n                <List className='user-timeline-title-icon' />\r\n                <CardTitle tag='h4'>User Timeline</CardTitle>\r\n              </div>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Timeline className='ms-50 mb-0' data={data} />\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n        <Col lg='4' md='6' xs='12'>\r\n          <Sales primary={colors.primary.main} info={colors.info.main} />\r\n        </Col>\r\n        <Col lg='4' md='6' xs='12'>\r\n          <CardAppDesign />\r\n        </Col>\r\n      </Row>\r\n      <Row className='match-height'>\r\n        <Col xs='12'>\r\n          <InvoiceList />\r\n        </Col>\r\n      </Row> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AnalyticsDashboard\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\charts\\recharts\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\i18n\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\toasts\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\tooltips\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\timeline\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabs\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\tables\\data-tables\\advance\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-repeater\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\roles-permissions\\permissions\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\roles-permissions\\roles\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\list\\index.js",["3633","3634","3635","3636","3637","3638"],"// ** User List Component\r\nimport Table from './Table'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\r\n\r\n// ** Icons Imports\r\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\nimport BreadcrumbsDefault from '../../../components/breadcrumbs/BreadcrumbsDefault'\r\n\r\nconst UsersList = () => {\r\n  return (\r\n    <div className='app-user-list'>\r\n      <BreadcrumbsDefault />\r\n      <Row>\r\n        {/* <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='primary'\r\n            statTitle='Total Users'\r\n            icon={<User size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>21,459</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='danger'\r\n            statTitle='Paid Users'\r\n            icon={<UserPlus size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>4,567</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='success'\r\n            statTitle='Active Users'\r\n            icon={<UserCheck size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>19,860</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='warning'\r\n            statTitle='Pending Users'\r\n            icon={<UserX size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>237</h3>}\r\n          />\r\n        </Col> */}\r\n      </Row>\r\n      <Table />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UsersList\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\view\\index.js",["3639"],"// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\nimport { useParams, Link } from 'react-router-dom'\r\n\r\n// ** Store & Actions\r\nimport { getUser } from '../store'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, Alert } from 'reactstrap'\r\n\r\n// ** User View Components\r\nimport UserTabs from './Tabs'\r\nimport PlanCard from './PlanCard'\r\nimport UserInfoCard from './UserInfoCard'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\n\r\nconst UserView = () => {\r\n  // ** Store Vars\r\n  const store = useSelector(state => state.users)\r\n  const dispatch = useDispatch()\r\n\r\n  // ** Hooks\r\n  const { id } = useParams()\r\n\r\n  // ** Get suer on mount\r\n  useEffect(() => {\r\n    dispatch(getUser(parseInt(id)))\r\n  }, [dispatch])\r\n\r\n  const [active, setActive] = useState('1')\r\n\r\n  const toggleTab = tab => {\r\n    if (active !== tab) {\r\n      setActive(tab)\r\n    }\r\n  }\r\n\r\n  return store.selectedUser !== null && store.selectedUser !== undefined ? (\r\n    <div className='app-user-view'>\r\n      <Row>\r\n        <Col xl='4' lg='5' xs={{ order: 1 }} md={{ order: 0, size: 5 }}>\r\n          <UserInfoCard selectedUser={store.selectedUser} />\r\n          <PlanCard />\r\n        </Col>\r\n        <Col xl='8' lg='7' xs={{ order: 0 }} md={{ order: 1, size: 7 }}>\r\n          <UserTabs active={active} toggleTab={toggleTab} />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  ) : (\r\n    <Alert color='danger'>\r\n      <h4 className='alert-heading'>User not found</h4>\r\n      <div className='alert-body'>\r\n        User with id: {id} doesn't exist. Check list of all Users: <Link to='/apps/user/list'>Users List</Link>\r\n      </div>\r\n    </Alert>\r\n  )\r\n}\r\nexport default UserView\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\ecommerce\\checkout\\index.js",["3640"],"// ** React Imports\r\nimport { Fragment, useEffect, useRef, useState } from 'react'\r\n\r\n// ** Custom Components\r\nimport Wizard from '@components/wizard'\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\n\r\n// ** Steps\r\nimport Cart from './steps/Cart'\r\nimport Address from './steps/Address'\r\nimport Payment from './steps/Payment'\r\n\r\n// ** Third Party Components\r\nimport { ShoppingCart, Home, CreditCard } from 'react-feather'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getCartItems, deleteCartItem, deleteWishlistItem, addToWishlist } from '../store'\r\n\r\n// ** Styles\r\nimport '@styles/base/pages/app-ecommerce.scss'\r\n\r\nconst Checkout = () => {\r\n  // ** Ref & State\r\n  const ref = useRef(null)\r\n  const [stepper, setStepper] = useState(null)\r\n\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.ecommerce)\r\n\r\n  // ** Get Cart Items on mount\r\n  useEffect(() => {\r\n    dispatch(getCartItems())\r\n  }, [])\r\n\r\n  const steps = [\r\n    {\r\n      id: 'cart',\r\n      title: 'Cart',\r\n      subtitle: 'Your Cart Items',\r\n      icon: <ShoppingCart size={18} />,\r\n      content: (\r\n        <Cart\r\n          stepper={stepper}\r\n          dispatch={dispatch}\r\n          products={store.cart}\r\n          getCartItems={getCartItems}\r\n          addToWishlist={addToWishlist}\r\n          deleteCartItem={deleteCartItem}\r\n          deleteWishlistItem={deleteWishlistItem}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      id: 'Address',\r\n      title: 'Address',\r\n      subtitle: 'Enter Your Address',\r\n      icon: <Home size={18} />,\r\n      content: <Address stepper={stepper} />\r\n    },\r\n    {\r\n      id: 'payment',\r\n      title: 'Payment',\r\n      subtitle: 'Select Payment Method',\r\n      icon: <CreditCard size={18} />,\r\n      content: <Payment stepper={stepper} />\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <Fragment>\r\n      <BreadCrumbs breadCrumbTitle='Checkout' breadCrumbParent='eCommerce' breadCrumbActive='Checkout' />\r\n      <Wizard\r\n        ref={ref}\r\n        steps={steps}\r\n        className='checkout-tab-steps'\r\n        instance={el => setStepper(el)}\r\n        options={{\r\n          linear: false\r\n        }}\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Checkout\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\ecommerce\\detail\\index.js",["3641"],"// ** React Imports\r\nimport { useEffect, Fragment } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\n// ** Product detail components\r\nimport ItemFeatures from './ItemFeatures'\r\nimport ProductDetails from './ProductDetails'\r\nimport RelatedProducts from './RelatedProducts'\r\n\r\n// ** Custom Components\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody } from 'reactstrap'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  getProduct,\r\n  deleteWishlistItem,\r\n  addToWishlist,\r\n  addToCart\r\n} from '../store'\r\n\r\nimport '@styles/base/pages/app-ecommerce-details.scss'\r\n\r\nconst Details = () => {\r\n  // ** Vars\r\n  const params = useParams().product\r\n  const productId = params.substring(params.lastIndexOf('-') + 1)\r\n\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state.ecommerce)\r\n\r\n  // ** ComponentDidMount : Get product\r\n  useEffect(() => {\r\n    dispatch(getProduct(productId))\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <BreadCrumbs\r\n        breadCrumbTitle='Product Details'\r\n        breadCrumbParent='eCommerce'\r\n        breadCrumbActive='Details'\r\n      />\r\n      <div className='app-ecommerce-details'>\r\n        {Object.keys(store.productDetail).length ? (\r\n          <Card>\r\n            <CardBody>\r\n              <ProductDetails\r\n                dispatch={dispatch}\r\n                addToCart={addToCart}\r\n                productId={productId}\r\n                getProduct={getProduct}\r\n                data={store.productDetail}\r\n                addToWishlist={addToWishlist}\r\n                deleteWishlistItem={deleteWishlistItem}\r\n              />\r\n            </CardBody>\r\n            <ItemFeatures />\r\n            <CardBody>\r\n              <RelatedProducts />\r\n            </CardBody>\r\n          </Card>\r\n        ) : null}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Details\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\ecommerce\\wishlist\\index.js",["3642"],"// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\nimport { Fragment, useEffect } from 'react'\r\n\r\n// ** Custom Components\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { Star, X, ShoppingCart, Info } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody, CardText, Button, Alert } from 'reactstrap'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getWishlistItems, deleteWishlistItem, addToCart, getCartItems } from '../store'\r\n\r\n// ** Styles\r\nimport '@styles/base/pages/app-ecommerce.scss'\r\n\r\nconst Wishlist = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.ecommerce)\r\n\r\n  //** ComponentDidMount : get wishlist items\r\n  useEffect(() => {\r\n    dispatch(getWishlistItems())\r\n  }, [])\r\n\r\n  // ** Handle Move/Add to cart\r\n  const handleCartBtn = (id, val) => {\r\n    if (val === false) {\r\n      dispatch(addToCart(id))\r\n    }\r\n    dispatch(getWishlistItems())\r\n    dispatch(getCartItems())\r\n  }\r\n\r\n  // ** Renders wishlist products\r\n  const renderWishlist = () => {\r\n    return store.wishlist.map(item => {\r\n      const CartBtnTag = item.isInCart ? Link : 'button'\r\n      return (\r\n        <Card className='ecommerce-card' key={item.name}>\r\n          <div className='item-img text-center mx-auto'>\r\n            <Link to={`/apps/ecommerce/product-detail/${item.slug}`}>\r\n              <img className='img-fluid' src={item.image} alt={item.name} />\r\n            </Link>\r\n          </div>\r\n          <CardBody>\r\n            <div className='item-wrapper'>\r\n              <div className='item-rating'>\r\n                <ul className='unstyled-list list-inline'>\r\n                  {new Array(5).fill().map((listItem, index) => {\r\n                    return (\r\n                      <li key={index} className='ratings-list-item me-25'>\r\n                        <Star\r\n                          className={classnames({\r\n                            'filled-star': index + 1 <= item.rating,\r\n                            'unfilled-star': index + 1 > item.rating\r\n                          })}\r\n                        />\r\n                      </li>\r\n                    )\r\n                  })}\r\n                </ul>\r\n              </div>\r\n              <div className='item-cost'>\r\n                <h6 className='item-price'>$ {item.price}</h6>\r\n              </div>\r\n            </div>\r\n            <div className='item-name'>\r\n              <Link to={`/apps/ecommerce/product-detail/${item.slug}`}>{item.name}</Link>\r\n            </div>\r\n            <CardText className='item-description'>{item.description}</CardText>\r\n          </CardBody>\r\n          <div className='item-options text-center'>\r\n            <Button\r\n              className='btn-wishlist remove-wishlist'\r\n              color='light'\r\n              onClick={() => {\r\n                dispatch(deleteWishlistItem(item.id))\r\n              }}\r\n            >\r\n              <X className='me-25' size={14} />\r\n              <span>Remove</span>\r\n            </Button>\r\n            <Button\r\n              color='primary'\r\n              tag={CartBtnTag}\r\n              className='btn-cart move-cart'\r\n              onClick={() => handleCartBtn(item.id, item.isInCart)}\r\n              /*eslint-disable */\r\n              {...(item.isInCart\r\n                ? {\r\n                    to: '/apps/ecommerce/checkout'\r\n                  }\r\n                : {})}\r\n              /*eslint-enable */\r\n            >\r\n              <ShoppingCart className='me-50' size={14} />\r\n              <span>{item.isInCart ? 'View In Cart' : 'Add To Cart'}</span>\r\n            </Button>\r\n          </div>\r\n        </Card>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <BreadCrumbs breadCrumbTitle='Wishlist' breadCrumbParent='eCommerce' breadCrumbActive='Wishlist' />\r\n      {store.wishlist.length ? (\r\n        <section className='grid-view wishlist-items'>{renderWishlist()}</section>\r\n      ) : (\r\n        <Alert color='info'>\r\n          <div className='alert-body'>\r\n            <Info size={14} />\r\n            <span className='align-middle ms-50'>Your Wishlist is empty</span>\r\n          </div>\r\n        </Alert>\r\n      )}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Wishlist\r\n","D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\components\\menu\\vertical-menu\\VerticalNavMenuItems.js",[],"D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\components\\menu\\vertical-menu\\VerticalMenuHeader.js",["3643","3644","3645","3646","3647","3648","3649"],"// ** React Imports\r\nimport { useEffect } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport logo from '../../../../../Admin/assests/logo_main.svg'\r\n// ** Icons Imports\r\nimport { Disc, X, Circle } from 'react-feather'\r\n\r\n// ** Config\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nconst VerticalMenuHeader = props => {\r\n  // ** Props\r\n  const { menuCollapsed, setMenuCollapsed, setMenuVisibility, setGroupOpen, menuHover } = props\r\n\r\n  // ** Reset open group\r\n  useEffect(() => {\r\n    if (!menuHover && menuCollapsed) setGroupOpen([])\r\n  }, [menuHover, menuCollapsed])\r\n\r\n\r\n\r\n  return (\r\n    <div className='navbar-header position-relative'>\r\n   \r\n      <ul className='nav navbar-nav flex-row mt-1'>\r\n        <li className='nav-item'>\r\n          <NavLink to='/dashboard' className='navbar-brand'>\r\n            \r\n            <span className='brand-logo'>\r\n              <img src={logo} alt='logo' style={{maxWidth:\"135px\"}} />\r\n            </span>\r\n          </NavLink>\r\n        </li>\r\n       \r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VerticalMenuHeader\r\n","D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\components\\menu\\horizontal-menu\\HorizontalNavMenuItems.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\ecommerce\\shop\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\@core\\auth\\jwt\\jwtDefaultConfig.js",["3650"],"// ** Auth Endpoints\r\nexport default {\r\n  loginEndpoint: '/jwt/login',\r\n  registerEndpoint: '/jwt/register',\r\n  refreshEndpoint: '/jwt/refresh-token',\r\n  logoutEndpoint: '/jwt/logout',\r\n\r\n  // ** This will be prefixed in authorization header with token\r\n  // ? e.g. Authorization: Bearer <token>\r\n  tokenType: 'Bearer',\r\n\r\n  // ** Value of this property will be used as key to store JWT token in storage\r\n  storageTokenKeyName: 'accessToken',\r\n  storageRefreshTokenKeyName: 'refreshToken'\r\n}\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\tables\\data-tables\\advance\\TableServerSide.js",["3651","3652"],"// ** React Imports\r\nimport { Fragment, useState, useEffect, memo } from 'react'\r\n\r\n// ** Table Columns\r\nimport { serverSideColumns } from '../data'\r\n\r\n// ** Store & Actions\r\nimport { getData } from '../store'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\n// ** Third Party Components\r\nimport ReactPaginate from 'react-paginate'\r\nimport { ChevronDown } from 'react-feather'\r\nimport DataTable from 'react-data-table-component'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, Input, Label, Row, Col } from 'reactstrap'\r\n\r\nconst DataTableServerSide = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.dataTables)\r\n\r\n  // ** States\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [rowsPerPage, setRowsPerPage] = useState(7)\r\n  const [searchValue, setSearchValue] = useState('')\r\n\r\n  // ** Get data on mount\r\n  useEffect(() => {\r\n    dispatch(\r\n      getData({\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        q: searchValue\r\n      })\r\n    )\r\n  }, [dispatch])\r\n\r\n  // ** Function to handle filter\r\n  const handleFilter = e => {\r\n    setSearchValue(e.target.value)\r\n\r\n    dispatch(\r\n      getData({\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        q: e.target.value\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Function to handle Pagination and get data\r\n  const handlePagination = page => {\r\n    dispatch(\r\n      getData({\r\n        page: page.selected + 1,\r\n        perPage: rowsPerPage,\r\n        q: searchValue\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  // ** Function to handle per page\r\n  const handlePerPage = e => {\r\n    dispatch(\r\n      getData({\r\n        page: currentPage,\r\n        perPage: parseInt(e.target.value),\r\n        q: searchValue\r\n      })\r\n    )\r\n    setRowsPerPage(parseInt(e.target.value))\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Math.ceil(store.total / rowsPerPage)\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        breakLabel='...'\r\n        pageCount={Math.ceil(count) || 1}\r\n        marginPagesDisplayed={2}\r\n        pageRangeDisplayed={2}\r\n        activeClassName='active'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={page => handlePagination(page)}\r\n        activeClassName='active'\r\n        pageClassName='page-item'\r\n        breakClassName='page-item'\r\n        nextLinkClassName='page-link'\r\n        pageLinkClassName='page-link'\r\n        breakLinkClassName='page-link'\r\n        previousLinkClassName='page-link'\r\n        nextClassName='page-item next-item'\r\n        previousClassName='page-item prev-item'\r\n        containerClassName={\r\n          'pagination react-paginate separated-pagination pagination-sm justify-content-end pe-1 mt-1'\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  // ** Table data to render\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      q: searchValue\r\n    }\r\n\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n\r\n    if (store.data.length > 0) {\r\n      return store.data\r\n    } else if (store.data.length === 0 && isFiltered) {\r\n      return []\r\n    } else {\r\n      return store.allData.slice(0, rowsPerPage)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <CardHeader className='border-bottom'>\r\n          <CardTitle tag='h4'>Server Side</CardTitle>\r\n        </CardHeader>\r\n        <Row className='mx-0 mt-1 mb-50'>\r\n          <Col sm='6'>\r\n            <div className='d-flex align-items-center'>\r\n              <Label for='sort-select'>show</Label>\r\n              <Input\r\n                className='dataTable-select'\r\n                type='select'\r\n                id='sort-select'\r\n                value={rowsPerPage}\r\n                onChange={e => handlePerPage(e)}\r\n              >\r\n                <option value={7}>7</option>\r\n                <option value={10}>10</option>\r\n                <option value={25}>25</option>\r\n                <option value={50}>50</option>\r\n                <option value={75}>75</option>\r\n                <option value={100}>100</option>\r\n              </Input>\r\n              <Label for='sort-select'>entries</Label>\r\n            </div>\r\n          </Col>\r\n          <Col className='d-flex align-items-center justify-content-sm-end mt-sm-0 mt-1' sm='6'>\r\n            <Label className='me-1' for='search-input'>\r\n              Search\r\n            </Label>\r\n            <Input\r\n              className='dataTable-filter'\r\n              type='text'\r\n              bsSize='sm'\r\n              id='search-input'\r\n              value={searchValue}\r\n              onChange={handleFilter}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <div className='react-dataTable'>\r\n          <DataTable\r\n            noHeader\r\n            pagination\r\n            paginationServer\r\n            className='react-dataTable'\r\n            columns={serverSideColumns}\r\n            sortIcon={<ChevronDown size={10} />}\r\n            paginationComponent={CustomPagination}\r\n            data={dataToRender()}\r\n          />\r\n        </div>\r\n      </Card>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default memo(DataTableServerSide)\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\tables\\data-tables\\advance\\TableAdvSearch.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabs\\TabsVerticalRight.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabs\\TabSourceCode.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabs\\TabsJustified.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabs\\TabsVerticalLeft.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabs\\TabsCentered.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabs\\TabsFilled.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabs\\TabsIcons.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabs\\TabsBasic.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabs\\TabsEnd.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\timeline\\BasicTimeline.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\timeline\\IconsTimeline.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\tooltips\\TooltipSourceCode.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\tooltips\\TooltipUncontrolled.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\tooltips\\TooltipControlled.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\tooltips\\TooltipPositions.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\invoice\\edit\\index.js",["3653"],"// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\nimport { useParams, Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\n\r\n// ** Reactstrap Imports\r\nimport { Alert, Row, Col } from 'reactstrap'\r\n\r\n// ** Invoice Edit Components\r\nimport EditCard from './EditCard'\r\nimport EditActions from './EditActions'\r\nimport SendInvoiceSidebar from '../shared-sidebar/SidebarSendInvoice'\r\nimport AddPaymentSidebar from '../shared-sidebar/SidebarAddPayment'\r\n\r\nconst InvoiceEdit = () => {\r\n  // ** Hooks\r\n  const { id } = useParams()\r\n\r\n  // ** States\r\n  const [data, setData] = useState(null)\r\n  const [sendSidebarOpen, setSendSidebarOpen] = useState(false)\r\n  const [addPaymentOpen, setAddPaymentOpen] = useState(false)\r\n\r\n  // ** Functions to toggle add & send sidebar\r\n  const toggleSendSidebar = () => setSendSidebarOpen(!sendSidebarOpen)\r\n  const toggleAddSidebar = () => setAddPaymentOpen(!addPaymentOpen)\r\n\r\n  // ** Get invoice on mount based on id\r\n  useEffect(() => {\r\n    axios.get(`/api/invoice/invoices/${id}`).then(response => {\r\n      setData(response.data)\r\n    })\r\n  }, [])\r\n\r\n  return data !== null && data.invoice !== undefined ? (\r\n    <div className='invoice-edit-wrapper'>\r\n      <Row className='invoice-edit'>\r\n        <Col xl={9} md={8} sm={12}>\r\n          <EditCard data={data} />\r\n        </Col>\r\n        <Col xl={3} md={4} sm={12}>\r\n          <EditActions id={id} setSendSidebarOpen={setSendSidebarOpen} setAddPaymentOpen={setAddPaymentOpen} />\r\n        </Col>\r\n      </Row>\r\n      <SendInvoiceSidebar toggleSidebar={toggleSendSidebar} open={sendSidebarOpen} />\r\n      <AddPaymentSidebar toggleSidebar={toggleAddSidebar} open={addPaymentOpen} />\r\n    </div>\r\n  ) : (\r\n    <Alert color='danger'>\r\n      <h4 className='alert-heading'>Invoice not found</h4>\r\n      <div className='alert-body'>\r\n        Invoice with id: {id} doesn't exist. Check list of all invoices:{' '}\r\n        <Link to='/apps/invoice/list'>Invoice List</Link>\r\n      </div>\r\n    </Alert>\r\n  )\r\n}\r\n\r\nexport default InvoiceEdit\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\invoice\\add\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\invoice\\print\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\roles-permissions\\permissions\\Table.js",["3654"],"// ** React Imports\r\nimport { useEffect, useState, Fragment } from 'react'\r\n\r\n// ** Table Columns\r\nimport { columns } from './columns'\r\n\r\n// ** Reactstrap Imports\r\nimport { Alert, Row, Col, Label, Form, Input, Button, Modal, ModalHeader, ModalBody, FormFeedback } from 'reactstrap'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getData, addPermission, deletePermission, selectPermission, updatePermission } from '../store'\r\n\r\n// ** Third party Components\r\nimport classnames from 'classnames'\r\nimport ReactPaginate from 'react-paginate'\r\nimport DataTable from 'react-data-table-component'\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport { ChevronDown, Edit, Trash } from 'react-feather'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\n\r\nconst CustomHeader = ({\r\n  role,\r\n  setShow,\r\n  searchTerm,\r\n  rowsPerPage,\r\n  handlePerPage,\r\n  handleFilter,\r\n  handleAssignedToChange\r\n}) => {\r\n  return (\r\n    <Row className='text-nowrap w-100 my-75 g-0 permission-header'>\r\n      <Col xs={12} lg={4} className='d-flex align-items-center'>\r\n        <div className='d-flex align-items-center justify-content-center justify-content-lg-start'>\r\n          <label htmlFor='rows-per-page'>Show</label>\r\n          <Input\r\n            className='mx-50'\r\n            type='select'\r\n            id='rows-per-page'\r\n            value={rowsPerPage}\r\n            onChange={handlePerPage}\r\n            style={{ width: '5rem' }}\r\n          >\r\n            <option value='10'>10</option>\r\n            <option value='25'>25</option>\r\n            <option value='50'>50</option>\r\n          </Input>\r\n          <label htmlFor='rows-per-page'>Entries</label>\r\n        </div>\r\n      </Col>\r\n      <Col xs={12} lg={8}>\r\n        <div className='d-flex align-items-center justify-content-lg-end justify-content-start flex-md-nowrap flex-wrap mt-lg-0 mt-1'>\r\n          <div className='d-flex align-items-center me-1'>\r\n            <label className='mb-0' htmlFor='search-permission'>\r\n              Search:\r\n            </label>\r\n            <Input\r\n              type='text'\r\n              value={searchTerm}\r\n              id='search-permission'\r\n              className='ms-50 w-100'\r\n              onChange={e => handleFilter(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className='mt-50 width-200 me-1 mt-sm-0 mt-1'>\r\n            <Input type='select' name='select' value={role} onChange={e => handleAssignedToChange(e.target.value)}>\r\n              <option value=''>Select Role</option>\r\n              <option value='administrator'>Administrator</option>\r\n              <option value='manager'>Manager</option>\r\n              <option value='user'>User</option>\r\n              <option value='support'>Support</option>\r\n              <option value='restricted-user'>Restricted User</option>\r\n            </Input>\r\n          </div>\r\n          <Button className='add-permission mt-sm-0 mt-1' color='primary' onClick={() => setShow(true)}>\r\n            Add Permission\r\n          </Button>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nconst Table = () => {\r\n  // ** Store Vars & Hooks\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.permissions)\r\n  const {\r\n    reset,\r\n    control,\r\n    setError,\r\n    setValue,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({ defaultValues: { permissionName: '' } })\r\n\r\n  // ** States\r\n  const [show, setShow] = useState(false)\r\n  const [assignedTo, setAssignedTo] = useState('')\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n\r\n  // ** Get data on mount\r\n  useEffect(() => {\r\n    dispatch(\r\n      getData({\r\n        assignedTo,\r\n        q: searchTerm,\r\n        page: currentPage,\r\n        perPage: rowsPerPage\r\n      })\r\n    )\r\n  }, [dispatch, store.data.length])\r\n\r\n  // ** Function in get data on page change\r\n  const handlePagination = page => {\r\n    dispatch(\r\n      getData({\r\n        assignedTo,\r\n        q: searchTerm,\r\n        perPage: rowsPerPage,\r\n        page: page.selected + 1\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  // ** Function in get data on rows per page\r\n  const handlePerPage = e => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    dispatch(\r\n      getData({\r\n        assignedTo,\r\n        q: searchTerm,\r\n        perPage: value,\r\n        page: currentPage\r\n      })\r\n    )\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = val => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n      getData({\r\n        q: val,\r\n        assignedTo,\r\n        page: currentPage,\r\n        perPage: rowsPerPage\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Function to filter Roles\r\n  const handleAssignedToChange = val => {\r\n    setAssignedTo(val)\r\n    dispatch(\r\n      getData({\r\n        q: searchTerm,\r\n        assignedTo: val,\r\n        page: currentPage,\r\n        perPage: rowsPerPage\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        pageCount={count || 1}\r\n        activeClassName='active'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={page => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\r\n      />\r\n    )\r\n  }\r\n\r\n  // ** Table data to render\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      q: searchTerm\r\n    }\r\n\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n\r\n    if (store.data.length > 0) {\r\n      return store.data\r\n    } else if (store.data.length === 0 && isFiltered) {\r\n      return []\r\n    } else {\r\n      return store.allData.slice(0, rowsPerPage)\r\n    }\r\n  }\r\n\r\n  const handleEditClick = data => {\r\n    dispatch(selectPermission(data))\r\n    setValue('permissionName', data.name)\r\n    setShow(true)\r\n  }\r\n\r\n  const handleModalClosed = () => {\r\n    dispatch(selectPermission(null))\r\n    setValue('permissionName', '')\r\n  }\r\n\r\n  const onSubmit = data => {\r\n    if (data.permissionName.length) {\r\n      if (store.selected !== null) {\r\n        dispatch(updatePermission({ name: data.permissionName, id: store.selected.id }))\r\n      } else {\r\n        dispatch(addPermission({ name: data.permissionName }))\r\n      }\r\n      setShow(false)\r\n    } else {\r\n      setError('permissionName', {\r\n        type: 'manual'\r\n      })\r\n    }\r\n  }\r\n\r\n  const updatedColumns = [\r\n    ...columns,\r\n    {\r\n      name: 'Actions',\r\n      cell: row => {\r\n        return (\r\n          <div className='d-flex align-items-center permissions-actions'>\r\n            <Button size='sm' color='transparent' className='btn btn-icon' onClick={() => handleEditClick(row)}>\r\n              <Edit className='font-medium-2' />\r\n            </Button>\r\n            <Button\r\n              size='sm'\r\n              color='transparent'\r\n              className='btn btn-icon'\r\n              onClick={() => dispatch(deletePermission(row.id))}\r\n            >\r\n              <Trash className='font-medium-2' />\r\n            </Button>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n  ]\r\n\r\n  const handleDiscard = () => {\r\n    reset()\r\n    setShow(false)\r\n  }\r\n\r\n  const renderModalSubtitle = () => {\r\n    if (store.selected !== null) {\r\n      return 'Edit permission as per your requirements.'\r\n    } else {\r\n      return 'Permissions you may use and assign to your users.'\r\n    }\r\n  }\r\n\r\n  const renderForm = () => {\r\n    if (store.selected === null) {\r\n      return (\r\n        <Row tag={Form} onSubmit={handleSubmit(onSubmit)}>\r\n          <Col xs={12}>\r\n            <Label className='form-label' for='permission-name'>\r\n              Permission Name\r\n            </Label>\r\n            <Controller\r\n              control={control}\r\n              id='permissionName'\r\n              name='permissionName'\r\n              render={({ field }) => (\r\n                <Input placeholder='Permission Name' invalid={errors.permissionName && true} {...field} />\r\n              )}\r\n            />\r\n            {errors && errors.permissionName && <FormFeedback>Please enter a valid Permission Name</FormFeedback>}\r\n          </Col>\r\n          <Col xs={12} className='mt-75'>\r\n            <div className='form-check'>\r\n              <Input type='checkbox' id='core-perm-checkbox' />\r\n              <Label className='form-check-label' for='core-perm-checkbox'>\r\n                Set as core permission\r\n              </Label>\r\n            </div>\r\n          </Col>\r\n          <Col xs={12} className='text-center mt-2'>\r\n            <Button className='me-1' color='primary'>\r\n              Create Permission\r\n            </Button>\r\n            <Button outline type='reset' onClick={handleDiscard}>\r\n              Discard\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      )\r\n    } else {\r\n      return (\r\n        <Fragment>\r\n          <Alert color='warning'>\r\n            <h6 className='alert-heading'>Warning!</h6>\r\n            <div className='alert-body'>\r\n              By editing the permission name, you might break the system permissions functionality. Please ensure you're\r\n              absolutely certain before proceeding.\r\n            </div>\r\n          </Alert>\r\n          <Row tag={Form} onSubmit={handleSubmit(onSubmit)}>\r\n            <Col xs={12} sm={9}>\r\n              <Label className='form-label' for='permission-name'>\r\n                Permission Name\r\n              </Label>\r\n              <Controller\r\n                control={control}\r\n                id='permissionName'\r\n                name='permissionName'\r\n                render={({ field }) => (\r\n                  <Input placeholder='Permission Name' invalid={errors.permissionName && true} {...field} />\r\n                )}\r\n              />\r\n              {errors && errors.permissionName && <FormFeedback>Please enter a valid Permission Name</FormFeedback>}\r\n            </Col>\r\n            <Col xs={12} sm={3} className='p-sm-0'>\r\n              <Button className='mt-2' color='primary'>\r\n                Update\r\n              </Button>\r\n            </Col>\r\n            <Col xs={12} className='mt-75'>\r\n              <div className='form-check'>\r\n                <Input type='checkbox' id='core-perm-checkbox' />\r\n\r\n                <Label className='form-check-label' for='core-perm-checkbox'>\r\n                  Set as core permission\r\n                </Label>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Fragment>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='react-dataTable'>\r\n        <DataTable\r\n          noHeader\r\n          pagination\r\n          subHeader\r\n          responsive\r\n          paginationServer\r\n          columns={updatedColumns}\r\n          sortIcon={<ChevronDown />}\r\n          className='react-dataTable'\r\n          paginationComponent={CustomPagination}\r\n          data={dataToRender()}\r\n          subHeaderComponent={\r\n            <CustomHeader\r\n              setShow={setShow}\r\n              assignedTo={assignedTo}\r\n              searchTerm={searchTerm}\r\n              rowsPerPage={rowsPerPage}\r\n              handleFilter={handleFilter}\r\n              handlePerPage={handlePerPage}\r\n              handleAssignedToChange={handleAssignedToChange}\r\n            />\r\n          }\r\n        />\r\n      </div>\r\n      <Modal isOpen={show} onClosed={handleModalClosed} toggle={() => setShow(!show)} className='modal-dialog-centered'>\r\n        <ModalHeader className='bg-transparent' toggle={() => setShow(!show)}></ModalHeader>\r\n        <ModalBody\r\n          className={classnames({\r\n            'p-3 pt-0': store.selected !== null,\r\n            'px-sm-5 pb-5': store.selected === null\r\n          })}\r\n        >\r\n          <div className='text-center mb-2'>\r\n            <h1 className='mb-1'>{store.selected !== null ? 'Edit' : 'Add New'} Permission</h1>\r\n            <p>{renderModalSubtitle()}</p>\r\n          </div>\r\n\r\n          {renderForm()}\r\n        </ModalBody>\r\n      </Modal>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Table\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\ecommerce\\checkout\\steps\\Address.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\ecommerce\\checkout\\steps\\Payment.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\ecommerce\\checkout\\steps\\Cart.js",[],"D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\utils.js",[],"D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\components\\menu\\vertical-menu\\VerticalNavMenuSectionHeader.js",[],"D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\components\\menu\\vertical-menu\\VerticalNavMenuGroup.js",["3655"],"// ** React Imports\r\nimport { useEffect } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\n// ** Third Party Components\r\nimport classnames from \"classnames\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n// ** Reactstrap Imports\r\nimport { Collapse, Badge } from \"reactstrap\";\r\n\r\n// ** Vertical Menu Items Component\r\nimport VerticalNavMenuItems from \"./VerticalNavMenuItems\";\r\n\r\n// ** Utils\r\nimport { hasActiveChild, removeChildren } from \"@layouts/utils\";\r\nimport downIcon from \"../../../../../Admin/assests/icons/down_arrow_icon.png\";\r\n\r\nconst VerticalNavMenuGroup = ({\r\n  item,\r\n  groupOpen,\r\n  menuHover,\r\n  activeItem,\r\n  parentItem,\r\n  routerProps,\r\n  groupActive,\r\n  currentActiveGroup,\r\n  setGroupOpen,\r\n  setActiveItem,\r\n  menuCollapsed,\r\n  setGroupActive,\r\n  setCurrentActiveGroup,\r\n  currentActiveItem,\r\n  ...rest\r\n}) => {\r\n  // ** Hooks\r\n  const { t } = useTranslation();\r\n  const location = useLocation();\r\n\r\n  // ** Current Val\r\n  const currentURL = useLocation().pathname;\r\n\r\n  // ** Toggle Open Group\r\n  const toggleOpenGroup = (item, parent) => {\r\n    let openGroup = groupOpen;\r\n    const activeGroup = groupActive;\r\n\r\n    // ** If Group is already open and clicked, close the group\r\n    if (openGroup.includes(item.id)) {\r\n      openGroup.splice(openGroup.indexOf(item.id), 1);\r\n\r\n      // ** If clicked Group has open group children, Also remove those children to close those groups\r\n      if (item.children) {\r\n        removeChildren(item.children, openGroup, groupActive);\r\n      }\r\n    } else if (\r\n      activeGroup.includes(item.id) ||\r\n      currentActiveGroup.includes(item.id)\r\n    ) {\r\n      // ** If Group clicked is Active Group\r\n\r\n      // ** If Active group is closed and clicked again, we should open active group else close active group\r\n      if (\r\n        !activeGroup.includes(item.id) &&\r\n        currentActiveGroup.includes(item.id)\r\n      ) {\r\n        activeGroup.push(item.id);\r\n      } else {\r\n        activeGroup.splice(activeGroup.indexOf(item.id), 1);\r\n      }\r\n\r\n      // ** Update Active Group\r\n      setGroupActive([...activeGroup]);\r\n    } else if (parent) {\r\n      // ** If Group clicked is the child of a open group, first remove all the open groups under that parent\r\n      if (parent.children) {\r\n        removeChildren(parent.children, openGroup, groupActive);\r\n      }\r\n\r\n      // ** After removing all the open groups under that parent, add the clicked group to open group array\r\n      if (!openGroup.includes(item.id)) {\r\n        openGroup.push(item.id);\r\n      }\r\n    } else {\r\n      // ** If clicked on another group that is not active or open, create openGroup array from scratch\r\n\r\n      // ** Empty Open Group array\r\n      openGroup = [];\r\n\r\n      // ** Push current clicked group item to Open Group array\r\n      if (!openGroup.includes(item.id)) {\r\n        openGroup.push(item.id);\r\n      }\r\n    }\r\n    setGroupOpen([...openGroup]);\r\n  };\r\n\r\n  // ** On Group Item Click\r\n  const onCollapseClick = (e, item) => {\r\n    toggleOpenGroup(item, parentItem);\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  // ** Checks url & updates active item\r\n  useEffect(() => {\r\n    if (hasActiveChild(item, currentURL)) {\r\n      if (!groupActive.includes(item.id)) groupActive.push(item.id);\r\n    } else {\r\n      const index = groupActive.indexOf(item.id);\r\n      if (index > -1) groupActive.splice(index, 1);\r\n    }\r\n    setGroupActive([...groupActive]);\r\n    setCurrentActiveGroup([...groupActive]);\r\n    setGroupOpen([]);\r\n  }, [location]);\r\n\r\n  // ** Returns condition to add open class\r\n  const openClassCondition = (id) => {\r\n    if ((menuCollapsed && menuHover) || menuCollapsed === false) {\r\n      if (groupActive.includes(id) || groupOpen.includes(id)) {\r\n        return true;\r\n      }\r\n    } else if (\r\n      groupActive.includes(id) &&\r\n      menuCollapsed &&\r\n      menuHover === false\r\n    ) {\r\n      return false;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <li\r\n      className={classnames(\"nav-item mt-2 has-sub\", {\r\n        open: openClassCondition(item.id),\r\n        \"menu-collapsed-open\": groupActive.includes(item.id),\r\n        \"sidebar-group-active\":\r\n          groupActive.includes(item.id) ||\r\n          groupOpen.includes(item.id) ||\r\n          currentActiveGroup.includes(item.id),\r\n      })}\r\n    >\r\n      <Link\r\n        className=\"d-flex align-items-center justify-content-between\"\r\n        to=\"/\"\r\n        onClick={(e) => onCollapseClick(e, item)}\r\n      >\r\n        {item.icon}\r\n        <span className=\"menu-title text-truncate\">{t(item.title)}</span>\r\n        {/* drop down arrow */}\r\n        <img src={downIcon} alt=\"\" />\r\n\r\n        {item.badge && item.badgeText ? (\r\n          <Badge className=\"ms-auto me-1\" color={item.badge} pill>\r\n            {item.badgeText}\r\n          </Badge>\r\n        ) : null}\r\n      </Link>\r\n\r\n      {/* Render Child Recursively Through VerticalNavMenuItems Component */}\r\n      <ul className=\"menu-content\">\r\n        <Collapse\r\n          isOpen={\r\n            (groupActive && groupActive.includes(item.id)) ||\r\n            (groupOpen && groupOpen.includes(item.id))\r\n          }\r\n        >\r\n          <VerticalNavMenuItems\r\n            {...rest}\r\n            items={item.children}\r\n            groupActive={groupActive}\r\n            setGroupActive={setGroupActive}\r\n            currentActiveGroup={currentActiveGroup}\r\n            setCurrentActiveGroup={setCurrentActiveGroup}\r\n            groupOpen={groupOpen}\r\n            setGroupOpen={setGroupOpen}\r\n            parentItem={item}\r\n            menuCollapsed={menuCollapsed}\r\n            menuHover={menuHover}\r\n            routerProps={routerProps}\r\n            currentActiveItem={currentActiveItem}\r\n            activeItem={activeItem}\r\n            setActiveItem={setActiveItem}\r\n          />\r\n        </Collapse>\r\n      </ul>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default VerticalNavMenuGroup;\r\n","D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\components\\menu\\vertical-menu\\VerticalNavMenuLink.js",["3656"],"// ** React Imports\r\nimport { useEffect } from 'react'\r\nimport { NavLink, useLocation } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst VerticalNavMenuLink = ({\r\n  item,\r\n  activeItem,\r\n  setActiveItem,\r\n  currentActiveItem\r\n}) => {\r\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\r\n  const LinkTag = item.externalLink ? 'a' : NavLink\r\n\r\n  // ** Hooks\r\n  const { t } = useTranslation()\r\n  const location = useLocation()\r\n\r\n  useEffect(() => {\r\n    if (currentActiveItem !== null) {\r\n      setActiveItem(currentActiveItem)\r\n    }\r\n  }, [location])\r\n\r\n  return (\r\n    <li\r\n      className={classnames({\r\n        'nav-item mt-2': !item.children,\r\n        disabled: item.disabled,\r\n        active: item.navLink === activeItem\r\n      })}\r\n    >\r\n      <LinkTag\r\n        className='d-flex align-items-center'\r\n        target={item.newTab ? '_blank' : undefined}\r\n        /*eslint-disable */\r\n        {...(item.externalLink === true\r\n          ? {\r\n              href: item.navLink || '/'\r\n            }\r\n          : {\r\n              to: item.navLink || '/',\r\n              isActive: match => {\r\n                if (!match) {\r\n                  return false\r\n                }\r\n\r\n                if (\r\n                  match.url &&\r\n                  match.url !== '' &&\r\n                  match.url === item.navLink\r\n                ) {\r\n                  currentActiveItem = item.navLink\r\n                }\r\n              }\r\n            })}\r\n        onClick={e => {\r\n          if (\r\n            item.navLink.length === 0 ||\r\n            item.navLink === '#' ||\r\n            item.disabled === true\r\n          ) {\r\n            e.preventDefault()\r\n          }\r\n        }}\r\n      >\r\n        {item.icon}\r\n        <span className='menu-item text-truncate'>{t(item.title)}</span>\r\n\r\n        {item.badge && item.badgeText ? (\r\n          <Badge className='ms-auto me-1' color={item.badge} pill>\r\n            {item.badgeText}\r\n          </Badge>\r\n        ) : null}\r\n      </LinkTag>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default VerticalNavMenuLink\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\ecommerce\\shop\\Products.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\ecommerce\\shop\\Sidebar.js",[],"D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\components\\menu\\horizontal-menu\\HorizontalNavMenuGroup.js",["3657"],"// ** React Imports\r\nimport { useEffect } from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\n// ** Reactstrap Imports\r\nimport { Dropdown, DropdownMenu, DropdownToggle } from 'reactstrap'\r\n\r\n// ** Utils\r\nimport { hasActiveChild } from '@layouts/utils'\r\n\r\n// ** Horizontal Menu Items Component\r\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\r\n\r\nconst HorizontalNavMenuGroup = props => {\r\n  // ** Props\r\n  const {\r\n    item,\r\n    submenu,\r\n    activeItem,\r\n    routerProps,\r\n    groupActive,\r\n    onMouseEnter,\r\n    onMouseLeave,\r\n    openDropdown,\r\n    setActiveItem,\r\n    setGroupActive,\r\n    setOpenDropdown,\r\n    currentActiveItem\r\n  } = props\r\n\r\n  // ** Hooks\r\n  const { t } = useTranslation()\r\n  const location = useLocation()\r\n\r\n  // ** URL Var\r\n  const currentURL = useLocation().pathname\r\n\r\n  useEffect(() => {\r\n    if (hasActiveChild(item, currentURL)) {\r\n      if (!groupActive.includes(item.id)) groupActive.push(item.id)\r\n    } else {\r\n      const index = groupActive.indexOf(item.id)\r\n      if (index > -1) groupActive.splice(index, 1)\r\n    }\r\n    setGroupActive([...groupActive])\r\n  }, [location])\r\n\r\n  // ** Dropdown menu modifiers\r\n  const menuModifiers = [\r\n    {\r\n      enabled: true,\r\n      phase: 'write',\r\n      name: 'setMaxHeight',\r\n      fn: data => {\r\n        const pageHeight = window.innerHeight,\r\n          popperEl = data.state.elements.popper,\r\n          ddTop = popperEl.getBoundingClientRect().top,\r\n          ddHeight = popperEl.clientHeight\r\n\r\n        let maxHeight, stylesObj\r\n\r\n        // ** Calculate and set height\r\n        if (pageHeight - ddTop - ddHeight - 28 < 1) {\r\n          maxHeight = pageHeight - ddTop - 25\r\n          stylesObj = {\r\n            maxHeight,\r\n            overflowY: 'auto'\r\n          }\r\n        }\r\n\r\n        const ddRef = popperEl.getBoundingClientRect()\r\n\r\n        // ** If there is not space left to open sub menu open it to the right\r\n        if (ddRef.left + ddRef.width - (window.innerWidth - 16) >= 0) {\r\n          popperEl.closest('.dropdown').classList.add('openLeft')\r\n        }\r\n\r\n        data.state.styles.popper = { ...data.state.styles.popper, ...stylesObj }\r\n      }\r\n    }\r\n  ]\r\n  return (\r\n    <Dropdown\r\n      tag='li'\r\n      toggle={() => null}\r\n      className={classnames({\r\n        'nav-item': submenu === false,\r\n        'dropdown-submenu': submenu === true,\r\n        'sidebar-group-active active': groupActive.includes(item.id)\r\n      })}\r\n      isOpen={openDropdown.includes(item.id)}\r\n      onMouseEnter={() => onMouseEnter(item.id)}\r\n      onMouseLeave={() => onMouseLeave(item.id)}\r\n    >\r\n      <DropdownToggle\r\n        to='/'\r\n        tag={Link}\r\n        onClick={e => e.preventDefault()}\r\n        className={classnames('dropdown-toggle d-flex align-items-center', {\r\n          'dropdown-item': submenu === true,\r\n          'nav-link': submenu === false\r\n        })}\r\n      >\r\n        {item.icon}\r\n        <span>{t(item.title)}</span>\r\n      </DropdownToggle>\r\n      <DropdownMenu tag='ul' modifiers={menuModifiers} className={classnames({ 'first-level': submenu === false })}>\r\n        <HorizontalNavMenuItems\r\n          submenu={true}\r\n          parentItem={item}\r\n          items={item.children}\r\n          activeItem={activeItem}\r\n          groupActive={groupActive}\r\n          routerProps={routerProps}\r\n          openDropdown={openDropdown}\r\n          onMouseEnter={onMouseEnter}\r\n          onMouseLeave={onMouseLeave}\r\n          setActiveItem={setActiveItem}\r\n          setGroupActive={setGroupActive}\r\n          isChild={true}\r\n          setOpenDropdown={setOpenDropdown}\r\n          currentActiveItem={currentActiveItem}\r\n        />\r\n      </DropdownMenu>\r\n    </Dropdown>\r\n  )\r\n}\r\n\r\nexport default HorizontalNavMenuGroup\r\n","D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\components\\menu\\horizontal-menu\\HorizontalNavMenuLink.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\ecommerce\\detail\\RelatedProducts.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\ecommerce\\detail\\ProductDetails.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\ecommerce\\detail\\ItemFeatures.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\view\\UserInfoCard.js",[],"D:\\Utecho\\Scaff-cert\\src\\@core\\components\\breadcrumbs\\index.js",["3658","3659","3660","3661","3662","3663","3664","3665","3666"],"// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = (props) => {\r\n  // ** Props\r\n  const {\r\n    breadCrumbTitle,\r\n    breadCrumbParent,\r\n    breadCrumbParent2,\r\n    breadCrumbParent3,\r\n    breadCrumbActive\r\n  } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? (\r\n              <h2 className='content-header-title float-start mb-0'>\r\n                {breadCrumbTitle}\r\n              </h2>\r\n            ) : (\r\n              ''\r\n            )}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  {breadCrumbParent}\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          {/* <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/todo'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n","D:\\Utecho\\Scaff-cert\\src\\@core\\components\\card-snippet\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\view\\PlanCard.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\view\\Tabs.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\tables\\data-tables\\data.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\list\\Table.js",["3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690"],"// ** React Imports\r\nimport { Fragment, useState, useEffect } from 'react'\r\n\r\n// ** Invoice List Sidebar\r\nimport Sidebar from './Sidebar'\r\n\r\n// ** Table Columns\r\nimport { columns } from './columns'\r\n\r\n// ** Store & Actions\r\nimport { getAllData, getData } from '../store'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n// ** Third Party Components\r\nimport Select from 'react-select'\r\nimport ReactPaginate from 'react-paginate'\r\nimport DataTable from 'react-data-table-component'\r\nimport {\r\n  ChevronDown,\r\n  Share,\r\n  Printer,\r\n  FileText,\r\n  File,\r\n  Grid,\r\n  Copy\r\n} from 'react-feather'\r\n\r\n// ** Utils\r\nimport { selectThemeColors } from '@utils'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CardBody,\r\n  CardTitle,\r\n  CardHeader,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown\r\n} from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\n\r\n// ** Table Header\r\nconst CustomHeader = ({\r\n  store,\r\n  toggleSidebar,\r\n  handlePerPage,\r\n  rowsPerPage,\r\n  handleFilter,\r\n  searchTerm\r\n}) => {\r\n  // ** Converts table to CSV\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result\r\n\r\n    const columnDelimiter = ','\r\n    const lineDelimiter = '\\n'\r\n    const keys = Object.keys(store.data[0])\r\n\r\n    result = ''\r\n    result += keys.join(columnDelimiter)\r\n    result += lineDelimiter\r\n\r\n    array.forEach((item) => {\r\n      let ctr = 0\r\n      keys.forEach((key) => {\r\n        if (ctr > 0) result += columnDelimiter\r\n\r\n        result += item[key]\r\n\r\n        ctr++\r\n      })\r\n      result += lineDelimiter\r\n    })\r\n\r\n    return result\r\n  }\r\n\r\n  // ** Downloads CSV\r\n  function downloadCSV(array) {\r\n    const link = document.createElement('a')\r\n    let csv = convertArrayOfObjectsToCSV(array)\r\n    if (csv === null) return\r\n\r\n    const filename = 'export.csv'\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv = `data:text/csv;charset=utf-8,${csv}`\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv))\r\n    link.setAttribute('download', filename)\r\n    link.click()\r\n  }\r\n  return (\r\n    <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75'>\r\n      <Row>\r\n        <Col xl='6' className='d-flex align-items-center p-0'>\r\n          <div className='d-flex align-items-center w-100'>\r\n            {/* <label htmlFor='rows-per-page'>Show</label>\r\n            <Input\r\n              className='mx-50'\r\n              type='select'\r\n              id='rows-per-page'\r\n              value={rowsPerPage}\r\n              onChange={handlePerPage}\r\n              style={{ width: '5rem' }}\r\n            >\r\n              <option value='10'>10</option>\r\n              <option value='25'>25</option>\r\n              <option value='50'>50</option>\r\n            </Input>\r\n            <label htmlFor='rows-per-page'>Entries</label> */}\r\n            <Button\r\n              className='add-new-user'\r\n              color='primary'\r\n              onClick={toggleSidebar}\r\n            >\r\n              Add New Users\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n        <Col\r\n          xl='6'\r\n          className='d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1'\r\n        >\r\n          <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\r\n            <label className='mb-0' htmlFor='search-invoice'>\r\n              Search:\r\n            </label>\r\n            <Input\r\n              id='search-invoice'\r\n              className='ms-50 w-100'\r\n              type='text'\r\n              value={searchTerm}\r\n              onChange={(e) => handleFilter(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          {/* <div className='d-flex align-items-center table-header-actions'>\r\n            <UncontrolledDropdown className='me-1'>\r\n              <DropdownToggle color='secondary' caret outline>\r\n                <Share className='font-small-4 me-50' />\r\n                <span className='align-middle'>Export</span>\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem className='w-100'>\r\n                  <Printer className='font-small-4 me-50' />\r\n                  <span className='align-middle'>Print</span>\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  className='w-100'\r\n                  onClick={() => downloadCSV(store.data)}\r\n                >\r\n                  <FileText className='font-small-4 me-50' />\r\n                  <span className='align-middle'>CSV</span>\r\n                </DropdownItem>\r\n                <DropdownItem className='w-100'>\r\n                  <Grid className='font-small-4 me-50' />\r\n                  <span className='align-middle'>Excel</span>\r\n                </DropdownItem>\r\n                <DropdownItem className='w-100'>\r\n                  <File className='font-small-4 me-50' />\r\n                  <span className='align-middle'>PDF</span>\r\n                </DropdownItem>\r\n                <DropdownItem className='w-100'>\r\n                  <Copy className='font-small-4 me-50' />\r\n                  <span className='align-middle'>Copy</span>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n\r\n            <Button\r\n              className='add-new-user'\r\n              color='primary'\r\n              onClick={toggleSidebar}\r\n            >\r\n              Add New User\r\n            </Button>\r\n          </div> */}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst UsersList = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state.users)\r\n\r\n  // ** States\r\n  const [sort, setSort] = useState('desc')\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sortColumn, setSortColumn] = useState('id')\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [currentRole, setCurrentRole] = useState({\r\n    value: '',\r\n    label: 'Select Role'\r\n  })\r\n  const [currentPlan, setCurrentPlan] = useState({\r\n    value: '',\r\n    label: 'Select Plan'\r\n  })\r\n  const [currentStatus, setCurrentStatus] = useState({\r\n    value: '',\r\n    label: 'Select Status',\r\n    number: 0\r\n  })\r\n\r\n  // ** Function to toggle sidebar\r\n  const toggleSidebar = () => setSidebarOpen(!sidebarOpen)\r\n\r\n  // ** Get data on mount\r\n  useEffect(() => {\r\n    dispatch(getAllData())\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: currentRole.value,\r\n        status: currentStatus.value,\r\n        currentPlan: currentPlan.value\r\n      })\r\n    )\r\n  }, [dispatch, store.data.length, sort, sortColumn, currentPage])\r\n\r\n  // ** User filter options\r\n  const roleOptions = [\r\n    { value: '', label: 'Select Role' },\r\n    { value: 'admin', label: 'Admin' },\r\n    { value: 'author', label: 'Author' },\r\n    { value: 'editor', label: 'Editor' },\r\n    { value: 'maintainer', label: 'Maintainer' },\r\n    { value: 'subscriber', label: 'Subscriber' }\r\n  ]\r\n\r\n  const planOptions = [\r\n    { value: '', label: 'Select Plan' },\r\n    { value: 'basic', label: 'Basic' },\r\n    { value: 'company', label: 'Company' },\r\n    { value: 'enterprise', label: 'Enterprise' },\r\n    { value: 'team', label: 'Team' }\r\n  ]\r\n\r\n  const statusOptions = [\r\n    { value: '', label: 'Select Status', number: 0 },\r\n    { value: 'pending', label: 'Pending', number: 1 },\r\n    { value: 'active', label: 'Active', number: 2 },\r\n    { value: 'inactive', label: 'Inactive', number: 3 }\r\n  ]\r\n\r\n  // ** Function in get data on page change\r\n  const handlePagination = (page) => {\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: rowsPerPage,\r\n        page: page.selected + 1,\r\n        role: currentRole.value,\r\n        status: currentStatus.value,\r\n        currentPlan: currentPlan.value\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  // ** Function in get data on rows per page\r\n  const handlePerPage = (e) => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: value,\r\n        page: currentPage,\r\n        role: currentRole.value,\r\n        currentPlan: currentPlan.value,\r\n        status: currentStatus.value\r\n      })\r\n    )\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = (val) => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        q: val,\r\n        sortColumn,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: currentRole.value,\r\n        status: currentStatus.value,\r\n        currentPlan: currentPlan.value\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        pageCount={count || 1}\r\n        activeClassName='active'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={(page) => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        containerClassName={\r\n          'pagination react-paginate justify-content-end my-2 pe-1'\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  // ** Table data to render\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      role: currentRole.value,\r\n      currentPlan: currentPlan.value,\r\n      status: currentStatus.value,\r\n      q: searchTerm\r\n    }\r\n\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n\r\n    if (store.data.length > 0) {\r\n      return store.data\r\n    } else if (store.data.length === 0 && isFiltered) {\r\n      return []\r\n    } else {\r\n      return store.allData.slice(0, rowsPerPage)\r\n    }\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSort(sortDirection)\r\n    setSortColumn(column.sortField)\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: currentRole.value,\r\n        status: currentStatus.value,\r\n        currentPlan: currentPlan.value\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* <Card>\r\n        <CardHeader>\r\n          <CardTitle tag='h4'>Filters</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Row>\r\n            <Col md='4'>\r\n              <Label for='role-select'>Role</Label>\r\n              <Select\r\n                isClearable={false}\r\n                value={currentRole}\r\n                options={roleOptions}\r\n                className='react-select'\r\n                classNamePrefix='select'\r\n                theme={selectThemeColors}\r\n                onChange={(data) => {\r\n                  setCurrentRole(data)\r\n                  dispatch(\r\n                    getData({\r\n                      sort,\r\n                      sortColumn,\r\n                      q: searchTerm,\r\n                      role: data.value,\r\n                      page: currentPage,\r\n                      perPage: rowsPerPage,\r\n                      status: currentStatus.value,\r\n                      currentPlan: currentPlan.value\r\n                    })\r\n                  )\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className='my-md-0 my-1' md='4'>\r\n              <Label for='plan-select'>Plan</Label>\r\n              <Select\r\n                theme={selectThemeColors}\r\n                isClearable={false}\r\n                className='react-select'\r\n                classNamePrefix='select'\r\n                options={planOptions}\r\n                value={currentPlan}\r\n                onChange={(data) => {\r\n                  setCurrentPlan(data)\r\n                  dispatch(\r\n                    getData({\r\n                      sort,\r\n                      sortColumn,\r\n                      q: searchTerm,\r\n                      page: currentPage,\r\n                      perPage: rowsPerPage,\r\n                      role: currentRole.value,\r\n                      currentPlan: data.value,\r\n                      status: currentStatus.value\r\n                    })\r\n                  )\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col md='4'>\r\n              <Label for='status-select'>Status</Label>\r\n              <Select\r\n                theme={selectThemeColors}\r\n                isClearable={false}\r\n                className='react-select'\r\n                classNamePrefix='select'\r\n                options={statusOptions}\r\n                value={currentStatus}\r\n                onChange={(data) => {\r\n                  setCurrentStatus(data)\r\n                  dispatch(\r\n                    getData({\r\n                      sort,\r\n                      sortColumn,\r\n                      q: searchTerm,\r\n                      page: currentPage,\r\n                      status: data.value,\r\n                      perPage: rowsPerPage,\r\n                      role: currentRole.value,\r\n                      currentPlan: currentPlan.value\r\n                    })\r\n                  )\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card> */}\r\n\r\n      <Card className='overflow-hidden'>\r\n        <div className='react-dataTable'>\r\n          <DataTable\r\n            noHeader\r\n            subHeader\r\n            sortServer\r\n            pagination\r\n            responsive\r\n            paginationServer\r\n            columns={columns}\r\n            onSort={handleSort}\r\n            sortIcon={<ChevronDown />}\r\n            className='react-dataTable'\r\n            paginationComponent={CustomPagination}\r\n            data={dataToRender()}\r\n            subHeaderComponent={\r\n              <CustomHeader\r\n                store={store}\r\n                searchTerm={searchTerm}\r\n                rowsPerPage={rowsPerPage}\r\n                handleFilter={handleFilter}\r\n                handlePerPage={handlePerPage}\r\n                toggleSidebar={toggleSidebar}\r\n              />\r\n            }\r\n          />\r\n        </div>\r\n      </Card>\r\n\r\n      <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default UsersList\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\components\\timeline\\data.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\roles-permissions\\roles\\RoleCards.js",["3691"],"// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Label,\r\n  Input,\r\n  Table,\r\n  Modal,\r\n  Button,\r\n  CardBody,\r\n  ModalBody,\r\n  ModalHeader,\r\n  FormFeedback,\r\n  UncontrolledTooltip\r\n} from 'reactstrap'\r\n\r\n// ** Third Party Components\r\nimport { Copy, Info } from 'react-feather'\r\nimport { useForm, Controller } from 'react-hook-form'\r\n\r\n// ** Custom Components\r\nimport AvatarGroup from '@components/avatar-group'\r\n\r\n// ** FAQ Illustrations\r\nimport illustration from '@src/assets/images/illustration/faq-illustrations.svg'\r\n\r\n// ** Vars\r\nconst data = [\r\n  {\r\n    totalUsers: 4,\r\n    title: 'Administrator',\r\n    users: [\r\n      {\r\n        size: 'sm',\r\n        title: 'Vinnie Mostowy',\r\n        img: require('@src/assets/images/avatars/2.png').default\r\n      },\r\n      {\r\n        size: 'sm',\r\n        title: 'Allen Rieske',\r\n        img: require('@src/assets/images/avatars/12.png').default\r\n      },\r\n      {\r\n        size: 'sm',\r\n        title: 'Julee Rossignol',\r\n        img: require('@src/assets/images/avatars/6.png').default\r\n      },\r\n      {\r\n        size: 'sm',\r\n        title: 'Kaith Dsouza',\r\n        img: require('@src/assets/images/avatars/11.png').default\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    totalUsers: 7,\r\n    title: 'Manager',\r\n    users: [\r\n      {\r\n        size: 'sm',\r\n        title: 'Jimmy Ressula',\r\n        img: require('@src/assets/images/avatars/4.png').default\r\n      },\r\n      {\r\n        size: 'sm',\r\n        title: 'John Doe',\r\n        img: require('@src/assets/images/avatars/1.png').default\r\n      },\r\n      {\r\n        size: 'sm',\r\n        title: 'Kristi Lawker',\r\n        img: require('@src/assets/images/avatars/2.png').default\r\n      },\r\n      {\r\n        size: 'sm',\r\n        title: 'Kaith D',\r\n        img: require('@src/assets/images/avatars/5.png').default\r\n      },\r\n      {\r\n        size: 'sm',\r\n        title: 'Danny Paul',\r\n        img: require('@src/assets/images/avatars/7.png').default\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    totalUsers: 5,\r\n    title: 'Users',\r\n    users: [\r\n      {\r\n        size: 'sm',\r\n        title: 'Andrew Tye',\r\n        img: require('@src/assets/images/avatars/6.png').default\r\n      },\r\n      {\r\n        size: 'sm',\r\n        title: 'Rishi Swaat',\r\n        img: require('@src/assets/images/avatars/9.png').default\r\n      },\r\n      {\r\n        size: 'sm',\r\n        title: 'Rossie Kim',\r\n        img: require('@src/assets/images/avatars/2.png').default\r\n      },\r\n      {\r\n        size: 'sm',\r\n        title: 'Kim Merchent',\r\n        img: require('@src/assets/images/avatars/10.png').default\r\n      },\r\n      {\r\n        size: 'sm',\r\n        title: 'Sam Dsouza',\r\n        img: require('@src/assets/images/avatars/8.png').default\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    totalUsers: 3,\r\n    title: 'Support',\r\n    users: [\r\n      {\r\n        size: 'sm',\r\n        title: 'Kim Karlos',\r\n        img: require('@src/assets/images/avatars/3.png').default\r\n      },\r\n      {\r\n        size: 'sm',\r\n        title: 'Katy Turner',\r\n        img: require('@src/assets/images/avatars/9.png').default\r\n      },\r\n      {\r\n        size: 'sm',\r\n        title: 'Peter Adward',\r\n        img: require('@src/assets/images/avatars/12.png').default\r\n      },\r\n      {\r\n        size: 'sm',\r\n        title: 'Kaith Dsouza',\r\n        img: require('@src/assets/images/avatars/10.png').default\r\n      },\r\n      {\r\n        size: 'sm',\r\n        title: 'John Parker',\r\n        img: require('@src/assets/images/avatars/11.png').default\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    totalUsers: 2,\r\n    title: 'Restricted User',\r\n    users: [\r\n      {\r\n        size: 'sm',\r\n        title: 'Kim Merchent',\r\n        img: require('@src/assets/images/avatars/10.png').default\r\n      },\r\n      {\r\n        size: 'sm',\r\n        title: 'Sam Dsouza',\r\n        img: require('@src/assets/images/avatars/6.png').default\r\n      },\r\n      {\r\n        size: 'sm',\r\n        title: 'Nurvi Karlos',\r\n        img: require('@src/assets/images/avatars/3.png').default\r\n      },\r\n      {\r\n        size: 'sm',\r\n        title: 'Andrew Tye',\r\n        img: require('@src/assets/images/avatars/8.png').default\r\n      },\r\n      {\r\n        size: 'sm',\r\n        title: 'Rossie Kim',\r\n        img: require('@src/assets/images/avatars/9.png').default\r\n      }\r\n    ]\r\n  }\r\n]\r\n\r\nconst rolesArr = [\r\n  'User Management',\r\n  'Content Management',\r\n  'Disputes Management',\r\n  'Database Management',\r\n  'Financial Management',\r\n  'Reporting',\r\n  'API Control',\r\n  'Repository Management',\r\n  'Payroll'\r\n]\r\n\r\nconst RoleCards = () => {\r\n  // ** States\r\n  const [show, setShow] = useState(false)\r\n  const [modalType, setModalType] = useState('Add New')\r\n\r\n  // ** Hooks\r\n  const {\r\n    reset,\r\n    control,\r\n    setError,\r\n    setValue,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({ defaultValues: { roleName: '' } })\r\n\r\n  const onSubmit = data => {\r\n    if (data.roleName.length) {\r\n      setShow(false)\r\n    } else {\r\n      setError('roleName', {\r\n        type: 'manual'\r\n      })\r\n    }\r\n  }\r\n\r\n  const onReset = () => {\r\n    setShow(false)\r\n    reset({ roleName: '' })\r\n  }\r\n\r\n  const handleModalClosed = () => {\r\n    setModalType('Add New')\r\n    setValue('roleName')\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Row>\r\n        {data.map((item, index) => {\r\n          return (\r\n            <Col key={index} xl={4} md={6}>\r\n              <Card>\r\n                <CardBody>\r\n                  <div className='d-flex justify-content-between'>\r\n                    <span>{`Total ${item.totalUsers} users`}</span>\r\n                    <AvatarGroup data={item.users} />\r\n                  </div>\r\n                  <div className='d-flex justify-content-between align-items-end mt-1 pt-25'>\r\n                    <div className='role-heading'>\r\n                      <h4 className='fw-bolder'>{item.title}</h4>\r\n                      <Link\r\n                        to='/'\r\n                        className='role-edit-modal'\r\n                        onClick={e => {\r\n                          e.preventDefault()\r\n                          setModalType('Edit')\r\n                          setShow(true)\r\n                        }}\r\n                      >\r\n                        <small className='fw-bolder'>Edit Role</small>\r\n                      </Link>\r\n                    </div>\r\n                    <Link to='' className='text-body' onClick={e => e.preventDefault()}>\r\n                      <Copy className='font-medium-5' />\r\n                    </Link>\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          )\r\n        })}\r\n        <Col xl={4} md={6}>\r\n          <Card>\r\n            <Row>\r\n              <Col sm={5}>\r\n                <div className='d-flex align-items-end justify-content-center h-100'>\r\n                  <img className='img-fluid mt-2' src={illustration} alt='Image' width={85} />\r\n                </div>\r\n              </Col>\r\n              <Col sm={7}>\r\n                <CardBody className='text-sm-end text-center ps-sm-0'>\r\n                  <Button\r\n                    color='primary'\r\n                    className='text-nowrap mb-1'\r\n                    onClick={() => {\r\n                      setModalType('Add New')\r\n                      setShow(true)\r\n                    }}\r\n                  >\r\n                    Add New Role\r\n                  </Button>\r\n                  <p className='mb-0'>Add a new role, if it does not exist</p>\r\n                </CardBody>\r\n              </Col>\r\n            </Row>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <Modal\r\n        isOpen={show}\r\n        onClosed={handleModalClosed}\r\n        toggle={() => setShow(!show)}\r\n        className='modal-dialog-centered modal-lg'\r\n      >\r\n        <ModalHeader className='bg-transparent' toggle={() => setShow(!show)}></ModalHeader>\r\n        <ModalBody className='px-5 pb-5'>\r\n          <div className='text-center mb-4'>\r\n            <h1>{modalType} Role</h1>\r\n            <p>Set role permissions</p>\r\n          </div>\r\n          <Row tag='form' onSubmit={handleSubmit(onSubmit)}>\r\n            <Col xs={12}>\r\n              <Label className='form-label' for='roleName'>\r\n                Role Name\r\n              </Label>\r\n              <Controller\r\n                name='roleName'\r\n                control={control}\r\n                render={({ field }) => (\r\n                  <Input {...field} id='roleName' placeholder='Enter role name' invalid={errors.roleName && true} />\r\n                )}\r\n              />\r\n              {errors.roleName && <FormFeedback>Please enter a valid role name</FormFeedback>}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <h4 className='mt-2 pt-50'>Role Permissions</h4>\r\n              <Table className='table-flush-spacing' responsive>\r\n                <tbody>\r\n                  <tr>\r\n                    <td className='text-nowrap fw-bolder'>\r\n                      <span className='me-50'> Administrator Access</span>\r\n                      <Info size={14} id='info-tooltip' />\r\n                      <UncontrolledTooltip placement='top' target='info-tooltip'>\r\n                        Allows a full access to the system\r\n                      </UncontrolledTooltip>\r\n                    </td>\r\n                    <td>\r\n                      <div className='form-check'>\r\n                        <Input type='checkbox' id='select-all' />\r\n                        <Label className='form-check-label' for='select-all'>\r\n                          Select All\r\n                        </Label>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                  {rolesArr.map((role, index) => {\r\n                    return (\r\n                      <tr key={index}>\r\n                        <td className='text-nowrap fw-bolder'>{role}</td>\r\n                        <td>\r\n                          <div className='d-flex'>\r\n                            <div className='form-check me-3 me-lg-5'>\r\n                              <Input type='checkbox' id={`read-${role}`} />\r\n                              <Label className='form-check-label' for={`read-${role}`}>\r\n                                Read\r\n                              </Label>\r\n                            </div>\r\n                            <div className='form-check me-3 me-lg-5'>\r\n                              <Input type='checkbox' id={`write-${role}`} />\r\n                              <Label className='form-check-label' for={`write-${role}`}>\r\n                                Write\r\n                              </Label>\r\n                            </div>\r\n                            <div className='form-check'>\r\n                              <Input type='checkbox' id={`create-${role}`} />\r\n                              <Label className='form-check-label' for={`create-${role}`}>\r\n                                Create\r\n                              </Label>\r\n                            </div>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    )\r\n                  })}\r\n                </tbody>\r\n              </Table>\r\n            </Col>\r\n            <Col className='text-center mt-2' xs={12}>\r\n              <Button type='submit' color='primary' className='me-1'>\r\n                Submit\r\n              </Button>\r\n              <Button type='reset' outline onClick={onReset}>\r\n                Discard\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </ModalBody>\r\n      </Modal>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default RoleCards\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\roles-permissions\\roles\\Table.js",["3692"],"// ** React Imports\r\nimport { useState, useEffect, forwardRef } from 'react'\r\n\r\n// ** Table Columns\r\nimport { columns } from './columns'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAllData, getData } from '@src/views/apps/user/store'\r\n\r\n// ** Third Party Components\r\nimport ReactPaginate from 'react-paginate'\r\nimport { ChevronDown } from 'react-feather'\r\nimport DataTable from 'react-data-table-component'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, Input, Row, Col } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\n\r\n// ** Bootstrap Checkbox Component\r\nconst BootstrapCheckbox = forwardRef((props, ref) => (\r\n  <div className='form-check'>\r\n    <Input type='checkbox' ref={ref} {...props} />\r\n  </div>\r\n))\r\n\r\n// ** Table Header\r\nconst CustomHeader = ({ plan, handlePlanChange, handlePerPage, rowsPerPage, handleFilter, searchTerm }) => {\r\n  return (\r\n    <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75'>\r\n      <Row>\r\n        <Col xl='6' className='d-flex align-items-center p-0'>\r\n          <div className='d-flex align-items-center w-100'>\r\n            <label htmlFor='rows-per-page'>Show</label>\r\n            <Input\r\n              className='mx-50'\r\n              type='select'\r\n              id='rows-per-page'\r\n              value={rowsPerPage}\r\n              onChange={handlePerPage}\r\n              style={{ width: '5rem' }}\r\n            >\r\n              <option value='10'>10</option>\r\n              <option value='25'>25</option>\r\n              <option value='50'>50</option>\r\n            </Input>\r\n            <label htmlFor='rows-per-page'>Entries</label>\r\n          </div>\r\n        </Col>\r\n        <Col\r\n          xl='6'\r\n          className='d-flex align-items-sm-center justify-content-lg-end justify-content-start flex-lg-nowrap flex-wrap flex-sm-row flex-column pe-lg-1 p-0 mt-lg-0 mt-1'\r\n        >\r\n          <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\r\n            <label className='mb-0' htmlFor='search-invoice'>\r\n              Search:\r\n            </label>\r\n            <Input\r\n              type='text'\r\n              value={searchTerm}\r\n              id='search-invoice'\r\n              className='ms-50 w-100'\r\n              onChange={e => handleFilter(e.target.value)}\r\n            />\r\n          </div>\r\n          <Input value={plan} type='select' style={{ width: '10rem' }} onChange={e => handlePlanChange(e.target.value)}>\r\n            <option value=''>Select Role</option>\r\n            <option value='basic'>Basic</option>\r\n            <option value='company'>Company</option>\r\n            <option value='enterprise'>Enterprise</option>\r\n            <option value='team'>Team</option>\r\n          </Input>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Table = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.users)\r\n\r\n  // ** States\r\n  const [plan, setPlan] = useState('')\r\n  const [sort, setSort] = useState('desc')\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [sortColumn, setSortColumn] = useState('id')\r\n\r\n  // ** Get data on mount\r\n  useEffect(() => {\r\n    dispatch(getAllData())\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        role: '',\r\n        sortColumn,\r\n        status: '',\r\n        q: searchTerm,\r\n        currentPlan: plan,\r\n        page: currentPage,\r\n        perPage: rowsPerPage\r\n      })\r\n    )\r\n  }, [dispatch, store.data.length])\r\n\r\n  // ** Function in get data on page change\r\n  const handlePagination = page => {\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        role: '',\r\n        status: '',\r\n        sortColumn,\r\n        q: searchTerm,\r\n        currentPlan: plan,\r\n        perPage: rowsPerPage,\r\n        page: page.selected + 1\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  // ** Function in get data on rows per page\r\n  const handlePerPage = e => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        role: '',\r\n        sortColumn,\r\n        status: '',\r\n        q: searchTerm,\r\n        perPage: value,\r\n        currentPlan: plan,\r\n        page: currentPage\r\n      })\r\n    )\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = val => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n      getData({\r\n        q: val,\r\n        sort,\r\n        role: '',\r\n        sortColumn,\r\n        status: '',\r\n        currentPlan: plan,\r\n        page: currentPage,\r\n        perPage: rowsPerPage\r\n      })\r\n    )\r\n  }\r\n\r\n  const handlePlanChange = val => {\r\n    setPlan(val)\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        role: val,\r\n        sortColumn,\r\n        status: '',\r\n        q: searchTerm,\r\n        currentPlan: plan,\r\n        page: currentPage,\r\n        perPage: rowsPerPage\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        pageCount={count || 1}\r\n        activeClassName='active'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={page => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\r\n      />\r\n    )\r\n  }\r\n\r\n  // ** Table data to render\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      q: searchTerm\r\n    }\r\n\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n\r\n    if (store.data.length > 0) {\r\n      return store.data\r\n    } else if (store.data.length === 0 && isFiltered) {\r\n      return []\r\n    } else {\r\n      return store.allData.slice(0, rowsPerPage)\r\n    }\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSort(sortDirection)\r\n    setSortColumn(column.sortField)\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        role: '',\r\n        sortColumn,\r\n        status: '',\r\n        q: searchTerm,\r\n        currentPlan: plan,\r\n        page: currentPage,\r\n        perPage: rowsPerPage\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <div className='react-dataTable roles-table'>\r\n        <DataTable\r\n          noHeader\r\n          subHeader\r\n          pagination\r\n          responsive\r\n          selectableRows\r\n          paginationServer\r\n          columns={columns}\r\n          onSort={handleSort}\r\n          data={dataToRender()}\r\n          sortIcon={<ChevronDown />}\r\n          className='react-dataTable'\r\n          paginationComponent={CustomPagination}\r\n          selectableRowsComponent={BootstrapCheckbox}\r\n          subHeaderComponent={\r\n            <CustomHeader\r\n              plan={plan}\r\n              searchTerm={searchTerm}\r\n              rowsPerPage={rowsPerPage}\r\n              handleFilter={handleFilter}\r\n              handlePerPage={handlePerPage}\r\n              handlePlanChange={handlePlanChange}\r\n            />\r\n          }\r\n        />\r\n      </div>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Table\r\n","D:\\Utecho\\Scaff-cert\\src\\@core\\components\\wizard\\index.js",["3693"],"// ** React Imports\r\nimport { useEffect, useState, Fragment, forwardRef } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Stepper from 'bs-stepper'\r\nimport classnames from 'classnames'\r\nimport { PropTypes } from 'prop-types'\r\nimport { ChevronRight } from 'react-feather'\r\n\r\n// ** Styles\r\nimport 'bs-stepper/dist/css/bs-stepper.min.css'\r\nimport '../../../@core/scss/base/plugins/forms/form-wizard.scss'\r\n\r\nconst Wizard = forwardRef((props, ref) => {\r\n  // ** Props\r\n  const { type, className, contentClassName, headerClassName, steps, separator, options, instance } = props\r\n\r\n  // ** State\r\n  const [activeIndex, setActiveIndex] = useState(0)\r\n\r\n  // ** Vars\r\n  let stepper = null\r\n\r\n  // ** Step change listener on mount\r\n  useEffect(() => {\r\n    stepper = new Stepper(ref.current, options)\r\n\r\n    ref.current.addEventListener('shown.bs-stepper', function (event) {\r\n      setActiveIndex(event.detail.indexStep)\r\n    })\r\n\r\n    if (instance) {\r\n      instance(stepper)\r\n    }\r\n  }, [])\r\n\r\n  // ** Renders Wizard Header\r\n  const renderHeader = () => {\r\n    return steps.map((step, index) => {\r\n      return (\r\n        <Fragment key={step.id}>\r\n          {index !== 0 && index !== steps.length ? <div className='line'>{separator}</div> : null}\r\n          <div\r\n            className={classnames('step', {\r\n              crossed: activeIndex > index,\r\n              active: index === activeIndex\r\n            })}\r\n            data-target={`#${step.id}`}\r\n          >\r\n            <button type='button' className='step-trigger'>\r\n              <span className='bs-stepper-box'>{step.icon ? step.icon : index + 1}</span>\r\n              <span className='bs-stepper-label'>\r\n                <span className='bs-stepper-title'>{step.title}</span>\r\n                {step.subtitle ? <span className='bs-stepper-subtitle'>{step.subtitle}</span> : null}\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      )\r\n    })\r\n  }\r\n\r\n  // ** Renders Wizard Content\r\n  const renderContent = () => {\r\n    return steps.map((step, index) => {\r\n      return (\r\n        <div\r\n          className={classnames('content', {\r\n            [contentClassName]: contentClassName,\r\n            'active dstepper-block': activeIndex === index\r\n          })}\r\n          id={step.id}\r\n          key={step.id}\r\n        >\r\n          {step.content}\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className={classnames('bs-stepper', {\r\n        [className]: className,\r\n        vertical: type === 'vertical',\r\n        'vertical wizard-modern': type === 'modern-vertical',\r\n        'wizard-modern': type === 'modern-horizontal'\r\n      })}\r\n    >\r\n      <div className={classnames('bs-stepper-header', { [headerClassName]: headerClassName })}>{renderHeader()}</div>\r\n      <div className='bs-stepper-content'>{renderContent()}</div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Wizard\r\n\r\n// ** Default Props\r\nWizard.defaultProps = {\r\n  options: {},\r\n  type: 'horizontal',\r\n  separator: <ChevronRight size={17} />\r\n}\r\n\r\n// ** PropTypes\r\nWizard.propTypes = {\r\n  type: PropTypes.string,\r\n  instance: PropTypes.func,\r\n  options: PropTypes.object,\r\n  className: PropTypes.string,\r\n  separator: PropTypes.element,\r\n  headerClassName: PropTypes.string,\r\n  contentClassName: PropTypes.string,\r\n  steps: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      subtitle: PropTypes.string,\r\n      icon: PropTypes.any,\r\n      content: PropTypes.any.isRequired\r\n    })\r\n  ).isRequired\r\n}\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\components\\breadcrumbs\\BreadcrumbsDefault.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\roles-permissions\\permissions\\columns.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\invoice\\add\\AddActions.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\invoice\\add\\AddCard.js",["3694"],"// ** React Imports\r\nimport { Fragment, useState, useEffect } from 'react'\r\n\r\n// ** Custom Components\r\nimport Sidebar from '@components/sidebar'\r\nimport Repeater from '@components/repeater'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport Flatpickr from 'react-flatpickr'\r\nimport { SlideDown } from 'react-slidedown'\r\nimport { X, Plus, Hash } from 'react-feather'\r\nimport Select, { components } from 'react-select'\r\n\r\n// ** Reactstrap Imports\r\nimport { selectThemeColors } from '@utils'\r\nimport { Row, Col, Card, Form, Input, Label, Button, CardBody, CardText, InputGroup, InputGroupText } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport 'react-slidedown/lib/slidedown.css'\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\r\nimport '@styles/base/pages/app-invoice.scss'\r\n\r\nconst AddCard = () => {\r\n  // ** States\r\n  const [count, setCount] = useState(1)\r\n  const [value, setValue] = useState({})\r\n  const [open, setOpen] = useState(false)\r\n  const [clients, setClients] = useState(null)\r\n  const [selected, setSelected] = useState(null)\r\n  const [picker, setPicker] = useState(new Date())\r\n  const [invoiceNumber, setInvoiceNumber] = useState(false)\r\n  const [dueDatepicker, setDueDatePicker] = useState(new Date())\r\n  const [options, setOptions] = useState([\r\n    {\r\n      value: 'add-new',\r\n      label: 'Add New Customer',\r\n      type: 'button',\r\n      color: 'flat-success'\r\n    }\r\n  ])\r\n\r\n  useEffect(() => {\r\n    // ** Get Clients\r\n    axios.get('/api/invoice/clients').then(response => {\r\n      const arr = options\r\n      response.data.map(item => arr.push({ value: item.name, label: item.name }))\r\n      setOptions([...arr])\r\n      setClients(response.data)\r\n    })\r\n\r\n    // ** Get Invoices & Set Invoice Number\r\n    axios\r\n      .get('/apps/invoice/invoices', {\r\n        q: '',\r\n        page: 1,\r\n        status: '',\r\n        sort: 'asc',\r\n        perPage: 10,\r\n        sortColumn: 'id'\r\n      })\r\n      .then(response => {\r\n        const lastInvoiceNumber = Math.max.apply(\r\n          Math,\r\n          response.data.allData.map(i => i.id)\r\n        )\r\n        setInvoiceNumber(lastInvoiceNumber + 1)\r\n      })\r\n  }, [])\r\n\r\n  // ** Deletes form\r\n  const deleteForm = e => {\r\n    e.preventDefault()\r\n    e.target.closest('.repeater-wrapper').remove()\r\n  }\r\n\r\n  // ** Function to toggle sidebar\r\n  const toggleSidebar = () => setOpen(!open)\r\n\r\n  // ** Vars\r\n  const countryOptions = [\r\n    { value: 'australia', label: 'Australia' },\r\n    { value: 'canada', label: 'Canada' },\r\n    { value: 'russia', label: 'Russia' },\r\n    { value: 'saudi-arabia', label: 'Saudi Arabia' },\r\n    { value: 'singapore', label: 'Singapore' },\r\n    { value: 'sweden', label: 'Sweden' },\r\n    { value: 'switzerland', label: 'Switzerland' },\r\n    { value: 'united-kingdom', label: 'United Kingdom' },\r\n    { value: 'united-arab-emirates', label: 'United Arab Emirates' },\r\n    { value: 'united-states-of-america', label: 'United States of America' }\r\n  ]\r\n\r\n  // ** Custom Options Component\r\n  const OptionComponent = ({ data, ...props }) => {\r\n    if (data.type === 'button') {\r\n      return (\r\n        <Button className='text-start rounded-0 px-50' color={data.color} block onClick={() => setOpen(true)}>\r\n          <Plus className='font-medium-1 me-50' />\r\n          <span className='align-middle'>{data.label}</span>\r\n        </Button>\r\n      )\r\n    } else {\r\n      return <components.Option {...props}> {data.label} </components.Option>\r\n    }\r\n  }\r\n\r\n  // ** Invoice To OnChange\r\n  const handleInvoiceToChange = data => {\r\n    setValue(data)\r\n    setSelected(clients.filter(i => i.name === data.value)[0])\r\n  }\r\n\r\n  const note =\r\n    'It was a pleasure working with you and your team. We hope you will keep us in mind for future freelance projects. Thank You!'\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card className='invoice-preview-card'>\r\n        {/* Header */}\r\n        <CardBody className='invoice-padding pb-0'>\r\n          <div className='d-flex justify-content-between flex-md-row flex-column invoice-spacing mt-0'>\r\n            <div>\r\n              <div className='logo-wrapper'>\r\n                <svg viewBox='0 0 139 95' version='1.1' height='24'>\r\n                  <defs>\r\n                    <linearGradient id='invoice-linearGradient-1' x1='100%' y1='10.5120544%' x2='50%' y2='89.4879456%'>\r\n                      <stop stopColor='#000000' offset='0%'></stop>\r\n                      <stop stopColor='#FFFFFF' offset='100%'></stop>\r\n                    </linearGradient>\r\n                    <linearGradient\r\n                      id='invoice-linearGradient-2'\r\n                      x1='64.0437835%'\r\n                      y1='46.3276743%'\r\n                      x2='37.373316%'\r\n                      y2='100%'\r\n                    >\r\n                      <stop stopColor='#EEEEEE' stopOpacity='0' offset='0%'></stop>\r\n                      <stop stopColor='#FFFFFF' offset='100%'></stop>\r\n                    </linearGradient>\r\n                  </defs>\r\n                  <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\r\n                    <g transform='translate(-400.000000, -178.000000)'>\r\n                      <g transform='translate(400.000000, 178.000000)'>\r\n                        <path\r\n                          className='text-primary'\r\n                          d='M-5.68434189e-14,2.84217094e-14 L39.1816085,2.84217094e-14 L69.3453773,32.2519224 L101.428699,2.84217094e-14 L138.784583,2.84217094e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L6.71554594,44.4188507 C2.46876683,39.9813776 0.345377275,35.1089553 0.345377275,29.8015838 C0.345377275,24.4942122 0.230251516,14.560351 -5.68434189e-14,2.84217094e-14 Z'\r\n                          style={{ fill: 'currentColor' }}\r\n                        ></path>\r\n                        <path\r\n                          d='M69.3453773,32.2519224 L101.428699,1.42108547e-14 L138.784583,1.42108547e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L32.8435758,70.5039241 L69.3453773,32.2519224 Z'\r\n                          fill='url(#invoice-linearGradient-1)'\r\n                          opacity='0.2'\r\n                        ></path>\r\n                        <polygon\r\n                          fill='#000000'\r\n                          opacity='0.049999997'\r\n                          points='69.3922914 32.4202615 32.8435758 70.5039241 54.0490008 16.1851325'\r\n                        ></polygon>\r\n                        <polygon\r\n                          fill='#000000'\r\n                          opacity='0.099999994'\r\n                          points='69.3922914 32.4202615 32.8435758 70.5039241 58.3683556 20.7402338'\r\n                        ></polygon>\r\n                        <polygon\r\n                          fill='url(#invoice-linearGradient-2)'\r\n                          opacity='0.099999994'\r\n                          points='101.428699 0 83.0667527 94.1480575 130.378721 47.0740288'\r\n                        ></polygon>\r\n                      </g>\r\n                    </g>\r\n                  </g>\r\n                </svg>\r\n                <h3 className='text-primary invoice-logo'>Vuexy</h3>\r\n              </div>\r\n              <p className='card-text mb-25'>Office 149, 450 South Brand Brooklyn</p>\r\n              <p className='card-text mb-25'>San Diego County, CA 91905, USA</p>\r\n              <p className='card-text mb-0'>+1 (123) 456 7891, +44 (876) 543 2198</p>\r\n            </div>\r\n            <div className='invoice-number-date mt-md-0 mt-2'>\r\n              <div className='d-flex align-items-center justify-content-md-end mb-1'>\r\n                <h4 className='invoice-title'>Invoice</h4>\r\n                <InputGroup className='input-group-merge invoice-edit-input-group disabled'>\r\n                  <InputGroupText>\r\n                    <Hash size={15} />\r\n                  </InputGroupText>\r\n                  <Input\r\n                    type='number'\r\n                    className='invoice-edit-input'\r\n                    value={invoiceNumber || 3171}\r\n                    placeholder='53634'\r\n                    disabled\r\n                  />\r\n                </InputGroup>\r\n              </div>\r\n              <div className='d-flex align-items-center mb-1'>\r\n                <span className='title'>Date:</span>\r\n                <Flatpickr\r\n                  value={picker}\r\n                  onChange={date => setPicker(date)}\r\n                  className='form-control invoice-edit-input date-picker'\r\n                />\r\n              </div>\r\n              <div className='d-flex align-items-center'>\r\n                <span className='title'>Due Date:</span>\r\n                <Flatpickr\r\n                  value={dueDatepicker}\r\n                  onChange={date => setDueDatePicker(date)}\r\n                  className='form-control invoice-edit-input due-date-picker'\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CardBody>\r\n        {/* /Header */}\r\n\r\n        <hr className='invoice-spacing' />\r\n\r\n        {/* Address and Contact */}\r\n        <CardBody className='invoice-padding pt-0'>\r\n          <Row className='row-bill-to invoice-spacing'>\r\n            <Col className='col-bill-to ps-0' xl='8'>\r\n              <h6 className='invoice-to-title'>Invoice To:</h6>\r\n              <div className='invoice-customer'>\r\n                {clients !== null ? (\r\n                  <Fragment>\r\n                    <Select\r\n                      className='react-select'\r\n                      classNamePrefix='select'\r\n                      id='label'\r\n                      value={value}\r\n                      options={options}\r\n                      theme={selectThemeColors}\r\n                      components={{\r\n                        Option: OptionComponent\r\n                      }}\r\n                      onChange={handleInvoiceToChange}\r\n                    />\r\n                    {selected !== null ? (\r\n                      <div className='customer-details mt-1'>\r\n                        <p className='mb-25'>{selected.name}</p>\r\n                        <p className='mb-25'>{selected.company}</p>\r\n                        <p className='mb-25'>{selected.address}</p>\r\n                        <p className='mb-25'>{selected.country}</p>\r\n                        <p className='mb-0'>{selected.contact}</p>\r\n                        <p className='mb-0'>{selected.companyEmail}</p>\r\n                      </div>\r\n                    ) : null}\r\n                  </Fragment>\r\n                ) : null}\r\n              </div>\r\n            </Col>\r\n            <Col className='pe-0 mt-xl-0 mt-2' xl='4'>\r\n              <h6 className='mb-2'>Payment Details:</h6>\r\n              <table>\r\n                <tbody>\r\n                  <tr>\r\n                    <td className='pe-1'>Total Due:</td>\r\n                    <td>\r\n                      <span className='fw-bolder'>$12,110.55</span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className='pe-1'>Bank name:</td>\r\n                    <td>American Bank</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className='pe-1'>Country:</td>\r\n                    <td>United States</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className='pe-1'>IBAN:</td>\r\n                    <td>ETD95476213874685</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className='pe-1'>SWIFT code:</td>\r\n                    <td>BR91905</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n        {/* /Address and Contact */}\r\n\r\n        {/* Product Details */}\r\n        <CardBody className='invoice-padding invoice-product-details'>\r\n          <Repeater count={count}>\r\n            {i => {\r\n              const Tag = i === 0 ? 'div' : SlideDown\r\n              return (\r\n                <Tag key={i} className='repeater-wrapper'>\r\n                  <Row>\r\n                    <Col className='d-flex product-details-border position-relative pe-0' sm='12'>\r\n                      <Row className='w-100 pe-lg-0 pe-1 py-2'>\r\n                        <Col className='mb-lg-0 mb-2 mt-lg-0 mt-2' lg='5' sm='12'>\r\n                          <CardText className='col-title mb-md-50 mb-0'>Item</CardText>\r\n                          <Input type='select' className='item-details'>\r\n                            <option>App Design</option>\r\n                            <option>App Customization</option>\r\n                            <option>ABC Template</option>\r\n                            <option>App Development</option>\r\n                          </Input>\r\n                          <Input className='mt-2' type='textarea' rows='1' defaultValue='Customization & Bug Fixes' />\r\n                        </Col>\r\n                        <Col className='my-lg-0 my-2' lg='3' sm='12'>\r\n                          <CardText className='col-title mb-md-2 mb-0'>Cost</CardText>\r\n                          <Input type='number' defaultValue='24' placeholder='24' />\r\n                          <div className='mt-2'>\r\n                            <span>Discount:</span> <span>0%</span>\r\n                          </div>\r\n                        </Col>\r\n                        <Col className='my-lg-0 my-2' lg='2' sm='12'>\r\n                          <CardText className='col-title mb-md-2 mb-0'>Qty</CardText>\r\n                          <Input type='number' defaultValue='1' placeholder='1' />\r\n                        </Col>\r\n                        <Col className='my-lg-0 mt-2' lg='2' sm='12'>\r\n                          <CardText className='col-title mb-md-50 mb-0'>Price</CardText>\r\n                          <CardText className='mb-0'>$24.00</CardText>\r\n                        </Col>\r\n                      </Row>\r\n                      <div className='d-flex justify-content-center border-start invoice-product-actions py-50 px-25'>\r\n                        <X size={18} className='cursor-pointer' onClick={deleteForm} />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Tag>\r\n              )\r\n            }}\r\n          </Repeater>\r\n          <Row className='mt-1'>\r\n            <Col sm='12' className='px-0'>\r\n              <Button color='primary' size='sm' className='btn-add-new' onClick={() => setCount(count + 1)}>\r\n                <Plus size={14} className='me-25'></Plus> <span className='align-middle'>Add Item</span>\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n\r\n        {/* /Product Details */}\r\n\r\n        {/* Invoice Total */}\r\n        <CardBody className='invoice-padding'>\r\n          <Row className='invoice-sales-total-wrapper'>\r\n            <Col className='mt-md-0 mt-3' md={{ size: '6', order: 1 }} xs={{ size: 12, order: 2 }}>\r\n              <div className='d-flex align-items-center mb-1'>\r\n                <Label for='salesperson' className='form-label'>\r\n                  Salesperson:\r\n                </Label>\r\n                <Input type='text' className='ms-50' id='salesperson' placeholder='Edward Crowley' />\r\n              </div>\r\n            </Col>\r\n            <Col className='d-flex justify-content-end' md={{ size: '6', order: 2 }} xs={{ size: 12, order: 1 }}>\r\n              <div className='invoice-total-wrapper'>\r\n                <div className='invoice-total-item'>\r\n                  <p className='invoice-total-title'>Subtotal:</p>\r\n                  <p className='invoice-total-amount'>$1800</p>\r\n                </div>\r\n                <div className='invoice-total-item'>\r\n                  <p className='invoice-total-title'>Discount:</p>\r\n                  <p className='invoice-total-amount'>$28</p>\r\n                </div>\r\n                <div className='invoice-total-item'>\r\n                  <p className='invoice-total-title'>Tax:</p>\r\n                  <p className='invoice-total-amount'>21%</p>\r\n                </div>\r\n                <hr className='my-50' />\r\n                <div className='invoice-total-item'>\r\n                  <p className='invoice-total-title'>Total:</p>\r\n                  <p className='invoice-total-amount'>$1690</p>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n        {/* /Invoice Total */}\r\n\r\n        <hr className='invoice-spacing mt-0' />\r\n\r\n        {/* Invoice Note */}\r\n        <CardBody className='invoice-padding py-0'>\r\n          <Row>\r\n            <Col>\r\n              <div className='mb-2'>\r\n                <Label for='note' className='form-label fw-bold'>\r\n                  Note:\r\n                </Label>\r\n                <Input type='textarea' rows='2' id='note' defaultValue={note} />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n        {/* /Invoice Note */}\r\n      </Card>\r\n\r\n      <Sidebar\r\n        size='lg'\r\n        open={open}\r\n        title='Add Payment'\r\n        headerClassName='mb-1'\r\n        contentClassName='p-0'\r\n        toggleSidebar={toggleSidebar}\r\n      >\r\n        <Form>\r\n          <div className='mb-2'>\r\n            <Label for='customer-name' className='form-label'>\r\n              Customer Name\r\n            </Label>\r\n            <Input id='customer-name' placeholder='John Doe' />\r\n          </div>\r\n          <div className='mb-2'>\r\n            <Label for='customer-email' className='form-label'>\r\n              Customer Email\r\n            </Label>\r\n            <Input type='email' id='customer-email' placeholder='example@domain.com' />\r\n          </div>\r\n          <div className='mb-2'>\r\n            <Label for='customer-address' className='form-label'>\r\n              Customer Address\r\n            </Label>\r\n            <Input type='textarea' cols='2' rows='2' id='customer-address' placeholder='1307 Lady Bug Drive New York' />\r\n          </div>\r\n          <div className='mb-2'>\r\n            <Label for='country' className='form-label'>\r\n              Country\r\n            </Label>\r\n            <Select\r\n              theme={selectThemeColors}\r\n              className='react-select'\r\n              classNamePrefix='select'\r\n              options={countryOptions}\r\n              isClearable={false}\r\n            />\r\n          </div>\r\n          <div className='mb-2'>\r\n            <Label for='customer-contact' className='form-label'>\r\n              Contact\r\n            </Label>\r\n            <Input type='number' id='customer-contact' placeholder='763-242-9206' />\r\n          </div>\r\n          <div className='d-flex flex-wrap my-2'>\r\n            <Button className='me-1' color='primary' onClick={() => setOpen(false)}>\r\n              Add\r\n            </Button>\r\n            <Button color='secondary' onClick={() => setOpen(false)} outline>\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </Sidebar>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AddCard\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\invoice\\edit\\EditActions.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\invoice\\edit\\EditCard.js",[],"D:\\Utecho\\Scaff-cert\\src\\@core\\components\\widgets\\stats\\StatsHorizontal.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-repeater\\RepeatingFormAnimated.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\invoice\\shared-sidebar\\SidebarAddPayment.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\invoice\\shared-sidebar\\SidebarSendInvoice.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\toasts\\ToastSourceCode.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\toasts\\ToastTranslucent.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\toasts\\ToastHeaderIcons.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-repeater\\RepeatingForm.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\charts\\recharts\\RadarChart.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\charts\\recharts\\ScatterChart.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\charts\\recharts\\AreaChart.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\charts\\recharts\\LineChart.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\charts\\recharts\\PieChart.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\charts\\recharts\\BarChart.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\ecommerce\\shop\\ProductsSearchbar.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\ecommerce\\shop\\ProductsHeader.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\ecommerce\\shop\\ProductCards.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\analytics\\Sales2.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\analytics\\SessionByDevice.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\analytics\\ProductOrders.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\statistics\\SubscribersGained.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\advance\\CardCongratulations.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\statistics\\RevenueGenerated.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\statistics\\OrdersReceived.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\view\\UserProjectsList.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\view\\Notifications.js",[],"D:\\Utecho\\Scaff-cert\\src\\@core\\components\\timeline\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\view\\UserTimeline.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\view\\BillingTab.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\view\\SecurityTab.js",["3695"],"// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  Table,\r\n  Alert,\r\n  Input,\r\n  Modal,\r\n  Button,\r\n  CardBody,\r\n  CardTitle,\r\n  ModalBody,\r\n  CardHeader,\r\n  ModalHeader,\r\n  FormFeedback\r\n} from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\n\r\n// ** Third Party Components\r\nimport * as yup from 'yup'\r\nimport Cleave from 'cleave.js/react'\r\nimport 'cleave.js/dist/addons/cleave-phone.us'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport { Edit, Trash, Settings, MessageSquare, ChevronRight } from 'react-feather'\r\n\r\n// ** Images\r\nimport qrCode from '@src/assets/images/icons/qrcode.png'\r\nimport chromeLogo from '@src/assets/images/icons/google-chrome.png'\r\n\r\nconst SignupSchema = yup.object().shape({\r\n  password: yup.string().min(8).required(),\r\n  confirmPassword: yup\r\n    .string()\r\n    .min(8)\r\n    .oneOf([yup.ref('password'), null], 'Passwords must match')\r\n})\r\n\r\nconst recentDevicesArr = [\r\n  {\r\n    device: 'Dell XPS 15',\r\n    location: 'United States',\r\n    browser: 'Chrome on Windows',\r\n    activity: '10, Jan 2021 20:07'\r\n  },\r\n  {\r\n    location: 'Ghana',\r\n    device: 'Google Pixel 3a',\r\n    browser: 'Chrome on Android',\r\n    activity: '11, Jan 2021 10:16'\r\n  },\r\n  {\r\n    location: 'Mayotte',\r\n    device: 'Apple iMac',\r\n    browser: 'Chrome on MacOS',\r\n    activity: '11, Jan 2021 12:10'\r\n  },\r\n  {\r\n    location: 'Mauritania',\r\n    device: 'Apple iPhone XR',\r\n    browser: 'Chrome on iPhone',\r\n    activity: '12, Jan 2021 8:29'\r\n  }\r\n]\r\n\r\nconst defaultValues = {\r\n  password: '',\r\n  confirmPassword: ''\r\n}\r\n\r\nconst AppAuthComponent = ({ setShow, setShowDetailModal }) => {\r\n  const toggle = () => {\r\n    setShow(false)\r\n    setShowDetailModal(false)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='text-center mb-2 pb-50'>Add Authenticator App</h1>\r\n      <h4>Authenticator Apps</h4>\r\n      <p>\r\n        Using an authenticator app like Google Authenticator, Microsoft Authenticator, Authy, or 1Password, scan the QR\r\n        code. It will generate a 6 digit code for you to enter below.\r\n      </p>\r\n      <div className='d-flex justify-content-center my-2 py-50'>\r\n        <img src={qrCode} alt='QR Code' className='img-fluid' width='122' />\r\n      </div>\r\n      <Alert color='warning'>\r\n        <h4 className='alert-heading'>ASDLKNASDA9AHS678dGhASD78AB</h4>\r\n        <div className='alert-body fw-normal'>\r\n          If you having trouble using the QR code, select manual entry on your app\r\n        </div>\r\n      </Alert>\r\n      <Row className='gy-1'>\r\n        <Col xs={12}>\r\n          <Input placeholder='Enter authentication code' />\r\n        </Col>\r\n        <Col className='d-flex justify-content-end' xs={12}>\r\n          <Button outline color='secondary' className='mt-1 me-1' onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n          <Button color='primary' className='mt-1'>\r\n            <span className='me-50'>Continue</span>\r\n            <ChevronRight size={14} />\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst AppSMSComponent = ({ setShow, setShowDetailModal }) => {\r\n  const toggle = () => {\r\n    setShow(false)\r\n    setShowDetailModal(false)\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <h1 className='text-center mb-2 pb-50'>Add your number</h1>\r\n      <h4>Verify Your Mobile Number for SMS</h4>\r\n      <p>Enter your mobile phone number with country code and we will send you a verification code.</p>\r\n      <Row className='gy-1 mt-1'>\r\n        <Col xs={12}>\r\n          <Cleave\r\n            className='form-control'\r\n            placeholder='1 234 567 8900'\r\n            options={{ phone: true, phoneRegionCode: 'US' }}\r\n          />\r\n        </Col>\r\n        <Col className='d-flex justify-content-end' xs={12}>\r\n          <Button outline color='secondary' className='mt-1 me-1' onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n          <Button color='primary' className='mt-1'>\r\n            <span className='me-50'>Continue</span>\r\n            <ChevronRight size={14} />\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst SecurityTab = () => {\r\n  // ** Hooks\r\n  const [show, setShow] = useState(false)\r\n  const [authType, setAuthType] = useState('authApp')\r\n  const [showDetailModal, setShowDetailModal] = useState(false)\r\n  const {\r\n    control,\r\n    trigger,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({ defaultValues, resolver: yupResolver(SignupSchema) })\r\n\r\n  const onSubmit = data => {\r\n    trigger()\r\n    console.log(data)\r\n  }\r\n  const handleContinue = () => {\r\n    setShow(false)\r\n    setShowDetailModal(true)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle tag='h4'>Change Password</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Form onSubmit={handleSubmit(onSubmit)}>\r\n            <Alert color='warning' className='mb-2'>\r\n              <h4 className='alert-heading'>Ensure that these requirements are met</h4>\r\n              <div className='alert-body'>Minimum 8 characters long, uppercase & symbol</div>\r\n            </Alert>\r\n            <Row>\r\n              <Col className='mb-2' md={6}>\r\n                <Controller\r\n                  id='password'\r\n                  name='password'\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <InputPasswordToggle\r\n                      label='New Password'\r\n                      htmlFor='password'\r\n                      className='input-group-merge'\r\n                      invalid={errors.password && true}\r\n                      {...field}\r\n                    />\r\n                  )}\r\n                />\r\n                {errors.password && <FormFeedback className='d-block'>{errors.password.message}</FormFeedback>}\r\n              </Col>\r\n              <Col className='mb-2' md={6}>\r\n                <Controller\r\n                  control={control}\r\n                  id='confirmPassword'\r\n                  name='confirmPassword'\r\n                  render={({ field }) => (\r\n                    <InputPasswordToggle\r\n                      label='Confirm New Password'\r\n                      htmlFor='confirmPassword'\r\n                      className='input-group-merge'\r\n                      invalid={errors.confirmPassword && true}\r\n                      {...field}\r\n                    />\r\n                  )}\r\n                />\r\n                {errors.confirmPassword && (\r\n                  <FormFeedback className='d-block'>{errors.confirmPassword.message}</FormFeedback>\r\n                )}\r\n              </Col>\r\n              <Col xs={12}>\r\n                <Button type='submit' color='primary'>\r\n                  Change Password\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n      <Card>\r\n        <CardBody>\r\n          <CardTitle className='mb-50'>Two-steps verification</CardTitle>\r\n          <span>Keep your account secure with authentication step.</span>\r\n          <h6 className='fw-bolder mt-2'>SMS</h6>\r\n          <div className='d-flex justify-content-between border-bottom mb-1 pb-1'>\r\n            <span>+1(968) 945-8832</span>\r\n            <div className='action-icons'>\r\n              <Link\r\n                to='/'\r\n                className='text-body'\r\n                onClick={e => {\r\n                  setShow(true)\r\n                  e.preventDefault()\r\n                }}\r\n              >\r\n                <Edit className='font-medium-3 me-1 cursor-pointer' />\r\n              </Link>\r\n              <Link to='/' className='text-body' onClick={e => e.preventDefault()}>\r\n                <Trash className='font-medium-3 cursor-pointer' />\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <p className='mb-0'>\r\n            Two-factor authentication adds an additional layer of security to your account by requiring more than just a\r\n            password to log in.{' '}\r\n            <a href='#' onClick={e => e.preventDefault()}>\r\n              Learn more.\r\n            </a>\r\n          </p>\r\n        </CardBody>\r\n      </Card>\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle tag='h4'>Recent devices</CardTitle>\r\n        </CardHeader>\r\n        <Table className='text-nowrap text-center' responsive>\r\n          <thead>\r\n            <tr>\r\n              <th className='text-start'>Browser</th>\r\n              <th>Device</th>\r\n              <th>Location</th>\r\n              <th>Recent Activity</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {recentDevicesArr.map((item, index) => {\r\n              return (\r\n                <tr key={index}>\r\n                  <td className='text-start'>\r\n                    <img className='me-50' src={chromeLogo} alt={item.device} width='20' height='20' />\r\n                    <span className='fw-bolder'>{item.browser}</span>\r\n                  </td>\r\n                  <td>{item.device}</td>\r\n                  <td>{item.location}</td>\r\n                  <td>{item.activity}</td>\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </Card>\r\n      <Modal isOpen={show} toggle={() => setShow(!show)} className='modal-dialog-centered modal-lg'>\r\n        <ModalHeader className='bg-transparent' toggle={() => setShow(!show)}></ModalHeader>\r\n        <ModalBody className='pb-5 px-sm-5 mx-50'>\r\n          <h1 className='text-center mb-1'>Select Authentication Method</h1>\r\n          <p className='text-center mb-3'>\r\n            you also need to select a method by which the proxy\r\n            <br />\r\n            authenticates to the directory serve\r\n          </p>\r\n          <div className='custom-options-checkable'>\r\n            <input\r\n              type='radio'\r\n              id='authApp'\r\n              name='authType'\r\n              checked={authType === 'authApp'}\r\n              className='custom-option-item-check'\r\n              onChange={() => setAuthType('authApp')}\r\n            />\r\n            <label\r\n              htmlFor='authApp'\r\n              className='custom-option-item d-flex align-items-center flex-column flex-sm-row px-3 py-2 mb-2'\r\n            >\r\n              <span>\r\n                <Settings className='font-large-2 me-sm-2 mb-2 mb-sm-0' />\r\n              </span>\r\n              <span>\r\n                <span className='custom-option-item-title d-block h3'>Authenticator Apps</span>\r\n                <span className='mt-75'>\r\n                  Get codes from an app like Google Authenticator, Microsoft Authenticator, Authy or 1Password.\r\n                </span>\r\n              </span>\r\n            </label>\r\n            <input\r\n              type='radio'\r\n              id='authSMS'\r\n              name='authType'\r\n              checked={authType === 'authSMS'}\r\n              className='custom-option-item-check'\r\n              onChange={() => setAuthType('authSMS')}\r\n            />\r\n            <label\r\n              htmlFor='authSMS'\r\n              className='custom-option-item d-flex align-items-center flex-column flex-sm-row px-3 py-2 mb-2'\r\n            >\r\n              <span>\r\n                <MessageSquare className='font-large-2 me-sm-2 mb-2 mb-sm-0' />\r\n              </span>\r\n              <span>\r\n                <span className='custom-option-item-title d-block h3'>SMS</span>\r\n                <span className='mt-75'>We will send a code via SMS if you need to use your backup login method.</span>\r\n              </span>\r\n            </label>\r\n          </div>\r\n          <Button color='primary' className='float-end mt-2' onClick={handleContinue}>\r\n            <span className='me-50'>Continue</span>\r\n            <ChevronRight size={14} />\r\n          </Button>\r\n        </ModalBody>\r\n      </Modal>\r\n      <Modal\r\n        isOpen={showDetailModal}\r\n        className='modal-dialog-centered modal-lg'\r\n        toggle={() => setShowDetailModal(!showDetailModal)}\r\n      >\r\n        <ModalHeader className='bg-transparent' toggle={() => setShowDetailModal(!showDetailModal)}></ModalHeader>\r\n        <ModalBody className='pb-5 px-sm-5 mx-50'>\r\n          {authType === 'authApp' ? (\r\n            <AppAuthComponent setShow={setShow} setShowDetailModal={setShowDetailModal} />\r\n          ) : (\r\n            <AppSMSComponent setShow={setShow} setShowDetailModal={setShowDetailModal} />\r\n          )}\r\n        </ModalBody>\r\n      </Modal>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default SecurityTab\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\view\\Connections.js",["3696"],"// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody, CardTitle, Input, Label, Button } from 'reactstrap'\r\n\r\n// ** Icons Imports\r\nimport { Check, X, Link } from 'react-feather'\r\n\r\nconst connectedAccounts = [\r\n  {\r\n    checked: true,\r\n    title: 'Google',\r\n    subtitle: 'Calendar and contacts',\r\n    logo: require('@src/assets/images/icons/social/google.png').default\r\n  },\r\n  {\r\n    checked: false,\r\n    title: 'Slack',\r\n    subtitle: 'Communication',\r\n    logo: require('@src/assets/images/icons/social/slack.png').default\r\n  },\r\n  {\r\n    checked: true,\r\n    title: 'Github',\r\n    subtitle: 'Git repositories',\r\n    logo: require('@src/assets/images/icons/social/github.png').default\r\n  },\r\n  {\r\n    checked: false,\r\n    title: 'Mailchimp',\r\n    subtitle: 'Email marketing service',\r\n    logo: require('@src/assets/images/icons/social/mailchimp.png').default\r\n  },\r\n  {\r\n    checked: false,\r\n    title: 'Asana',\r\n    subtitle: 'Communication',\r\n    logo: require('@src/assets/images/icons/social/asana.png').default\r\n  }\r\n]\r\n\r\nconst socialAccounts = [\r\n  {\r\n    linked: false,\r\n    title: 'Facebook',\r\n    logo: require('@src/assets/images/icons/social/facebook.png').default\r\n  },\r\n  {\r\n    linked: true,\r\n    title: 'Twitter',\r\n    url: 'https://twitter.com/pixinvent',\r\n    logo: require('@src/assets/images/icons/social/twitter.png').default\r\n  },\r\n  {\r\n    linked: true,\r\n    title: 'Linkedin',\r\n    url: 'https://www.linkedin.com/company/pixinvent/',\r\n    logo: require('@src/assets/images/icons/social/linkedin.png').default\r\n  },\r\n  {\r\n    linked: false,\r\n    title: 'Dribbble',\r\n    logo: require('@src/assets/images/icons/social/dribbble.png').default\r\n  },\r\n  {\r\n    linked: false,\r\n    title: 'Behance',\r\n    logo: require('@src/assets/images/icons/social/behance.png').default\r\n  }\r\n]\r\n\r\nconst connections = () => {\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <CardTitle className='mb-75'>Connected accounts</CardTitle>\r\n          <p>Display content from your connected accounts on your site</p>\r\n          {connectedAccounts.map((item, index) => {\r\n            return (\r\n              <div key={index} className='d-flex mt-2'>\r\n                <div className='flex-shrink-0'>\r\n                  <img className='me-1' src={item.logo} alt={item.title} height='38' width='38' />\r\n                </div>\r\n                <div className='d-flex align-item-center justify-content-between flex-grow-1'>\r\n                  <div className='me-1'>\r\n                    <p className='fw-bolder mb-0'>{item.title}</p>\r\n                    <span>{item.subtitle}</span>\r\n                  </div>\r\n                  <div className='mt-50 mt-sm-0'>\r\n                    <div className='form-switch'>\r\n                      <Input type='switch' defaultChecked={item.checked} id={`account-${item.title}`} />\r\n                      <Label className='form-check-label' for={`account-${item.title}`}>\r\n                        <span className='switch-icon-left'>\r\n                          <Check size={14} />\r\n                        </span>\r\n                        <span className='switch-icon-right'>\r\n                          <X size={14} />\r\n                        </span>\r\n                      </Label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )\r\n          })}\r\n        </CardBody>\r\n      </Card>\r\n      <Card>\r\n        <CardBody>\r\n          <CardTitle className='mb-75'>Social accounts</CardTitle>\r\n          <p>Display content from social accounts on your site</p>\r\n          {socialAccounts.map((item, index) => {\r\n            return (\r\n              <div key={index} className='d-flex mt-2'>\r\n                <div className='flex-shrink-0'>\r\n                  <img className='me-1' src={item.logo} alt={item.title} height='38' width='38' />\r\n                </div>\r\n                <div className='d-flex align-item-center justify-content-between flex-grow-1'>\r\n                  <div className='me-1'>\r\n                    <p className='fw-bolder mb-0'>{item.title}</p>\r\n                    {item.linked ? (\r\n                      <a href={item.url} target='_blank'>\r\n                        @pixinvent\r\n                      </a>\r\n                    ) : (\r\n                      <span>Not Connected</span>\r\n                    )}\r\n                  </div>\r\n                  <div className='mt-50 mt-sm-0'>\r\n                    <Button outline className='btn-icon'>\r\n                      {item.linked ? <X className='font-medium-3' /> : <Link className='font-medium-3' />}\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )\r\n          })}\r\n        </CardBody>\r\n      </Card>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default connections\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\view\\InvoiceList.js",["3697"],"// ** React Imports\r\nimport { useState, useEffect } from 'react'\r\n\r\n// ** Table Columns\r\nimport { columns } from './columns'\r\n\r\n// ** Third Party Components\r\nimport DataTable from 'react-data-table-component'\r\nimport { ChevronDown, ExternalLink, Printer, FileText, File, Clipboard, Copy } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Card,\r\n  CardTitle,\r\n  CardHeader,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\n// ** Store & Actions\r\nimport { getData } from '@src/views/apps/invoice/store'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-invoice.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\n\r\nconst InvoiceList = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.invoice)\r\n\r\n  // ** States\r\n  const [value] = useState('')\r\n  const [rowsPerPage] = useState(6)\r\n  const [currentPage] = useState(1)\r\n  const [statusValue] = useState('')\r\n  const [sort, setSort] = useState('desc')\r\n  const [sortColumn, setSortColumn] = useState('id')\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        q: value,\r\n        sortColumn,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        status: statusValue\r\n      })\r\n    )\r\n  }, [dispatch, store.data.length])\r\n\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      status: statusValue,\r\n      q: value\r\n    }\r\n\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n\r\n    if (store.data.length > 0) {\r\n      return store.data.slice(0, rowsPerPage)\r\n    } else if (store.data.length === 0 && isFiltered) {\r\n      return []\r\n    } else {\r\n      return store.allData.slice(0, rowsPerPage)\r\n    }\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSort(sortDirection)\r\n    setSortColumn(column.sortField)\r\n    dispatch(\r\n      getData({\r\n        q: value,\r\n        page: currentPage,\r\n        sort: sortDirection,\r\n        status: statusValue,\r\n        perPage: rowsPerPage,\r\n        sortColumn: column.sortField\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className='invoice-list-wrapper'>\r\n      <Card>\r\n        <CardHeader className='py-1'>\r\n          <CardTitle tag='h4'>Invoices</CardTitle>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='secondary' outline caret>\r\n              <ExternalLink className='font-small-4 me-50' />\r\n              <span>Export</span>\r\n            </DropdownToggle>\r\n            <DropdownMenu end>\r\n              <DropdownItem className='w-100'>\r\n                <Printer className='font-small-4 me-50' />\r\n                <span>Print</span>\r\n              </DropdownItem>\r\n              <DropdownItem className='w-100'>\r\n                <FileText className='font-small-4 me-50' />\r\n                <span>CSV</span>\r\n              </DropdownItem>\r\n              <DropdownItem className='w-100'>\r\n                <File className='font-small-4 me-50' />\r\n                <span>Excel</span>\r\n              </DropdownItem>\r\n              <DropdownItem className='w-100'>\r\n                <Clipboard className='font-small-4 me-50' />\r\n                <span>PDF</span>\r\n              </DropdownItem>\r\n              <DropdownItem className='w-100'>\r\n                <Copy className='font-small-4 me-50' />\r\n                <span>Copy</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </CardHeader>\r\n        <div className='invoice-list-dataTable react-dataTable'>\r\n          <DataTable\r\n            noHeader\r\n            sortServer\r\n            columns={columns}\r\n            responsive={true}\r\n            onSort={handleSort}\r\n            data={dataToRender()}\r\n            sortIcon={<ChevronDown />}\r\n            className='react-dataTable'\r\n            defaultSortField='invoiceId'\r\n          />\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InvoiceList\r\n","D:\\Utecho\\Scaff-cert\\src\\@core\\components\\extensions-header\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\roles-permissions\\roles\\columns.js",["3698","3699"],"// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Store & Actions\r\nimport { store } from '@store/store'\r\nimport { getUser } from '@src/views/apps/user/store'\r\n\r\n// ** Icons Imports\r\nimport { Slack, User, Settings, Database, Edit2, Eye } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\n// ** Renders Client Columns\r\nconst renderClient = row => {\r\n  const stateNum = Math.floor(Math.random() * 6),\r\n    states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\r\n    color = states[stateNum]\r\n\r\n  if (row.avatar.length) {\r\n    return <Avatar className='me-1' img={row.avatar} width='32' height='32' />\r\n  } else {\r\n    return <Avatar color={color || 'primary'} className='me-1' content={row.fullName || 'John Doe'} initials />\r\n  }\r\n}\r\n\r\n// ** Renders Role Columns\r\nconst renderRole = row => {\r\n  const roleObj = {\r\n    subscriber: {\r\n      class: 'text-primary',\r\n      icon: User\r\n    },\r\n    maintainer: {\r\n      class: 'text-success',\r\n      icon: Database\r\n    },\r\n    editor: {\r\n      class: 'text-info',\r\n      icon: Edit2\r\n    },\r\n    author: {\r\n      class: 'text-warning',\r\n      icon: Settings\r\n    },\r\n    admin: {\r\n      class: 'text-danger',\r\n      icon: Slack\r\n    }\r\n  }\r\n\r\n  const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\r\n\r\n  return (\r\n    <span className='text-truncate text-capitalize align-middle'>\r\n      <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\r\n      {row.role}\r\n    </span>\r\n  )\r\n}\r\n\r\nconst statusObj = {\r\n  pending: 'light-warning',\r\n  active: 'light-success',\r\n  inactive: 'light-secondary'\r\n}\r\n\r\nexport const columns = [\r\n  {\r\n    name: 'Name',\r\n    sortable: true,\r\n    minWidth: '297px',\r\n    sortField: 'fullName',\r\n    selector: row => row.fullName,\r\n    cell: row => (\r\n      <div className='d-flex justify-content-left align-items-center'>\r\n        {renderClient(row)}\r\n        <div className='d-flex flex-column'>\r\n          <Link\r\n            to={`/apps/user/view/${row.id}`}\r\n            className='user_name text-truncate text-body'\r\n            onClick={() => store.dispatch(getUser(row.id))}\r\n          >\r\n            <span className='fw-bold'>{row.fullName}</span>\r\n          </Link>\r\n          <small className='text-truncate text-muted mb-0'>{row.email}</small>\r\n        </div>\r\n      </div>\r\n    )\r\n  },\r\n  {\r\n    name: 'Role',\r\n    sortable: true,\r\n    minWidth: '172px',\r\n    sortField: 'role',\r\n    selector: row => row.role,\r\n    cell: row => renderRole(row)\r\n  },\r\n  {\r\n    name: 'Plan',\r\n    sortable: true,\r\n    minWidth: '138px',\r\n    sortField: 'currentPlan',\r\n    selector: row => row.currentPlan,\r\n    cell: row => <span className='text-capitalize'>{row.currentPlan}</span>\r\n  },\r\n  {\r\n    name: 'Billing',\r\n    sortable: true,\r\n    minWidth: '230px',\r\n    sortField: 'billing',\r\n    selector: row => row.billing,\r\n    sortField: 'billing',\r\n    selector: row => row.billing,\r\n    cell: row => <span className='text-capitalize'>{row.billing}</span>\r\n  },\r\n  {\r\n    name: 'Status',\r\n    sortable: true,\r\n    minWidth: '138px',\r\n    sortField: 'status',\r\n    selector: row => row.status,\r\n    cell: row => (\r\n      <Badge className='text-capitalize' color={statusObj[row.status]} pill>\r\n        {row.status}\r\n      </Badge>\r\n    )\r\n  },\r\n  {\r\n    name: 'Actions',\r\n    minWidth: '100px',\r\n    cell: row => (\r\n      <Link to={`/apps/user/view/${row.id}`}>\r\n        <Eye className='font-medium-3 text-body' />\r\n      </Link>\r\n    )\r\n  }\r\n]\r\n","D:\\Utecho\\Scaff-cert\\src\\@core\\components\\avatar\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\list\\columns.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\list\\Sidebar.js",[],"D:\\Utecho\\Scaff-cert\\src\\@core\\components\\widgets\\stats\\StatsWithAreaChart.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\view\\BillingCurrentPlan.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\view\\columns.js",[],"D:\\Utecho\\Scaff-cert\\src\\@core\\components\\repeater\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\@core\\components\\sidebar\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\view\\BillingAddress.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\user\\view\\PaymentMethods.js",[],"D:\\Utecho\\Scaff-cert\\src\\@core\\components\\avatar-group\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\analytics\\SupportTracker.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\advance\\CardAppDesign.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\analytics\\AvgSessions.js",[],"D:\\Utecho\\Scaff-cert\\src\\@core\\components\\widgets\\stats\\ChartOptions.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\analytics\\Sales.js",[],"D:\\Utecho\\Scaff-cert\\src\\@core\\components\\input-password-toggle\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\invoice\\list\\index.js",["3700"],"// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\nimport { useState, useEffect } from 'react'\r\n\r\n// ** Table Columns\r\nimport { columns } from './columns'\r\n\r\n// ** Third Party Components\r\nimport ReactPaginate from 'react-paginate'\r\nimport { ChevronDown } from 'react-feather'\r\nimport DataTable from 'react-data-table-component'\r\n\r\n// ** Reactstrap Imports\r\nimport { Button, Input, Row, Col, Card } from 'reactstrap'\r\n\r\n// ** Store & Actions\r\nimport { getData } from '../store'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-invoice.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\n\r\nconst CustomHeader = ({ handleFilter, value, handleStatusValue, statusValue, handlePerPage, rowsPerPage }) => {\r\n  return (\r\n    <div className='invoice-list-table-header w-100 py-2'>\r\n      <Row>\r\n        <Col lg='6' className='d-flex align-items-center px-0 px-lg-1'>\r\n          <div className='d-flex align-items-center me-2'>\r\n            <label htmlFor='rows-per-page'>Show</label>\r\n            <Input\r\n              type='select'\r\n              id='rows-per-page'\r\n              value={rowsPerPage}\r\n              onChange={handlePerPage}\r\n              className='form-control ms-50 pe-3'\r\n            >\r\n              <option value='10'>10</option>\r\n              <option value='25'>25</option>\r\n              <option value='50'>50</option>\r\n            </Input>\r\n          </div>\r\n          <Button tag={Link} to='/apps/invoice/add' color='primary'>\r\n            Add Record\r\n          </Button>\r\n        </Col>\r\n        <Col\r\n          lg='6'\r\n          className='actions-right d-flex align-items-center justify-content-lg-end flex-lg-nowrap flex-wrap mt-lg-0 mt-1 pe-lg-1 p-0'\r\n        >\r\n          <div className='d-flex align-items-center'>\r\n            <label htmlFor='search-invoice'>Search</label>\r\n            <Input\r\n              id='search-invoice'\r\n              className='ms-50 me-2 w-100'\r\n              type='text'\r\n              value={value}\r\n              onChange={e => handleFilter(e.target.value)}\r\n              placeholder='Search Invoice'\r\n            />\r\n          </div>\r\n          <Input className='w-auto ' type='select' value={statusValue} onChange={handleStatusValue}>\r\n            <option value=''>Select Status</option>\r\n            <option value='downloaded'>Downloaded</option>\r\n            <option value='draft'>Draft</option>\r\n            <option value='paid'>Paid</option>\r\n            <option value='partial payment'>Partial Payment</option>\r\n            <option value='past due'>Past Due</option>\r\n            <option value='sent'>Sent</option>\r\n          </Input>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst InvoiceList = () => {\r\n  // ** Store vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.invoice)\r\n\r\n  // ** States\r\n  const [value, setValue] = useState('')\r\n  const [sort, setSort] = useState('desc')\r\n  const [sortColumn, setSortColumn] = useState('id')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [statusValue, setStatusValue] = useState('')\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        q: value,\r\n        sortColumn,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        status: statusValue\r\n      })\r\n    )\r\n  }, [dispatch, store.data.length])\r\n\r\n  const handleFilter = val => {\r\n    setValue(val)\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        q: val,\r\n        sortColumn,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        status: statusValue\r\n      })\r\n    )\r\n  }\r\n\r\n  const handlePerPage = e => {\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        q: value,\r\n        sortColumn,\r\n        page: currentPage,\r\n        status: statusValue,\r\n        perPage: parseInt(e.target.value)\r\n      })\r\n    )\r\n    setRowsPerPage(parseInt(e.target.value))\r\n  }\r\n\r\n  const handleStatusValue = e => {\r\n    setStatusValue(e.target.value)\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        q: value,\r\n        sortColumn,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        status: e.target.value\r\n      })\r\n    )\r\n  }\r\n\r\n  const handlePagination = page => {\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        q: value,\r\n        sortColumn,\r\n        status: statusValue,\r\n        perPage: rowsPerPage,\r\n        page: page.selected + 1\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  const CustomPagination = () => {\r\n    const count = Number((store.total / rowsPerPage).toFixed(0))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        nextLabel=''\r\n        breakLabel='...'\r\n        previousLabel=''\r\n        pageCount={count || 1}\r\n        activeClassName='active'\r\n        breakClassName='page-item'\r\n        pageClassName={'page-item'}\r\n        breakLinkClassName='page-link'\r\n        nextLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousLinkClassName={'page-link'}\r\n        previousClassName={'page-item prev'}\r\n        onPageChange={page => handlePagination(page)}\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        containerClassName={'pagination react-paginate justify-content-end p-1'}\r\n      />\r\n    )\r\n  }\r\n\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      q: value,\r\n      status: statusValue\r\n    }\r\n\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n\r\n    if (store.data.length > 0) {\r\n      return store.data\r\n    } else if (store.data.length === 0 && isFiltered) {\r\n      return []\r\n    } else {\r\n      return store.allData.slice(0, rowsPerPage)\r\n    }\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSort(sortDirection)\r\n    setSortColumn(column.sortField)\r\n    dispatch(\r\n      getData({\r\n        q: value,\r\n        page: currentPage,\r\n        sort: sortDirection,\r\n        status: statusValue,\r\n        perPage: rowsPerPage,\r\n        sortColumn: column.sortField\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className='invoice-list-wrapper'>\r\n      <Card>\r\n        <div className='invoice-list-dataTable react-dataTable'>\r\n          <DataTable\r\n            noHeader\r\n            pagination\r\n            sortServer\r\n            paginationServer\r\n            subHeader={true}\r\n            columns={columns}\r\n            responsive={true}\r\n            onSort={handleSort}\r\n            data={dataToRender()}\r\n            sortIcon={<ChevronDown />}\r\n            className='react-dataTable'\r\n            defaultSortField='invoiceId'\r\n            paginationDefaultPage={currentPage}\r\n            paginationComponent={CustomPagination}\r\n            subHeaderComponent={\r\n              <CustomHeader\r\n                value={value}\r\n                statusValue={statusValue}\r\n                rowsPerPage={rowsPerPage}\r\n                handleFilter={handleFilter}\r\n                handlePerPage={handlePerPage}\r\n                handleStatusValue={handleStatusValue}\r\n              />\r\n            }\r\n          />\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InvoiceList\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\invoice\\list\\columns.js",[],"D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\table.js",["3701","3702","3703","3704"],"// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\nimport './table.css';\r\n\r\n// ** Third Party Components\r\nimport ReactPaginate from 'react-paginate'\r\nimport { ChevronDown } from 'react-feather'\r\nimport { useTranslation } from 'react-i18next'\r\nimport DataTable from 'react-data-table-component'\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\nimport { useHistory, useNavigation } from 'react-router-dom';\r\nimport leftArrow from \"../../Admin/assests/icons/left-arrow.png\";\r\nimport rightArrow from \"../../Admin/assests/icons/right-arrow.png\";\r\n\r\n\r\nconst ClientDataTable = ({data, columns, title}) => {\r\n    // ** State\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const [searchValue, setSearchValue] = useState('')\r\n    const [filteredData, setFilteredData] = useState([])\r\n    const history = useHistory()\r\n\r\n    // ** Hooks\r\n    const { t } = useTranslation()\r\n\r\n    // ** Function to handle pagination\r\n    const handlePagination = page => {\r\n        setCurrentPage(page.selected)\r\n    }\r\n\r\n\r\n\r\n    // ** Pagination Previous Component\r\n    const Previous = () => {\r\n        return (\r\n            <Fragment>\r\n            <span className='align-middle d-md-inline-block'>\r\n                {t('')}\r\n                <img style={{width:'20px' , height:'20px'}} src={leftArrow} alt=\"Left Arrow\" />\r\n            </span>\r\n        </Fragment>\r\n        )\r\n    }\r\n    \r\n\r\n    // ** Pagination Next Component\r\n    const Next = () => {\r\n        return (\r\n            <Fragment>\r\n            <span className='align-middle  d-md-inline-block'>\r\n                {t('')}\r\n                <img style={{width:'20px' , height:'20px'}} src={rightArrow} alt=\"right Arrow\" />\r\n            </span>\r\n        </Fragment>\r\n        )\r\n    }\r\n\r\n    // ** Custom Pagination Component\r\n    const CustomPagination = () => (\r\n        <ReactPaginate\r\n            previousLabel={<Previous size={15} />}\r\n            nextLabel={<Next size={15} />}\r\n            forcePage={currentPage}\r\n            onPageChange={page => handlePagination(page)}\r\n            pageCount={searchValue?.length ? Math.ceil(filteredData?.length / 7) : Math.ceil(data?.length / 7) || 1}\r\n            breakLabel={'...'}\r\n            pageRangeDisplayed={2}\r\n            marginPagesDisplayed={2}\r\n            activeClassName={'active rounded-circle'}\r\n            pageClassName={'page-item me-1'}\r\n            nextLinkClassName={'page-link'}\r\n            nextClassName={'page-item ms-2 next'}\r\n            previousClassName={'page-item me-2 prev'}\r\n            previousLinkClassName={'page-link '}\r\n            pageLinkClassName={'page-link rounded-circle coun_nbr'}\r\n            breakClassName='page-item rounded-circle'\r\n            breakLinkClassName='page-link rounded-circle'\r\n            containerClassName={'pagination  react-paginate pagination-sm d-flex align-items-center paginat justify-content-end  mt-1'}\r\n        />\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <div className='react-dataTable mb-2'>\r\n                <DataTable\r\n                    noHeader\r\n                    responsive\r\n                    pagination \r\n                    selectableRowsNoSelectAll\r\n                    columns={columns}\r\n                    className='react-dataTable'\r\n                    paginationPerPage={7}\r\n                    sortIcon={<ChevronDown size={10} />}\r\n                    paginationDefaultPage={currentPage + 1}\r\n                    paginationComponent={CustomPagination}\r\n                    data={searchValue?.length ? filteredData : data}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ClientDataTable\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\components\\spinners\\SpinnerGrowing.js",[],"D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\components\\navbar\\NavbarUser.js",["3705","3706","3707","3708"],"// ** Dropdowns Imports\r\nimport IntlDropdown from './IntlDropdown'\r\n// import CartDropdown from './CartDropdown'\r\nimport UserDropdown from './UserDropdown'\r\nimport NavbarSearch from './NavbarSearch'\r\n// import NotificationDropdown from './NotificationDropdown'\r\n\r\n// ** Third Party Components\r\n// import { Sun, Moon } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { NavItem, NavLink } from 'reactstrap'\r\n\r\nconst NavbarUser = (props) => {\r\n  // ** Props\r\n  // const { skin, setSkin } = props\r\n\r\n  // // ** Function to toggle Theme (Light/Dark)\r\n  // const ThemeToggler = () => {\r\n  //   if (skin === 'dark') {\r\n  //     return <Sun className='ficon' onClick={() => setSkin('light')} />\r\n  //   } else {\r\n  //     return <Moon className='ficon' onClick={() => setSkin('dark')} />\r\n  //   }\r\n  // }\r\n\r\n  const noti_style = {\r\n    background: 'red',\r\n    width: '20px',\r\n    height: '20px',\r\n    display: 'flex',\r\n    borderRadius: '50%',\r\n    alignItems: 'center',\r\n    position: 'absolute',\r\n    justifyContent: 'center',\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    right: '0',\r\n    top: '0'\r\n  };\r\n  \r\n\r\n  return (<>\r\n\r\n    <ul className='nav navbar-nav align-items-center ms-auto'>\r\n      <li>\r\n        <div className='position-relative sm_none'>\r\n          <img  style={{width:'30px' , height:'30px'}} src=\"./icons/bell.png\" alt=\"\" />\r\n          <div style={noti_style}>\r\n            <h5 style={{color:'white' , marginBottom:'0px'}}>5</h5>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </li>\r\n      {/* <IntlDropdown /> */}\r\n      {/* <NavItem className='d-none d-lg-block'>\r\n        <NavLink className='nav-link-style'>\r\n          <ThemeToggler />\r\n        </NavLink>\r\n      </NavItem> */}\r\n      {/* <NavbarSearch /> */}\r\n      {/* <CartDropdown /> */}\r\n      {/* <NotificationDropdown /> */}\r\n      <UserDropdown />\r\n    </ul></>\r\n  )\r\n}\r\nexport default NavbarUser\r\n","D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\components\\navbar\\NavbarBookmarks.js",["3709","3710","3711","3712","3713","3714","3715","3716","3717","3718","3719","3720"],"// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\nimport { Fragment, useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport * as Icon from 'react-feather'\r\nimport classnames from 'classnames'\r\n\r\n// ** Custom Component\r\nimport Autocomplete from '@components/autocomplete'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  NavItem,\r\n  NavLink,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledTooltip,\r\n  UncontrolledDropdown\r\n} from 'reactstrap'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  getBookmarks,\r\n  updateBookmarked,\r\n  handleSearchQuery\r\n} from '@store/navbar'\r\n\r\nconst NavbarBookmarks = (props) => {\r\n  // ** Props\r\n  const { setMenuVisibility } = props\r\n\r\n  // ** State\r\n  const [value, setValue] = useState('')\r\n  const [openSearch, setOpenSearch] = useState(false)\r\n\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state.navbar)\r\n\r\n  // ** ComponentDidMount\r\n  useEffect(() => {\r\n    dispatch(getBookmarks())\r\n  }, [])\r\n\r\n  // ** Loops through Bookmarks Array to return Bookmarks\r\n  const renderBookmarks = () => {\r\n    if (store.bookmarks.length) {\r\n      return store.bookmarks\r\n        .map((item) => {\r\n          const IconTag = Icon[item.icon]\r\n          return (\r\n            <NavItem key={item.target} className='d-none d-lg-block'>\r\n              <NavLink tag={Link} to={item.link} id={item.target}>\r\n                <IconTag className='ficon' />\r\n                <UncontrolledTooltip target={item.target}>\r\n                  {item.title}\r\n                </UncontrolledTooltip>\r\n              </NavLink>\r\n            </NavItem>\r\n          )\r\n        })\r\n        .slice(0, 10)\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  // ** If user has more than 10 bookmarks then add the extra Bookmarks to a dropdown\r\n  const renderExtraBookmarksDropdown = () => {\r\n    if (store.bookmarks.length && store.bookmarks.length >= 11) {\r\n      return (\r\n        <NavItem className='d-none d-lg-block'>\r\n          <NavLink tag='span'>\r\n            <UncontrolledDropdown>\r\n              <DropdownToggle tag='span'>\r\n                <Icon.ChevronDown className='ficon' />\r\n              </DropdownToggle>\r\n              <DropdownMenu end>\r\n                {store.bookmarks\r\n                  .map((item) => {\r\n                    const IconTag = Icon[item.icon]\r\n                    return (\r\n                      <DropdownItem tag={Link} to={item.link} key={item.id}>\r\n                        <IconTag className='me-50' size={14} />\r\n                        <span className='align-middle'>{item.title}</span>\r\n                      </DropdownItem>\r\n                    )\r\n                  })\r\n                  .slice(10)}\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </NavLink>\r\n        </NavItem>\r\n      )\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  // ** Removes query in store\r\n  const handleClearQueryInStore = () => dispatch(handleSearchQuery(''))\r\n\r\n  // ** Loops through Bookmarks Array to return Bookmarks\r\n  const onKeyDown = (e) => {\r\n    if (e.keyCode === 27 || e.keyCode === 13) {\r\n      setTimeout(() => {\r\n        setOpenSearch(false)\r\n        handleClearQueryInStore()\r\n      }, 1)\r\n    }\r\n  }\r\n\r\n  // ** Function to toggle Bookmarks\r\n  const handleBookmarkUpdate = (id) => dispatch(updateBookmarked(id))\r\n\r\n  // ** Function to handle Bookmarks visibility\r\n  const handleBookmarkVisibility = () => {\r\n    setOpenSearch(!openSearch)\r\n    setValue('')\r\n    handleClearQueryInStore()\r\n  }\r\n\r\n  // ** Function to handle Input change\r\n  const handleInputChange = (e) => {\r\n    setValue(e.target.value)\r\n    dispatch(handleSearchQuery(e.target.value))\r\n  }\r\n\r\n  // ** Function to handle external Input click\r\n  const handleExternalClick = () => {\r\n    if (openSearch === true) {\r\n      setOpenSearch(false)\r\n      handleClearQueryInStore()\r\n    }\r\n  }\r\n\r\n  // ** Function to clear input value\r\n  const handleClearInput = (setUserInput) => {\r\n    if (!openSearch) {\r\n      setUserInput('')\r\n      handleClearQueryInStore()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <ul className='navbar-nav d-xl-none'>\r\n        <NavItem className='mobile-menu me-auto'>\r\n          <NavLink\r\n            className='nav-menu-main menu-toggle hidden-xs is-active'\r\n            onClick={() => setMenuVisibility(true)}\r\n          >\r\n            <Icon.Menu className='ficon' />\r\n          </NavLink>\r\n        </NavItem>\r\n      </ul>\r\n      {/* <ul className='nav navbar-nav bookmark-icons'>\r\n        {renderBookmarks()}\r\n        {renderExtraBookmarksDropdown()}\r\n        <NavItem className='nav-item d-none d-lg-block'>\r\n          <NavLink className='bookmark-star' onClick={handleBookmarkVisibility}>\r\n            <Icon.Star className='ficon text-warning' />\r\n          </NavLink>\r\n          <div\r\n            className={classnames('bookmark-input search-input', {\r\n              show: openSearch\r\n            })}\r\n          >\r\n            <div className='bookmark-input-icon'>\r\n              <Icon.Search size={14} />\r\n            </div>\r\n            {openSearch && store.suggestions.length ? (\r\n              <Autocomplete\r\n                wrapperClass={classnames('search-list search-list-bookmark', {\r\n                  show: openSearch\r\n                })}\r\n                className='form-control'\r\n                suggestions={\r\n                  !value.length ? store.bookmarks : store.suggestions\r\n                }\r\n                filterKey='title'\r\n                autoFocus={true}\r\n                defaultSuggestions\r\n                suggestionLimit={!value.length ? store.bookmarks.length : 6}\r\n                placeholder='Search...'\r\n                externalClick={handleExternalClick}\r\n                clearInput={(userInput, setUserInput) =>\r\n                  handleClearInput(setUserInput)\r\n                }\r\n                onKeyDown={onKeyDown}\r\n                value={value}\r\n                onChange={handleInputChange}\r\n                customRender={(\r\n                  item,\r\n                  i,\r\n                  filteredData,\r\n                  activeSuggestion,\r\n                  onSuggestionItemClick,\r\n                  onSuggestionItemHover\r\n                ) => {\r\n                  const IconTag = Icon[item.icon ? item.icon : 'X']\r\n                  return (\r\n                    <li\r\n                      key={i}\r\n                      onMouseEnter={() =>\r\n                        onSuggestionItemHover(filteredData.indexOf(item))\r\n                      }\r\n                      className={classnames(\r\n                        'suggestion-item d-flex align-items-center justify-content-between',\r\n                        {\r\n                          active:\r\n                            filteredData.indexOf(item) === activeSuggestion\r\n                        }\r\n                      )}\r\n                    >\r\n                      <Link\r\n                        to={item.link}\r\n                        className='d-flex align-items-center justify-content-between p-0'\r\n                        onClick={() => {\r\n                          setOpenSearch(false)\r\n                          handleClearQueryInStore()\r\n                        }}\r\n                        style={{\r\n                          width: 'calc(90%)'\r\n                        }}\r\n                      >\r\n                        <div className='d-flex justify-content-start align-items-center overflow-hidden'>\r\n                          <IconTag size={17.5} className='me-75' />\r\n                          <span className='text-truncate'>{item.title}</span>\r\n                        </div>\r\n                      </Link>\r\n                      <Icon.Star\r\n                        size={17.5}\r\n                        className={classnames('bookmark-icon float-end', {\r\n                          'text-warning': item.isBookmarked\r\n                        })}\r\n                        onClick={() => handleBookmarkUpdate(item.id)}\r\n                      />\r\n                    </li>\r\n                  )\r\n                }}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </NavItem>\r\n      </ul> */}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default NavbarBookmarks\r\n","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Tutorials.js",["3721","3722","3723","3724","3725","3726","3727","3728","3729","3730","3731","3732","3733","3734","3735","3736"],"import { React, useState, useEffect , useRef} from \"react\";\r\nimport \"@styles/react/apps/app-users.scss\";\r\nimport './table.css';\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\";\r\nimport ReactPlayer from 'react-player'\r\n\r\nimport { MoreHorizontal } from \"react-feather\";\r\nimport {\r\n  UncontrolledButtonDropdown,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Form,\r\n  Input,\r\n  Label,\r\n  CardBody,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\n\r\nimport { Card, Col, Row } from \"react-bootstrap\";\r\n\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n// for spinner\r\nimport Spinerr from \"../../views/components/spinners/SpinnerGrowing\";\r\n\r\nconst Tutorials = () => {\r\n\r\n\r\n  // get data\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // show data start code\r\n  const [data, setData] = useState([]);\r\n\r\n  function getData() {\r\n    setIsLoading(true);\r\n    axios\r\n      .post(`${global.BASEURL}getRecords/tutorials`)\r\n      .then((res) => {\r\n        setData(res.data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data: \", error);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false); // Hide spinner after data is fetched\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n \r\n\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n\r\n      <div className=\"d-flex align-align-items-center justify-content-between mt-3 mb-3\">\r\n        <h5 className=\"head_title\"> Tutorials</h5>      \r\n      </div>\r\n      {isLoading ? (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          <Spinerr />\r\n        </div>\r\n      ) : data.length === 0 ? (\r\n        <p>There is no data to show.</p>\r\n      ) : (\r\n        <Row className=\"gx-5\">\r\n          {data.map((item, index) => {\r\n            return (\r\n              <Col lg=\"4\" md=\"6\" sm=\"6\" xs=\"12\" key={index} className=\"mb-2\">\r\n                <Card key={index} style={{height:\"94%\"}}>\r\n                  <div className=\"video_div\">\r\n                    <ReactPlayer  url={item.url} controls={true} />\r\n                  </div>\r\n                  <CardBody>\r\n                    <div className=\"d-flex align-items-center justify-content-between\">\r\n                      <h5 className=\"head_title truncate-paragraph_head\">{item.title}</h5>\r\n                    </div>\r\n                    <div className=\"truncate-paragraph\">\r\n                      <p className=\"modal_subtitle\">{item.description}</p>\r\n                    </div>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tutorials;\r\n","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Return_form.js",["3737","3738","3739","3740","3741","3742","3743","3744","3745","3746","3747","3748","3749","3750","3751","3752","3753","3754"],"import \"@styles/react/apps/app-users.scss\";\r\nimport ClientDataTable from \"./table\";\r\n// import './client.css';\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./table.css\";\r\nimport Select from \"react-select\";\r\nimport { Breadcrumb, Card, Col, Row, Spinner } from \"react-bootstrap\";\r\nimport active from \"../../Admin/assests/icons/active.png\";\r\nimport block from \"../../Admin/assests/icons/block.png\";\r\nimport userIcon from \"../../Admin/assests/client_icon_modal.png\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  UncontrolledButtonDropdown,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Form,\r\n  Input,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport { MoreHorizontal, Trash, Edit2 } from \"react-feather\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Alert,\r\n} from \"reactstrap\";\r\n\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n// for spinner\r\nimport Spinerr from \"../../views/components/spinners/SpinnerGrowing\";\r\n\r\nconst ReturnFrom = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // show data start code\r\n  const [data, setData] = useState([]);\r\n\r\n  function getData() {\r\n    setIsLoading(true);\r\n    axios\r\n      .post(`${global.BASEURL}getRecords/jobs`)\r\n      .then((res) => {\r\n        const resp = res.data.data;\r\n        const respDate = resp.filter(\r\n          (item) => item.status === \"Item(s) successfully Returned\"\r\n        );\r\n\r\n        setData(respDate);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data: \", error);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false); // Hide spinner after data is fetched\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  // delet api\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [deleteItemId, setDeleteItemId] = useState(null);\r\n\r\n  function handleDelete(id) {\r\n    setDeleteItemId(id);\r\n    setIsDeleteModalOpen(true);\r\n  }\r\n\r\n  const handleDeleteConfirm = () => {\r\n    // Close the delete confirmation modal\r\n    setIsDeleteModalOpen(false);\r\n\r\n    // Delete the item\r\n    if (deleteItemId) {\r\n      axios\r\n        .post(`${global.BASEURL}deleteRecord/jobs`, {\r\n          id: deleteItemId,\r\n        })\r\n        .then(() => {\r\n          getData();\r\n          toast.success(\"Data deleted successfully.\"); // Show success toast\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error deleting data:\", error);\r\n          toast.error(\"Failed to delete data.\"); // Show error toast\r\n        });\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Sr.no\",\r\n      selector: (row, index) => index + 1,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Form ID\",\r\n      selector: (row) => row.fomr_id,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Job Number\",\r\n      selector: (row) => row.job_no,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n\r\n    {\r\n      name: \"Job Name\",\r\n      selector: (row) => row.job_name,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n\r\n    {\r\n      name: \"Date\",\r\n      selector: (row) => \"19/2/2022\",\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Delivered By\",\r\n      selector: (row) => row.client,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      allowOverflow: true,\r\n      maxWidth: \"7rem\",\r\n      minWidth: \"2rem\",\r\n      cell: (row) => {\r\n        // modal edit\r\n\r\n        return (\r\n          <div className=\"d-flex justify-content-end w-100\">\r\n            <UncontrolledDropdown className=\"\">\r\n              <DropdownToggle className=\"pe-1 \" tag=\"span\">\r\n                <MoreHorizontal size={15} />\r\n              </DropdownToggle>\r\n              <DropdownMenu end>\r\n                <DropdownItem>\r\n                  <div\r\n                    onClick={() => handleDelete(row._id)}\r\n                    className=\"btn btn-white w-100 p-0 m-0\"\r\n                  >\r\n                    <span className=\"align-middle ms-50\">Delete</span>\r\n                  </div>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex align-align-items-center justify-content-between mt-3 mb-3\">\r\n        <h5 className=\"head_title\">\r\n          Forms / <span style={{ fontSize: \"20px\" }}> Return Report</span>\r\n        </h5>\r\n      </div>\r\n      {/* delet modal */}\r\n      <Modal isOpen={isDeleteModalOpen}>\r\n        <ModalHeader>Delete Confirmation</ModalHeader>\r\n        <ModalBody>Are you sure you want to delete this item?</ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"danger\"\r\n            onClick={() => handleDeleteConfirm(deleteItemId)}\r\n          >\r\n            Yes\r\n          </Button>\r\n          <Button color=\"secondary\" onClick={() => setIsDeleteModalOpen(false)}>\r\n            No\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n      {/* ,odal end */}\r\n      <div>\r\n        {isLoading ? (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: \"100%\",\r\n            }}\r\n          >\r\n            <Spinerr />\r\n          </div>\r\n        ) : data.length === 0 ? (\r\n          <p>There is no data to show.</p>\r\n        ) : (\r\n          <ClientDataTable columns={columns} data={data} />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReturnFrom;\r\n","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Jsa_risk.js",["3755","3756","3757","3758","3759","3760","3761","3762","3763","3764"],"import \"@styles/react/apps/app-users.scss\";\r\nimport ClientDataTable from \"./table\";\r\n// import './client.css';\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./table.css\";\r\nimport Select from \"react-select\";\r\nimport { Breadcrumb, Card, Col, Row, Spinner } from \"react-bootstrap\";\r\nimport active from \"../../Admin/assests/icons/active.png\";\r\nimport block from \"../../Admin/assests/icons/block.png\";\r\nimport jsaRisk from \"../../Admin/assests/risk_control.svg\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  UncontrolledButtonDropdown,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Form,\r\n  Input,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport { MoreHorizontal, Trash, Edit2 } from \"react-feather\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Alert,\r\n} from \"reactstrap\";\r\n\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n// for spinner\r\nimport Spinerr from \"../../views/components/spinners/SpinnerGrowing\";\r\n\r\nconst JsaRisk = () => {\r\n  const [defaultData_, setDefaultData_] = useState(\"\");\r\n\r\n  // states for update and insert data\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [risk_control, setRisk_control] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (defaultData_) {\r\n      setName(defaultData_.name);\r\n      setRisk_control(defaultData_.risk_control);\r\n    }\r\n  }, [defaultData_]);\r\n\r\n  // post data\r\n\r\n  const postData = (e) => {\r\n    e.preventDefault();\r\n    if (!name || !risk_control) {\r\n      toast.error(\"Please fill out all required fields.\");\r\n      return;\r\n    }\r\n    setName(\"\");\r\n\r\n    axios\r\n      .post(`${global.BASEURL}createRecord/jsariskcontrol`, {\r\n        name,\r\n        risk_control,\r\n      })\r\n      .then(() => {\r\n        toggleLargeModal();\r\n        getData();\r\n        toast.success(\"Data added successfully.\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error adding data: \", error);\r\n        toast.error(\"Failed to add data.\"); // Show error toast\r\n      });\r\n  };\r\n\r\n  // get data\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // show data start code\r\n  const [data, setData] = useState([]);\r\n\r\n  function getData() {\r\n    setIsLoading(true);\r\n    axios\r\n      .post(`${global.BASEURL}getRecords/jsariskcontrol`)\r\n      .then((res) => {\r\n        setData(res.data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data: \", error);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false); // Hide spinner after data is fetched\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  // update data\r\n\r\n  const updateData = (e) => {\r\n    e.preventDefault();\r\n    const itemId = defaultData_?._id;\r\n    axios\r\n      .post(`${global.BASEURL}updateRecord/jsariskcontrol`, {\r\n        id: itemId,\r\n        name,\r\n        risk_control,\r\n      })\r\n      .then(() => {\r\n        editRisk();\r\n        getData();\r\n        toast.success(\"Data updated successfully.\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error updating client:\", error);\r\n      });\r\n  };\r\n\r\n  // delet data\r\n\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [deleteItemId, setDeleteItemId] = useState(null);\r\n\r\n  const handleDelete = (id) => {\r\n    setDeleteItemId(id);\r\n    setIsDeleteModalOpen(true);\r\n  };\r\n\r\n  const handleDeleteConfirm = () => {\r\n    // Close the delete confirmation modal\r\n    setIsDeleteModalOpen(false);\r\n\r\n    // Delete the item\r\n    if (deleteItemId) {\r\n      axios\r\n        .post(`${global.BASEURL}deleteRecord/jsariskcontrol`, {\r\n          id: deleteItemId,\r\n        })\r\n        .then(() => {\r\n          getData();\r\n          toast.success(\"Data deleted successfully.\"); // Show success toast\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error deleting data:\", error);\r\n          toast.error(\"Failed to delete data.\"); // Show error toast\r\n        });\r\n    }\r\n  };\r\n\r\n  // get data of hazard with api\r\n\r\n  const [hazaradsData, setHazaradsData] = useState([]);\r\n\r\n  function hazaradsDataGet() {\r\n    axios\r\n      .post(`${global.BASEURL}getRecords/jsahazards`)\r\n      .then((res) => {\r\n        const data = res.data.data;\r\n        const arr = [];\r\n        for (let index = 0; index < data.length; index++) {\r\n          const element = data[index];\r\n          const obj = { value: element.name, label: element.name };\r\n          arr.push(obj);\r\n        }\r\n        setHazaradsData(arr);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data: \", error);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    hazaradsDataGet();\r\n  }, []);\r\n\r\n  let counter = 0;\r\n  const columns = [\r\n    {\r\n      name: \"Sr.no\",\r\n      selector: (row) => ++counter,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Hazards Name\",\r\n      selector: (row) => row.name,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Risk Control\",\r\n      selector: (row) => row.risk_control,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n\r\n    {\r\n      name: \"Action\",\r\n      allowOverflow: true,\r\n      maxWidth: \"7rem\",\r\n      minWidth: \"2rem\",\r\n      cell: (row) => {\r\n        // modal edit\r\n\r\n        return (\r\n          <div className=\"d-flex justify-content-end w-100\">\r\n            <UncontrolledDropdown className=\"\">\r\n              <DropdownToggle className=\"pe-1 \" tag=\"span\">\r\n                <MoreHorizontal size={15} />\r\n              </DropdownToggle>\r\n              <DropdownMenu end>\r\n                <DropdownItem>\r\n                  <div\r\n                    onClick={() => editRisk(row)}\r\n                    className=\"btn w-100 btn-white p-0 m-0\"\r\n                  >\r\n                    <span className=\"align-middle ms-50\">Edit</span>\r\n                  </div>\r\n                </DropdownItem>\r\n\r\n                <DropdownItem>\r\n                  <div\r\n                    onClick={() => handleDelete(row._id)}\r\n                    className=\"btn w-100 btn-white p-0 m-0\"\r\n                  >\r\n                    <span className=\"align-middle ms-50\">Delete</span>\r\n                  </div>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  // edit client modal start\r\n\r\n  // Step 2: Add state for managing modal visibility\r\n  const [riskModal, setriskModal] = useState(false);\r\n\r\n  const editRisk = (result) => {\r\n    setDefaultData_(result);\r\n    setriskModal(!riskModal);\r\n  };\r\n\r\n  const [isLargeModalOpen, setIsLargeModalOpen] = useState(false);\r\n\r\n  const toggleLargeModal = () => {\r\n    setIsLargeModalOpen(!isLargeModalOpen);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n\r\n      <div className=\"d-flex align-align-items-center justify-content-between mt-3 mb-3\">\r\n        <h5 className=\"head_title\">\r\n          {\" \"}\r\n          Forms / <span style={{ fontSize: \"20px\" }}>JSA Risk Control</span>\r\n        </h5>\r\n        <div className=\"d-flex align-items-center\">\r\n          <div>\r\n            <Button className=\"default_btn\" outline onClick={toggleLargeModal}>\r\n              Add JSA Risk Control\r\n            </Button>\r\n\r\n            {/* add client modal */}\r\n            <Modal\r\n              isOpen={isLargeModalOpen}\r\n              toggle={toggleLargeModal} // Use the correct toggle function for the large modal\r\n              size=\"lg\"\r\n            >\r\n              <ModalHeader\r\n                toggle={toggleLargeModal} // Use the correct toggle function for the large modal\r\n              ></ModalHeader>\r\n              <ModalBody>\r\n                <div className=\"icon_div_main mb-2\">\r\n                  <img\r\n                    style={{ width: \"35px\", height: \"35px\" }}\r\n                    src={jsaRisk}\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <h5 className=\"modal_title\">Add New Risk Control</h5>\r\n                <span className=\"modal_subtitle\">\r\n                  Enter the correct details of the form which you want to add.\r\n                </span>\r\n\r\n                <Form className=\"d-flex flex-column p-1\">\r\n                  <Row>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Hazards Name\r\n                      </Label>\r\n                      <Select\r\n                        onChange={(selectedOption) => {\r\n                          setName(selectedOption.value);\r\n                        }}\r\n                        isClearable={false}\r\n                        classNamePrefix=\"select\"\r\n                        options={hazaradsData}\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Risk Control\r\n                      </Label>\r\n                      <Input\r\n                        onChange={(e) => setRisk_control(e.target.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"Risk Control\"\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <div className=\"mx-auto\">\r\n                    <Button\r\n                      onClick={postData}\r\n                      type=\"submit\"\r\n                      className=\"mt-2 default_btn\"\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              </ModalBody>\r\n            </Modal>\r\n\r\n            {/* edit modal */}\r\n\r\n            <Modal\r\n              isOpen={riskModal}\r\n              toggle={editRisk} // Use the correct toggle function for the large modal\r\n              size=\"lg\"\r\n            >\r\n              <ModalHeader\r\n                toggle={editRisk} // Use the correct toggle function for the large modal\r\n              ></ModalHeader>\r\n              <ModalBody>\r\n                <div className=\"icon_div_main mb-2\">\r\n                  <img\r\n                    style={{ width: \"35px\", height: \"35px\" }}\r\n                    src={jsaRisk}\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <h5 className=\"modal_title\">Edit New Risk Control</h5>\r\n                <span className=\"modal_subtitle\">\r\n                  Enter the correct details of the form which you want to edit.\r\n                </span>\r\n\r\n                <Form className=\"d-flex flex-column p-1\">\r\n                  <Row>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Hazards Name\r\n                      </Label>\r\n                      <Select\r\n                        onChange={(selectedOption) =>\r\n                          setName(selectedOption.value)\r\n                        }\r\n                        value={hazaradsData.find(\r\n                          (option) => option.label === name\r\n                        )}\r\n                        isClearable={false}\r\n                        classNamePrefix=\"select\"\r\n                        options={hazaradsData}\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Risk Control\r\n                      </Label>\r\n                      <Input\r\n                        onChange={(e) => setRisk_control(e.target.value)}\r\n                        defaultValue={defaultData_?.risk_control}\r\n                        type=\"text\"\r\n                        placeholder=\"Risk Control\"\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <div className=\"mx-auto\">\r\n                    <Button\r\n                      onClick={updateData}\r\n                      type=\"submit\"\r\n                      className=\"mt-2 default_btn\"\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              </ModalBody>\r\n            </Modal>\r\n\r\n            {/* delete modal */}\r\n\r\n            <Modal isOpen={isDeleteModalOpen}>\r\n              <ModalHeader>Delete Confirmation</ModalHeader>\r\n              <ModalBody>Are you sure you want to delete this item?</ModalBody>\r\n              <ModalFooter>\r\n                <Button\r\n                  color=\"danger\"\r\n                  onClick={() => handleDeleteConfirm(deleteItemId)}\r\n                >\r\n                  Yes\r\n                </Button>\r\n                <Button\r\n                  color=\"secondary\"\r\n                  onClick={() => setIsDeleteModalOpen(false)}\r\n                >\r\n                  No\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          </div>\r\n          <div className=\"ms-2\">\r\n            <UncontrolledButtonDropdown>\r\n              <DropdownToggle className=\"filter_btn\">\r\n                <img className=\"filter_img\" src=\"./icons/filter_icon.png\" />\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem\r\n                  href=\"/\"\r\n                  tag=\"a\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  All\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  href=\"/\"\r\n                  tag=\"a\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  New User\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  href=\"/\"\r\n                  tag=\"a\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  Active User\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  href=\"/\"\r\n                  tag=\"a\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  Blocked User\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledButtonDropdown>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* table  */}\r\n      <div>\r\n        {isLoading ? (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: \"100%\",\r\n            }}\r\n          >\r\n            <Spinerr />\r\n          </div>\r\n        ) : data.length === 0 ? (\r\n          <p>There is no data to show.</p>\r\n        ) : (\r\n          <ClientDataTable columns={columns} data={data} />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JsaRisk;\r\n","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\InspectionForm.js",["3765","3766","3767","3768","3769"],"import \"@styles/react/apps/app-users.scss\";\r\nimport ClientDataTable from \"./table\";\r\n\r\n// import './client.css';\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\";\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport \"./table.css\";\r\nimport Select from \"react-select\";\r\nimport { Breadcrumb, Card, Col, Row, Spinner } from \"react-bootstrap\";\r\nimport active from \"../../Admin/assests/icons/active.png\";\r\nimport block from \"../../Admin/assests/icons/block.png\";\r\nimport modalIcon from \"../../Admin/assests/side_icon/inspection_forms - modal.svg\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  UncontrolledButtonDropdown,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Button,\r\n  Label,\r\n  Input,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n} from \"reactstrap\";\r\n\r\nimport { MoreHorizontal } from \"react-feather\";\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport axios from \"axios\";\r\n// for spinner\r\nimport Spinerr from \"../../views/components/spinners/SpinnerGrowing\";\r\n\r\nconst SafetyEquipments = () => {\r\n  ///////////// first tab api integrat //////////////////////\r\n  const [defaultData_, setDefaultData_] = useState(\"\");\r\n  const [item_type, setItem_type] = useState(\"\");\r\n  const [item_number, setItem_number] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [status, setStatus] = useState(\"Block\");\r\n\r\n  useEffect(() => {\r\n    if (defaultData_) {\r\n      setItem_type(defaultData_.item_type);\r\n      setItem_number(defaultData_.item_number);\r\n      setDescription(defaultData_.description);\r\n      setStatus(defaultData_.status);\r\n    }\r\n  }, [defaultData_]);\r\n\r\n  // post data\r\n\r\n  const postData = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!item_type || !item_number || !description) {\r\n      toast.error(\"Please fill out all required fields.\");\r\n      return;\r\n    }\r\n\r\n    setItem_number(\"\");\r\n    setItem_type(\"\");\r\n    setDescription(\"\");\r\n    // setStatus(\"\");\r\n\r\n    axios\r\n      .post(`${global.BASEURL}createRecord/inspection`, {\r\n        item_type,\r\n        item_number,\r\n        description,\r\n        status,\r\n      })\r\n      .then(() => {\r\n        toggleFirstTab();\r\n        getData();\r\n        toast.success(\"Data added successfully.\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error adding data: \", error);\r\n        toast.error(\"Failed to add data.\");\r\n      });\r\n  };\r\n\r\n  // get data with api\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const [data, setData] = useState([]);\r\n  const [dataA, setDataA] = useState([]);\r\n  const [dataB, setDataB] = useState([]);\r\n\r\n  function getData() {\r\n    setIsLoading(true);\r\n    axios\r\n      .post(`${global.BASEURL}getRecords/inspection`)\r\n      .then((res) => {\r\n        const responseData = res.data.data;\r\n        const scaffoldLocationListData = responseData.filter(\r\n          (item) => item.item_type === \"Scaffold Location List\"\r\n        );\r\n        const supportingStructureData = responseData.filter(\r\n          (item) => item.item_type === \"Supporting Structure\"\r\n        );\r\n        const scaffoldStructureData = responseData.filter(\r\n          (item) => item.item_type === \"Scaffold Structure\"\r\n        );\r\n        setData(scaffoldLocationListData);\r\n        setDataA(supportingStructureData);\r\n        setDataB(scaffoldStructureData);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data: \", error);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false); // Hide spinner after data is fetched\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData(\"Scaffold Location List\");\r\n    getData(\"Supporting Structure\");\r\n    getData(\"Scaffold Structure\");\r\n  }, []);\r\n\r\n  // update data with api\r\n  const updateData = (e) => {\r\n    e.preventDefault();\r\n    const itemId = defaultData_?._id;\r\n\r\n    axios\r\n      .post(`${global.BASEURL}updateRecord/inspection`, {\r\n        id: itemId,\r\n        item_number,\r\n        description,\r\n      })\r\n      .then(() => {\r\n        toggleEditFirstTab();\r\n        getData();\r\n        toast.success(\"Data updated successfully.\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error updating client:\", error);\r\n      });\r\n  };\r\n  // delet data with api\r\n\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [deleteItemId, setDeleteItemId] = useState(null);\r\n\r\n  function handleDelete(id) {\r\n    setDeleteItemId(id);\r\n    setIsDeleteModalOpen(true);\r\n  }\r\n  const handleDeleteConfirm = () => {\r\n    // Close the delete confirmation modal\r\n    setIsDeleteModalOpen(false);\r\n\r\n    // Delete the item\r\n    if (deleteItemId) {\r\n      axios\r\n        .post(`${global.BASEURL}deleteRecord/inspection`, {\r\n          id: deleteItemId,\r\n        })\r\n        .then(() => {\r\n          getData();\r\n          toast.success(\"Data deleted successfully.\"); // Show success toast\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error deleting data:\", error);\r\n          toast.error(\"Failed to delete data.\"); // Show error toast\r\n        });\r\n    }\r\n  };\r\n\r\n  //////////////// first tab end api integrat  /////////////////////////////////////\r\n\r\n  // other data\r\n\r\n  const [activeTabSection1, setActiveTabSection1] = useState(\"1\");\r\n  const toggleTabSection1 = (tab) => {\r\n    if (activeTabSection1 !== tab) {\r\n      setActiveTabSection1(tab);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Sr.no\",\r\n      selector: (row, index) => index + 1,\r\n      sortable: \"true\",\r\n      // maxWidth: \"2rem\",\r\n    },\r\n    {\r\n      name: \"Item Number\",\r\n      selector: (row) => row.item_number,\r\n      sortable: \"true\",\r\n      // maxWidth: \"2rem\",\r\n    },\r\n    {\r\n      name: \"Description\",\r\n      selector: (row) => row.description,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      cell: (row) => (\r\n        <div className=\"d-flex align-items-center\">\r\n          {row.status === \"Active\" ? (\r\n            <>\r\n              <img\r\n                src={active}\r\n                alt=\"active\"\r\n                width=\"11\"\r\n                height=\"11\"\r\n                className=\"me-1\"\r\n              />\r\n              <span>{row.status}</span>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <img\r\n                src={block}\r\n                alt=\"block\"\r\n                width=\"11\"\r\n                height=\"11\"\r\n                className=\"me-1\"\r\n              />\r\n              <span>Block</span>\r\n            </>\r\n          )}\r\n        </div>\r\n      ),\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      allowOverflow: true,\r\n      maxWidth: \"7rem\",\r\n      minWidth: \"2rem\",\r\n      cell: (row) => {\r\n        return (\r\n          <div className=\"d-flex justify-content-end w-100\">\r\n            <UncontrolledDropdown>\r\n              <DropdownToggle className=\"pe-1\" tag=\"span\">\r\n                <MoreHorizontal size={15} />\r\n              </DropdownToggle>\r\n              <DropdownMenu className=\"scrolDrop\" end>\r\n                <DropdownItem>\r\n                  <div\r\n                    onClick={() => toggleEditFirstTab(row)}\r\n                    className=\"btn btn-white w-100 p-0 m-0\"\r\n                  >\r\n                    <span className=\"align-middle ms-50\">Edit</span>\r\n                  </div>\r\n                </DropdownItem>\r\n\r\n                <DropdownItem>\r\n                  <div\r\n                    className=\"btn btn-white w-100 p-0 m-0\"\r\n                    onClick={() => handleDelete(row._id)}\r\n                  >\r\n                    <span className=\"align-middle ms-50\">Delete</span>\r\n                  </div>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const [isFirstTab, setIsFirstTab] = useState(false);\r\n  const toggleFirstTab = () => {\r\n    setIsFirstTab(!isFirstTab);\r\n  };\r\n\r\n  const [editFirstTab, setEditFirstTab] = useState(false);\r\n  const toggleEditFirstTab = (result) => {\r\n    setDefaultData_(result);\r\n    setEditFirstTab(!editFirstTab);\r\n  };\r\n\r\n  const selectType = [\r\n    { label: \"Scaffold Location List\", value: \"Scaffold Location List\" },\r\n    { label: \"Supporting Structure\", value: \"Supporting Structure\" },\r\n    { label: \"Scaffold Structure\", value: \"Scaffold Structure\" },\r\n  ];\r\n  return (\r\n    <>\r\n      <div className=\"d-flex align-align-items-center justify-content-between mt-3 mb-3\">\r\n        <h5 className=\"head_title\">Forms / Forms / Inspection Forms</h5>\r\n        <Button onClick={toggleFirstTab} className=\"default_btn me-2\">\r\n          Add New\r\n        </Button>\r\n\r\n        {/* modal first tab */}\r\n        <Modal isOpen={isFirstTab} toggle={toggleFirstTab} size=\"lg\">\r\n          <ModalHeader toggle={toggleFirstTab}></ModalHeader>\r\n          <ModalBody>\r\n            <div className=\"icon_div_main mb-2\">\r\n              <img className=\"icon_sizee\" src={modalIcon} alt=\"\" />\r\n            </div>\r\n            <h5 className=\"modal_title\">Add New Locatioon</h5>\r\n            <span className=\"modal_subtitle\">\r\n              Enter the correct details of the branch which you want to add.\r\n            </span>\r\n\r\n            <Form className=\"d-flex flex-column p-1\">\r\n              <Row>\r\n                <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                  <Label className=\"value_font input_label\">Select Type</Label>\r\n                  <Select\r\n                    onChange={(selectedOption) =>\r\n                      setItem_type(selectedOption.value)\r\n                    }\r\n                    isClearable={false}\r\n                    classNamePrefix=\"select\"\r\n                    options={selectType}\r\n                  />\r\n                </Col>\r\n                <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                  <Label className=\"value_font input_label\">Item Name</Label>\r\n                  <Input\r\n                    onChange={(e) => setItem_number(e.target.value)}\r\n                    type=\"number\"\r\n                    placeholder=\"Item Number\"\r\n                  />\r\n                </Col>\r\n                <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                  <Label className=\"value_font input_label\">Description</Label>\r\n                  <Input\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                    type=\"text\"\r\n                    placeholder=\"Description\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <div className=\"mx-auto\">\r\n                <Button\r\n                  onClick={postData}\r\n                  type=\"submit\"\r\n                  className=\"mt-2 default_btn\"\r\n                >\r\n                  Add List\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n        {/* modal first tab edit modal*/}\r\n        <Modal isOpen={editFirstTab} toggle={toggleEditFirstTab} size=\"lg\">\r\n          <ModalHeader toggle={toggleEditFirstTab}></ModalHeader>\r\n          <ModalBody>\r\n            <div className=\"icon_div_main mb-2\">\r\n              <img className=\"icon_sizee\" src={modalIcon} alt=\"\" />\r\n            </div>\r\n            <h5 className=\"modal_title\">Add New Locatioon</h5>\r\n            <span className=\"modal_subtitle\">\r\n              Enter the correct details of the branch which you want to add.\r\n            </span>\r\n            <Form className=\"d-flex flex-column p-1\">\r\n              <Row>\r\n                <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                  <Label className=\"value_font input_label\">Item Name</Label>\r\n                  <Input\r\n                    onChange={(e) => setItem_number(e.target.value)}\r\n                    defaultValue={defaultData_?.item_number}\r\n                    type=\"number\"\r\n                    placeholder=\"Item Number\"\r\n                  />\r\n                </Col>\r\n                <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                  <Label className=\"value_font input_label\">Description</Label>\r\n                  <Input\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                    defaultValue={defaultData_?.description}\r\n                    type=\"text\"\r\n                    placeholder=\"Description\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <div className=\"mx-auto\">\r\n                <Button\r\n                  onClick={updateData}\r\n                  type=\"submit\"\r\n                  className=\"mt-2 default_btn\"\r\n                >\r\n                  Update Data\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n        {/* delet modal  */}\r\n        <Modal isOpen={isDeleteModalOpen}>\r\n          <ModalHeader>Delete Confirmation</ModalHeader>\r\n          <ModalBody>Are you sure you want to delete this item?</ModalBody>\r\n          <ModalFooter>\r\n            <Button\r\n              color=\"danger\"\r\n              onClick={() => handleDeleteConfirm(deleteItemId)}\r\n            >\r\n              Yes\r\n            </Button>\r\n            <Button\r\n              color=\"secondary\"\r\n              onClick={() => setIsDeleteModalOpen(false)}\r\n            >\r\n              No\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n      <Fragment>\r\n        <ToastContainer />\r\n        <Nav tabs>\r\n          <NavItem className=\"me-2\">\r\n            <NavLink\r\n              className={activeTabSection1 === \"1\" ? \"active\" : \"\"}\r\n              onClick={() => {\r\n                toggleTabSection1(\"1\");\r\n              }}\r\n            >\r\n              Scaffold Location\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem className=\"me-2\">\r\n            <NavLink\r\n              className={activeTabSection1 === \"2\" ? \"active\" : \"\"}\r\n              onClick={() => {\r\n                toggleTabSection1(\"2\");\r\n              }}\r\n            >\r\n              Foundations / Supporting Structure\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink\r\n              className={activeTabSection1 === \"3\" ? \"active\" : \"\"}\r\n              onClick={() => {\r\n                toggleTabSection1(\"3\");\r\n              }}\r\n            >\r\n              Scaffold Structure\r\n            </NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n        <TabContent className=\"py-50\" activeTab={activeTabSection1}>\r\n          <TabPane tabId=\"1\">\r\n            <div className=\"d-flex align-align-items-center justify-content-between sm_column mt-2\">\r\n              <h5 className=\"head_title\">Scaffold Location List</h5>\r\n\r\n              <Input\r\n                type=\"search\"\r\n                style={{ width: \"fit-content\" }}\r\n                placeholder=\"Search\"\r\n                className=\"form-control\"\r\n              />\r\n            </div>\r\n            <div className=\"table_main p-1 mt-1 pb-3\">\r\n              {isLoading ? (\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    height: \"100%\",\r\n                  }}\r\n                >\r\n                  <Spinerr />\r\n                </div>\r\n              ) : data.length === 0 ? (\r\n                <p className=\"text-center\">There is no data to show.</p>\r\n              ) : (\r\n                <ClientDataTable columns={columns} data={data} />\r\n              )}\r\n            </div>\r\n          </TabPane>\r\n          <TabPane tabId=\"2\">\r\n            <div className=\"d-flex align-align-items-center justify-content-between mt-2\">\r\n              <h5 className=\"head_title\">Foundations / Supporting Structure</h5>\r\n              <Input\r\n                type=\"search\"\r\n                style={{ width: \"fit-content\" }}\r\n                placeholder=\"Search\"\r\n                className=\"form-control\"\r\n              />\r\n            </div>\r\n            <div className=\"table_main p-1 mt-1 pb-3\">\r\n              {isLoading ? (\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    height: \"100%\",\r\n                  }}\r\n                >\r\n                  <Spinerr />\r\n                </div>\r\n              ) : data.length === 0 ? (\r\n                <p className=\"text-center\">There is no data to show.</p>\r\n              ) : (\r\n                <ClientDataTable columns={columns} data={dataA} />\r\n              )}\r\n            </div>\r\n          </TabPane>\r\n          <TabPane tabId=\"3\">\r\n            <div className=\"d-flex align-align-items-center justify-content-between mt-2\">\r\n              <h5 className=\"head_title\">Scaffold Structure</h5>\r\n              <Input\r\n                type=\"search\"\r\n                style={{ width: \"fit-content\" }}\r\n                placeholder=\"Search\"\r\n                className=\"form-control\"\r\n              />\r\n            </div>\r\n            <div className=\"table_main p-1 mt-1 pb-3\">\r\n              {isLoading ? (\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    height: \"100%\",\r\n                  }}\r\n                >\r\n                  <Spinerr />\r\n                </div>\r\n              ) : data.length === 0 ? (\r\n                <p className=\"text-center\">There is no data to show.</p>\r\n              ) : (\r\n                <ClientDataTable columns={columns} data={dataB} />\r\n              )}\r\n            </div>\r\n          </TabPane>\r\n        </TabContent>\r\n\r\n        {/* secound tab start */}\r\n      </Fragment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SafetyEquipments;\r\n","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Delivery_form.js",["3770","3771","3772","3773","3774","3775","3776","3777","3778","3779","3780","3781","3782","3783","3784","3785","3786","3787"],"import \"@styles/react/apps/app-users.scss\";\r\nimport ClientDataTable from \"./table\";\r\n// import './client.css';\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./table.css\";\r\nimport Select from \"react-select\";\r\nimport { Breadcrumb, Card, Col, Row, Spinner } from \"react-bootstrap\";\r\nimport active from \"../../Admin/assests/icons/active.png\";\r\nimport block from \"../../Admin/assests/icons/block.png\";\r\nimport userIcon from \"../../Admin/assests/client_icon_modal.png\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  UncontrolledButtonDropdown,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Form,\r\n  Input,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport { MoreHorizontal, Trash, Edit2 } from \"react-feather\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Alert,\r\n} from \"reactstrap\";\r\n\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n// for spinner\r\nimport Spinerr from \"../../views/components/spinners/SpinnerGrowing\";\r\n\r\nconst DeliveryFrom = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // show data start code\r\n  const [data, setData] = useState([]);\r\n\r\n  function getData() {\r\n    setIsLoading(true);\r\n    axios\r\n      .post(`${global.BASEURL}getRecords/jobs`)\r\n      .then((res) => {\r\n        const resp = res.data.data;\r\n        const respDate = resp.filter(\r\n          (item) => item.status === \"Create Delivery Docket\"\r\n        );\r\n\r\n        setData(respDate);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data: \", error);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false); // Hide spinner after data is fetched\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  // delet api\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [deleteItemId, setDeleteItemId] = useState(null);\r\n\r\n  function handleDelete(id) {\r\n    setDeleteItemId(id);\r\n    setIsDeleteModalOpen(true);\r\n  }\r\n\r\n  const handleDeleteConfirm = () => {\r\n    // Close the delete confirmation modal\r\n    setIsDeleteModalOpen(false);\r\n\r\n    // Delete the item\r\n    if (deleteItemId) {\r\n      axios\r\n        .post(`${global.BASEURL}deleteRecord/jobs`, {\r\n          id: deleteItemId,\r\n        })\r\n        .then(() => {\r\n          getData();\r\n          toast.success(\"Data deleted successfully.\"); // Show success toast\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error deleting data:\", error);\r\n          toast.error(\"Failed to delete data.\"); // Show error toast\r\n        });\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Sr.no\",\r\n      selector: (row, index) => index + 1,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Form ID\",\r\n      selector: (row) => row.fomr_id,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Job Number\",\r\n      selector: (row) => row.job_no,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n\r\n    {\r\n      name: \"Job Name\",\r\n      selector: (row) => row.job_name,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n\r\n    {\r\n      name: \"Date\",\r\n      selector: (row) => \"12/2/1999\",\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Delivered By\",\r\n      selector: (row) => row.client,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      allowOverflow: true,\r\n      maxWidth: \"7rem\",\r\n      minWidth: \"2rem\",\r\n      cell: (row) => {\r\n        // modal edit\r\n\r\n        return (\r\n          <div className=\"d-flex justify-content-end w-100\">\r\n            <UncontrolledDropdown className=\"\">\r\n              <DropdownToggle className=\"pe-1 \" tag=\"span\">\r\n                <MoreHorizontal size={15} />\r\n              </DropdownToggle>\r\n              <DropdownMenu end>\r\n                <DropdownItem>\r\n                  <div\r\n                    onClick={() => handleDelete(row._id)}\r\n                    className=\"btn btn-white w-100 p-0 m-0\"\r\n                  >\r\n                    <span className=\"align-middle ms-50\">Delete</span>\r\n                  </div>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex align-align-items-center justify-content-between mt-3 mb-3\">\r\n        <h5 className=\"head_title\">\r\n          Forms / <span style={{ fontSize: \"20px\" }}>Delivery Report</span>\r\n        </h5>\r\n      </div>\r\n\r\n      {/* delet modal  */}\r\n\r\n      <Modal isOpen={isDeleteModalOpen}>\r\n        <ModalHeader>Delete Confirmation</ModalHeader>\r\n        <ModalBody>Are you sure you want to delete this item?</ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"danger\"\r\n            onClick={() => handleDeleteConfirm(deleteItemId)}\r\n          >\r\n            Yes\r\n          </Button>\r\n          <Button color=\"secondary\" onClick={() => setIsDeleteModalOpen(false)}>\r\n            No\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n      <div>\r\n        {isLoading ? (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: \"100%\",\r\n            }}\r\n          >\r\n            <Spinerr />\r\n          </div>\r\n        ) : data.length === 0 ? (\r\n          <p>There is no data to show.</p>\r\n        ) : (\r\n          <ClientDataTable columns={columns} data={data} />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeliveryFrom;\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\data-list\\ParcelList.js",["3788","3789"],"// ** React Imports\r\n// ** User List Component\r\nimport Table from './Table'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\nimport Breadcrumbs from '../../../@core/components/breadcrumbs'\r\nimport { useState } from 'react'\r\n\r\nconst ParcelList = () => {\r\n  const [isParcelList, setParcelList] = useState(true)\r\n\r\n  return (\r\n    <div className='app-user-list'>\r\n      {/* <BreadcrumbsDefault /> */}\r\n      <Breadcrumbs\r\n        breadCrumbTitle='Parcel'\r\n        breadCrumbParent='Parcel'\r\n        breadCrumbActive='Parcel List'\r\n      />\r\n      <Row></Row>\r\n      <Table isParcelList={isParcelList} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ParcelList\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\data-list\\AssignParcel.js",["3790","3791"],"// ** React Imports\r\n// ** User List Component\r\nimport Table from './Table'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\nimport Breadcrumbs from '../../../@core/components/breadcrumbs'\r\nimport { useState } from 'react'\r\n\r\nconst AssignParcel = () => {\r\n  const [isAssignParcelList, setAssignParcelList] = useState(true)\r\n\r\n  return (\r\n    <div className='app-user-list'>\r\n      {/* <BreadcrumbsDefault /> */}\r\n      <Breadcrumbs\r\n        breadCrumbTitle='Assign Parcel'\r\n        breadCrumbParent='Assign Parcel'\r\n        breadCrumbActive='Assign Parcel List'\r\n      />\r\n      <Row></Row>\r\n      <Table isAssignParcelList={isAssignParcelList} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AssignParcel\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\data-list\\RiderList.js",["3792","3793"],"// ** React Imports\r\n// ** User List Component\r\nimport Table from './Table'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\nimport Breadcrumbs from '../../../@core/components/breadcrumbs'\r\nimport { useState } from 'react'\r\n\r\nconst RiderList = () => {\r\n  const [isRiderList, setRiderList] = useState(true)\r\n\r\n  return (\r\n    <div className='app-user-list'>\r\n      {/* <BreadcrumbsDefault /> */}\r\n      <Breadcrumbs\r\n        breadCrumbTitle='Rider'\r\n        breadCrumbParent='Rider'\r\n        breadCrumbActive='Rider List'\r\n      />\r\n      <Row></Row>\r\n      <Table isRiderList={isRiderList} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RiderList\r\n","D:\\Utecho\\Scaff-cert\\src\\Admin\\Availability\\AvailabilityList.js",[],"D:\\Utecho\\Scaff-cert\\src\\Admin\\Availability\\SetAvailability.js",[],"D:\\Utecho\\Scaff-cert\\src\\Admin\\employee\\CreateEmployee.js",[],"D:\\Utecho\\Scaff-cert\\src\\Admin\\employee\\EmployeeList.js",[],"D:\\Utecho\\Scaff-cert\\src\\Admin\\services\\CreateSeervice.js",[],"D:\\Utecho\\Scaff-cert\\src\\Admin\\orders\\all_orders.js",[],"D:\\Utecho\\Scaff-cert\\src\\Admin\\services\\ServiceList.js",[],"D:\\Utecho\\Scaff-cert\\src\\Admin\\orders\\accept_orders.js",[],"D:\\Utecho\\Scaff-cert\\src\\Admin\\orders\\complete_orders.js",[],"D:\\Utecho\\Scaff-cert\\src\\Admin\\orders\\cancel_orders.js",[],"D:\\Utecho\\Scaff-cert\\src\\Admin\\orders\\pending_orders.js",[],"D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Jsa_hazard.js",["3794","3795","3796","3797","3798","3799","3800","3801","3802","3803"],"import \"@styles/react/apps/app-users.scss\";\r\nimport ClientDataTable from \"./table\";\r\n// import './client.css';\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./table.css\";\r\nimport Select from \"react-select\";\r\nimport { Breadcrumb, Card, Col, Row, Spinner } from \"react-bootstrap\";\r\nimport active from \"../../Admin/assests/icons/active.png\";\r\nimport block from \"../../Admin/assests/icons/block.png\";\r\nimport jsaHazard from \"../../Admin/assests/add_JSA_hazards.svg\";\r\n\r\nimport {\r\n  UncontrolledButtonDropdown,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Form,\r\n  Input,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport { MoreHorizontal, Trash, Edit2 } from \"react-feather\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Alert,\r\n} from \"reactstrap\";\r\n\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n// for spinner\r\nimport Spinerr from \"../../views/components/spinners/SpinnerGrowing\";\r\n\r\nconst JsaHazard = () => {\r\n  const [defaultData_, setDefaultData_] = useState(\"\");\r\n\r\n  // states for update and insert data\r\n\r\n  const [name, setName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (defaultData_) {\r\n      setName(defaultData_.name);\r\n    }\r\n  }, [defaultData_]);\r\n\r\n  // post data\r\n\r\n  const postData = (e) => {\r\n    e.preventDefault();\r\n    if (!name) {\r\n      toast.error(\"Please fill out all required fields.\");\r\n      return;\r\n    }\r\n    setName(\"\");\r\n\r\n    axios\r\n      .post(`${global.BASEURL}createRecord/jsahazards`, {\r\n        name,\r\n      })\r\n      .then(() => {\r\n        toggleLargeModal();\r\n        getData();\r\n        toast.success(\"Data added successfully.\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error adding data: \", error);\r\n        toast.error(\"Failed to add data.\"); // Show error toast\r\n      });\r\n  };\r\n\r\n  // get data\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // show data start code\r\n  const [data, setData] = useState([]);\r\n\r\n  function getData() {\r\n    setIsLoading(true);\r\n    axios\r\n      .post(`${global.BASEURL}getRecords/jsahazards`)\r\n      .then((res) => {\r\n        setData(res.data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data: \", error);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false); // Hide spinner after data is fetched\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  // update data\r\n\r\n  const updateData = (e) => {\r\n    e.preventDefault();\r\n    const itemId = defaultData_?._id;\r\n    axios\r\n      .post(`${global.BASEURL}updateRecord/jsahazards`, {\r\n        id: itemId,\r\n        name,\r\n      })\r\n      .then(() => {\r\n        editHazard();\r\n        getData();\r\n        toast.success(\"Data updated successfully.\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error updating client:\", error);\r\n      });\r\n  };\r\n\r\n  // delet data\r\n\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [deleteItemId, setDeleteItemId] = useState(null);\r\n\r\n  const handleDelete = (id) => {\r\n    setDeleteItemId(id);\r\n    setIsDeleteModalOpen(true);\r\n  };\r\n\r\n  const handleDeleteConfirm = () => {\r\n    // Close the delete confirmation modal\r\n    setIsDeleteModalOpen(false);\r\n\r\n    // Delete the item\r\n    if (deleteItemId) {\r\n      axios\r\n        .post(`${global.BASEURL}deleteRecord/jsahazards`, {\r\n          id: deleteItemId,\r\n        })\r\n        .then(() => {\r\n          getData();\r\n          toast.success(\"Data deleted successfully.\"); // Show success toast\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error deleting data:\", error);\r\n          toast.error(\"Failed to delete data.\"); // Show error toast\r\n        });\r\n    }\r\n  };\r\n\r\n  let counter = 0;\r\n  const columns = [\r\n    {\r\n      name: \"Sr.no\",\r\n      selector: (row) => ++counter,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: (row) => row.name,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n\r\n    {\r\n      name: \"Action\",\r\n      allowOverflow: true,\r\n      maxWidth: \"7rem\",\r\n      minWidth: \"2rem\",\r\n      cell: (row) => {\r\n        // modal edit\r\n\r\n        return (\r\n          <div className=\"d-flex justify-content-end w-100\">\r\n            <UncontrolledDropdown className=\"\">\r\n              <DropdownToggle className=\"pe-1 \" tag=\"span\">\r\n                <MoreHorizontal size={15} />\r\n              </DropdownToggle>\r\n              <DropdownMenu end>\r\n                <DropdownItem>\r\n                  <div\r\n                    onClick={() => editHazard(row)}\r\n                    className=\"btn w-100 btn-white p-0 m-0\"\r\n                  >\r\n                    <span className=\"align-middle ms-50\">Edit</span>\r\n                  </div>\r\n                </DropdownItem>\r\n\r\n                <DropdownItem>\r\n                  <div\r\n                    onClick={() => handleDelete(row._id)}\r\n                    className=\"btn w-100 btn-white p-0 m-0\"\r\n                  >\r\n                    <span className=\"align-middle ms-50\">Delete</span>\r\n                  </div>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  // edit client modal start\r\n\r\n  // Step 2: Add state for managing modal visibility\r\n  const [hazardmodal, sethazardmodal] = useState(false);\r\n\r\n  const editHazard = (result) => {\r\n    setDefaultData_(result);\r\n    sethazardmodal(!hazardmodal);\r\n  };\r\n\r\n  const [isLargeModalOpen, setIsLargeModalOpen] = useState(false);\r\n\r\n  const toggleLargeModal = () => {\r\n    setIsLargeModalOpen(!isLargeModalOpen);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n\r\n      <div className=\"d-flex align-align-items-center justify-content-between mt-3 mb-3\">\r\n        <h5 className=\"head_title\">\r\n          {\" \"}\r\n          Forms / <span style={{ fontSize: \"20px\" }}> Jsa hazards</span>\r\n        </h5>\r\n        <div className=\"d-flex align-items-center\">\r\n          <div>\r\n            <Button className=\"default_btn\" outline onClick={toggleLargeModal}>\r\n              Add JSA Hazards\r\n            </Button>\r\n\r\n            {/* add hazard modal */}\r\n            <Modal\r\n              centered\r\n              isOpen={isLargeModalOpen}\r\n              toggle={toggleLargeModal}\r\n              size=\"md\"\r\n            >\r\n              <ModalHeader toggle={toggleLargeModal}></ModalHeader>\r\n              <ModalBody>\r\n                <div className=\"icon_div_main mb-2\">\r\n                  <img\r\n                    style={{ width: \"35px\", height: \"35px\" }}\r\n                    src={jsaHazard}\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <h5 className=\"modal_title\">Add New JSA Hazards</h5>\r\n                <span className=\"modal_subtitle\">\r\n                  Enter the correct details of the form which you want to add.\r\n                </span>\r\n\r\n                <Form className=\"d-flex flex-column p-1\">\r\n                  <Row>\r\n                    <Col className=\"mb-2\" lg=\"12\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Add New JSA Hazards\r\n                      </Label>\r\n\r\n                      <Input\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Name\"\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <div className=\"mx-auto\">\r\n                    <Button\r\n                      onClick={postData}\r\n                      type=\"submit\"\r\n                      className=\"mt-2 default_btn\"\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              </ModalBody>\r\n            </Modal>\r\n\r\n            {/* edit modal */}\r\n\r\n            <Modal centered isOpen={hazardmodal} toggle={editHazard} size=\"md\">\r\n              <ModalHeader toggle={editHazard}></ModalHeader>\r\n              <ModalBody>\r\n                <div className=\"icon_div_main mb-2\">\r\n                  <img\r\n                    style={{ width: \"35px\", height: \"35px\" }}\r\n                    src={jsaHazard}\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <h5 className=\"modal_title\">Edit New JSA Hazards</h5>\r\n                <span className=\"modal_subtitle\">\r\n                  Enter the correct details of the form which you want to edit.\r\n                </span>\r\n\r\n                <Form className=\"d-flex flex-column p-1\">\r\n                  <Row>\r\n                    <Col className=\"mb-2\" lg=\"12\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Add New JSA Hazards\r\n                      </Label>\r\n\r\n                      <Input\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        defaultValue={defaultData_?.name}\r\n                        type=\"text\"\r\n                        placeholder=\"Risk Control\"\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <div className=\"mx-auto\">\r\n                    <Button\r\n                      onClick={updateData}\r\n                      type=\"submit\"\r\n                      className=\"mt-2 default_btn\"\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              </ModalBody>\r\n            </Modal>\r\n            {/* delete modal */}\r\n\r\n            <Modal isOpen={isDeleteModalOpen} size=\"md\">\r\n              <ModalHeader>Delete Confirmation</ModalHeader>\r\n              <ModalBody>Are you sure you want to delete this item?</ModalBody>\r\n              <ModalFooter>\r\n                <Button\r\n                  color=\"danger\"\r\n                  onClick={() => handleDeleteConfirm(deleteItemId)}\r\n                >\r\n                  Yes\r\n                </Button>\r\n                <Button\r\n                  color=\"secondary\"\r\n                  onClick={() => setIsDeleteModalOpen(false)}\r\n                >\r\n                  No\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          </div>\r\n          <div className=\"ms-2\">\r\n            <UncontrolledButtonDropdown>\r\n              <DropdownToggle className=\"filter_btn\">\r\n                <img className=\"filter_img\" src=\"./icons/filter_icon.png\" />\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem\r\n                  href=\"/\"\r\n                  tag=\"a\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  All\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  href=\"/\"\r\n                  tag=\"a\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  New User\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  href=\"/\"\r\n                  tag=\"a\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  Active User\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  href=\"/\"\r\n                  tag=\"a\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  Blocked User\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledButtonDropdown>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* table  */}\r\n      <div>\r\n        {isLoading ? (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: \"100%\",\r\n            }}\r\n          >\r\n            <Spinerr />\r\n          </div>\r\n        ) : data.length === 0 ? (\r\n          <p>There is no data to show.</p>\r\n        ) : (\r\n          <ClientDataTable columns={columns} data={data} />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JsaHazard;\r\n","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Jsa_activity.js",["3804","3805","3806","3807","3808","3809","3810","3811","3812","3813","3814"],"import \"@styles/react/apps/app-users.scss\";\r\nimport ClientDataTable from \"./table\";\r\n// import './client.css';\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./table.css\";\r\nimport Select from \"react-select\";\r\nimport { Breadcrumb, Card, Col, Row, Spinner } from \"react-bootstrap\";\r\nimport active from \"../../Admin/assests/icons/active.png\";\r\nimport block from \"../../Admin/assests/icons/block.png\";\r\nimport jsaActivity from \"../../Admin/assests/new_JSA_activity.svg\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  UncontrolledButtonDropdown,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Form,\r\n  Input,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport { MoreHorizontal, Trash, Edit2 } from \"react-feather\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Alert,\r\n} from \"reactstrap\";\r\n\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n// for spinner\r\nimport Spinerr from \"../../views/components/spinners/SpinnerGrowing\";\r\n\r\nconst JsaActivity = () => {\r\n  const [defaultData_, setDefaultData_] = useState(\"\");\r\n\r\n  // states for update and insert data\r\n\r\n  const [name, setName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (defaultData_) {\r\n      setName(defaultData_.name);\r\n    }\r\n  }, [defaultData_]);\r\n\r\n  // post data\r\n\r\n  const postData = (e) => {\r\n    e.preventDefault();\r\n    if (!name) {\r\n      toast.error(\"Please fill out all required fields.\");\r\n      return;\r\n    }\r\n    setName(\"\");\r\n\r\n    axios\r\n      .post(`${global.BASEURL}createRecord/jsaactivity`, {\r\n        name,\r\n      })\r\n      .then(() => {\r\n        toggleLargeModal();\r\n        getData();\r\n        toast.success(\"Data added successfully.\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error adding data: \", error);\r\n        toast.error(\"Failed to add data.\"); // Show error toast\r\n      });\r\n  };\r\n\r\n  // get data\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // show data start code\r\n  const [data, setData] = useState([]);\r\n\r\n  function getData() {\r\n    setIsLoading(true);\r\n    axios\r\n      .post(`${global.BASEURL}getRecords/jsaactivity`)\r\n      .then((res) => {\r\n        setData(res.data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data: \", error);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false); // Hide spinner after data is fetched\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  // update data\r\n\r\n  const updateData = (e) => {\r\n    e.preventDefault();\r\n    const itemId = defaultData_?._id;\r\n    axios\r\n      .post(`${global.BASEURL}updateRecord/jsaactivity`, {\r\n        id: itemId,\r\n        name,\r\n      })\r\n      .then(() => {\r\n        editModalActivity();\r\n        getData();\r\n        toast.success(\"Data updated successfully.\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error updating client:\", error);\r\n      });\r\n  };\r\n\r\n  // delet data\r\n\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [deleteItemId, setDeleteItemId] = useState(null);\r\n\r\n  const handleDelete = (id) => {\r\n    setDeleteItemId(id);\r\n    setIsDeleteModalOpen(true);\r\n  };\r\n\r\n  const handleDeleteConfirm = () => {\r\n    // Close the delete confirmation modal\r\n    setIsDeleteModalOpen(false);\r\n\r\n    // Delete the item\r\n    if (deleteItemId) {\r\n      axios\r\n        .post(`${global.BASEURL}deleteRecord/jsaactivity`, {\r\n          id: deleteItemId,\r\n        })\r\n        .then(() => {\r\n          getData();\r\n          toast.success(\"Data deleted successfully.\"); // Show success toast\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error deleting data:\", error);\r\n          toast.error(\"Failed to delete data.\"); // Show error toast\r\n        });\r\n    }\r\n  };\r\n\r\n  let counter = 0;\r\n  const columns = [\r\n    {\r\n      name: \"Sr.no\",\r\n      selector: (row) => ++counter,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: (row) => row.name,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n\r\n    {\r\n      name: \"Action\",\r\n      allowOverflow: true,\r\n      maxWidth: \"7rem\",\r\n      minWidth: \"2rem\",\r\n      cell: (row) => {\r\n        // modal edit\r\n\r\n        return (\r\n          <div className=\"d-flex justify-content-end w-100\">\r\n            <UncontrolledDropdown className=\"\">\r\n              <DropdownToggle className=\"pe-1 \" tag=\"span\">\r\n                <MoreHorizontal size={15} />\r\n              </DropdownToggle>\r\n              <DropdownMenu end>\r\n                <DropdownItem>\r\n                  <div\r\n                    onClick={() => editModalActivity(row)}\r\n                    outline\r\n                    // onClick={toggleLargeModaledit}\r\n                    className=\"btn btn-white w-100 p-0 m-0\"\r\n                  >\r\n                    <span className=\"align-middle ms-50\">Edit</span>\r\n                  </div>\r\n                </DropdownItem>\r\n\r\n                <DropdownItem>\r\n                  <div\r\n                    onClick={() => handleDelete(row._id)}\r\n                    className=\"btn btn-white w-100 p-0 m-0\"\r\n                  >\r\n                    <span className=\"align-middle ms-50\">Delete</span>\r\n                  </div>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  // edit client modal start\r\n\r\n  // Step 2: Add state for managing modal visibility\r\n  const [activityModal, setactivityModal] = useState(false);\r\n\r\n  const editModalActivity = (result) => {\r\n    setDefaultData_(result);\r\n    setactivityModal(!activityModal);\r\n  };\r\n\r\n  const [isLargeModalOpen, setIsLargeModalOpen] = useState(false);\r\n\r\n  const toggleLargeModal = () => {\r\n    setIsLargeModalOpen(!isLargeModalOpen);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n\r\n      <div className=\"d-flex align-align-items-center justify-content-between mt-3 mb-3\">\r\n        <h5 className=\"head_title\">\r\n          Forms / <span style={{ fontSize: \"20px\" }}>JSA Activity</span>\r\n        </h5>\r\n        <div className=\"d-flex align-items-center\">\r\n          <div>\r\n            <Button className=\"default_btn\" outline onClick={toggleLargeModal}>\r\n              Add JSA Activity\r\n            </Button>\r\n\r\n            {/* add client modal */}\r\n            <Modal\r\n              isOpen={isLargeModalOpen}\r\n              toggle={toggleLargeModal} // Use the correct toggle function for the large modal\r\n              size=\"lg\"\r\n            >\r\n              <ModalHeader\r\n                toggle={toggleLargeModal} // Use the correct toggle function for the large modal\r\n              ></ModalHeader>\r\n              <ModalBody>\r\n                <div className=\"icon_div_main mb-2\">\r\n                  <img\r\n                    style={{ width: \"35px\", height: \"35px\" }}\r\n                    src={jsaActivity}\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <h5 className=\"modal_title\">Add New JSA Activity</h5>\r\n                <span className=\"modal_subtitle\">\r\n                  Enter the correct details of the form which you want to add.\r\n                </span>\r\n\r\n                <Form className=\"d-flex flex-column p-1\">\r\n                  <Row>\r\n                    <Col className=\"mb-2\" lg=\"12\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">Name</Label>\r\n                      <Input\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"Name\"\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <div className=\"mx-auto\">\r\n                    <Button\r\n                      onClick={postData}\r\n                      type=\"submit\"\r\n                      className=\"mt-2 default_btn\"\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              </ModalBody>\r\n            </Modal>\r\n\r\n            {/* edit modal */}\r\n\r\n            <Modal\r\n              isOpen={activityModal}\r\n              toggle={editModalActivity} // Use the correct toggle function for the large modal\r\n              size=\"lg\"\r\n            >\r\n              <ModalHeader\r\n                toggle={editModalActivity} // Use the correct toggle function for the large modal\r\n              ></ModalHeader>\r\n              <ModalBody>\r\n                <div className=\"icon_div_main mb-2\">\r\n                  <img\r\n                    style={{ width: \"35px\", height: \"35px\" }}\r\n                    src={jsaActivity}\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <h5 className=\"modal_title\">Edit New JSA Activity</h5>\r\n                <span className=\"modal_subtitle\">\r\n                  Enter the correct details of the form which you want to Edit.\r\n                </span>\r\n\r\n                <Form className=\"d-flex flex-column p-1\">\r\n                  <Row>\r\n                    <Col className=\"mb-2\" lg=\"12\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">Name</Label>\r\n                      <Input\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        defaultValue={defaultData_?.name}\r\n                        type=\"text\"\r\n                        placeholder=\"Name\"\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <div className=\"mx-auto\">\r\n                    <Button\r\n                      onClick={updateData}\r\n                      type=\"submit\"\r\n                      className=\"mt-2 default_btn\"\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              </ModalBody>\r\n            </Modal>\r\n\r\n            {/* delete modal */}\r\n\r\n            <Modal isOpen={isDeleteModalOpen}>\r\n              <ModalHeader>Delete Confirmation</ModalHeader>\r\n              <ModalBody>Are you sure you want to delete this item?</ModalBody>\r\n              <ModalFooter>\r\n                <Button\r\n                  color=\"danger\"\r\n                  onClick={() => handleDeleteConfirm(deleteItemId)}\r\n                >\r\n                  Yes\r\n                </Button>\r\n                <Button\r\n                  color=\"secondary\"\r\n                  onClick={() => setIsDeleteModalOpen(false)}\r\n                >\r\n                  No\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          </div>\r\n          <div className=\"ms-2\">\r\n            <UncontrolledButtonDropdown>\r\n              <DropdownToggle className=\"filter_btn\">\r\n                <img className=\"filter_img\" src=\"./icons/filter_icon.png\" />\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem\r\n                  href=\"/\"\r\n                  tag=\"a\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  All\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  href=\"/\"\r\n                  tag=\"a\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  New User\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  href=\"/\"\r\n                  tag=\"a\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  Active User\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  href=\"/\"\r\n                  tag=\"a\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  Blocked User\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledButtonDropdown>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/*  table satrt */}\r\n      <div>\r\n        {isLoading ? (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: \"100%\",\r\n            }}\r\n          >\r\n            <Spinerr />\r\n          </div>\r\n        ) : data.length === 0 ? (\r\n          <p>There is no data to show.</p>\r\n        ) : (\r\n          <ClientDataTable columns={columns} data={data} />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JsaActivity;\r\n","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Safety_equipments.js",["3815","3816","3817","3818","3819","3820","3821","3822","3823","3824"],"import \"@styles/react/apps/app-users.scss\";\r\nimport ClientDataTable from \"./table\";\r\n\r\n// import './client.css';\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\";\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport \"./table.css\";\r\nimport Select from \"react-select\";\r\nimport { Breadcrumb, Card, Col, Row, Spinner } from \"react-bootstrap\";\r\nimport active from \"../../Admin/assests/icons/active.png\";\r\nimport block from \"../../Admin/assests/icons/block.png\";\r\nimport safetyIcon from \"../../Admin/assests/safety_icon.png\";\r\nimport newInspec from \"../../Admin/assests/new_inspection.png\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  UncontrolledButtonDropdown,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Form,\r\n  Input,\r\n  Label,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Alert,\r\n} from \"reactstrap\";\r\n\r\nimport { MoreHorizontal, Trash, Edit2 } from \"react-feather\";\r\n\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n// for spinner\r\nimport Spinerr from \"../../views/components/spinners/SpinnerGrowing\";\r\n\r\nconst SafetyEquipments = () => {\r\n  const [defaultData_, setDefaultData_] = useState(\"\");\r\n  // states for update and insert data\r\n\r\n  const [id_number, setId_number] = useState(\"\");\r\n  const [model, setModel] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [manuf_date, setManuf_date] = useState(\"\");\r\n  const [expiry_date, setExpiry_date] = useState(\"\");\r\n  const [owner_id, setOwner_id] = useState(\"\");\r\n  const [inspection_month, setInspection_month] = useState(\"\");\r\n  const [status, setStatus] = useState(\"Active\");\r\n\r\n  useEffect(() => {\r\n    if (defaultData_) {\r\n      setId_number(defaultData_.id_number);\r\n      setModel(defaultData_.model);\r\n      setDescription(defaultData_.description);\r\n      setManuf_date(defaultData_.manuf_date);\r\n      setExpiry_date(defaultData_.expiry_date);\r\n      setOwner_id(defaultData_.owner_id);\r\n      setInspection_month(defaultData_.inspection_month);\r\n\r\n      setStatus(defaultData_.status);\r\n    }\r\n  }, [defaultData_]);\r\n\r\n  // post data with api\r\n\r\n  const postData = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      !id_number ||\r\n      !model ||\r\n      !description ||\r\n      !manuf_date ||\r\n      !expiry_date ||\r\n      !owner_id ||\r\n      !inspection_month\r\n    ) {\r\n      toast.error(\"Please fill out all required fields.\");\r\n      return;\r\n    }\r\n    setId_number(\"\");\r\n    setModel(\"\");\r\n    setDescription(\"\");\r\n    setManuf_date(\"\");\r\n    setExpiry_date(\"\");\r\n    setOwner_id(\"\");\r\n    setInspection_month(\"\");\r\n    // setStatus(\"\");\r\n\r\n    axios\r\n      .post(`${global.BASEURL}createRecord/equipment`, {\r\n        id_number,\r\n        model,\r\n        description,\r\n        manuf_date,\r\n        expiry_date,\r\n        owner_id,\r\n        inspection_month,\r\n        status,\r\n      })\r\n      .then(() => {\r\n        toggleLargeModal();\r\n        getData();\r\n        toast.success(\"Data added successfully.\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error adding data: \", error);\r\n        toast.error(\"Failed to add data.\"); // Show error toast\r\n      });\r\n  };\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // get data from api\r\n  const [data, setData] = useState([]);\r\n\r\n  function getData() {\r\n    setIsLoading(true);\r\n    axios\r\n      .post(`${global.BASEURL}getRecords/equipment`)\r\n      .then((res) => {\r\n        setData(res.data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data: \", error);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false); // Hide spinner after data is fetched\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  // update data with api\r\n\r\n  const updateData = (e) => {\r\n    e.preventDefault();\r\n    const itemId = defaultData_?._id;\r\n    axios\r\n      .post(`${global.BASEURL}updateRecord/equipment`, {\r\n        id: itemId,\r\n        id_number,\r\n        model,\r\n        description,\r\n        manuf_date,\r\n        expiry_date,\r\n        owner_id,\r\n        inspection_month,\r\n        status,\r\n      })\r\n      .then(() => {\r\n        repEditModal();\r\n        getData();\r\n        toast.success(\"Data updated successfully.\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error updating client:\", error);\r\n      });\r\n  };\r\n\r\n  // delet data from api\r\n  //\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [deleteItemId, setDeleteItemId] = useState(null);\r\n\r\n  const handleDelete = (id) => {\r\n    setDeleteItemId(id);\r\n    setIsDeleteModalOpen(true);\r\n  };\r\n\r\n  const handleDeleteConfirm = () => {\r\n    // Close the delete confirmation modal\r\n    setIsDeleteModalOpen(false);\r\n\r\n    // Delete the item\r\n    if (deleteItemId) {\r\n      axios\r\n        .post(`${global.BASEURL}deleteRecord/equipment`, {\r\n          id: deleteItemId,\r\n        })\r\n        .then(() => {\r\n          getData();\r\n          toast.success(\"Data deleted successfully.\"); // Show success toast\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error deleting data:\", error);\r\n          toast.error(\"Failed to delete data.\"); // Show error toast\r\n        });\r\n    }\r\n  };\r\n\r\n  // end crud oprt\r\n\r\n  const [newInspection, setNewInspection] = useState(false);\r\n  const newInspectionModal = () => {\r\n    setNewInspection(!newInspection);\r\n  };\r\n\r\n  const [inspectionLog, setInspectionLog] = useState(false);\r\n  const inspectionLogModal = () => {\r\n    setInspectionLog(!inspectionLog);\r\n  };\r\n\r\n  const [activeTabSection1, setActiveTabSection1] = useState(\"1\");\r\n\r\n  const toggleTabSection1 = (tab) => {\r\n    if (activeTabSection1 !== tab) {\r\n      setActiveTabSection1(tab);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Sr.no\",\r\n      selector: (row, index) => index + 1,\r\n      sortable: \"true\",\r\n      maxWidth: \"2rem\",\r\n    },\r\n    {\r\n      name: \"Equipment ID\",\r\n      selector: (row) => row.id_number,\r\n      sortable: \"true\",\r\n      // maxWidth: \"2rem\",\r\n    },\r\n    {\r\n      name: \"Description\",\r\n      selector: (row) => row.description,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n\r\n    {\r\n      name: \"Tag Number\",\r\n      selector: (row) => row.tag_number,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n\r\n    {\r\n      name: \"Expiry Date\",\r\n      selector: (row) => row.expiry_date,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Owner\",\r\n      selector: (row) => row.owner_id,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Inspection\",\r\n      selector: (row) => (\r\n        <>\r\n          <div>\r\n            <div outline onClick={newInspectionModal}>\r\n              <h5 className=\"inps_text\">New Inspection</h5>\r\n            </div>\r\n            <div outline onClick={inspectionLogModal}>\r\n              <h5 className=\"inps_text\">Inspection Log</h5>\r\n            </div>\r\n          </div>\r\n        </>\r\n      ),\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n\r\n    {\r\n      name: \"Status\",\r\n      cell: (row) => (\r\n        <div className=\"d-flex align-items-center\">\r\n          {row.status === \"Active\" ? (\r\n            <>\r\n              <img\r\n                src={active}\r\n                alt=\"active\"\r\n                width=\"11\"\r\n                height=\"11\"\r\n                className=\"me-1\"\r\n              />\r\n              <span>{row.status}</span>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <img\r\n                src={block}\r\n                alt=\"block\"\r\n                width=\"11\"\r\n                height=\"11\"\r\n                className=\"me-1\"\r\n              />\r\n              <span>{row.status}</span>\r\n            </>\r\n          )}\r\n        </div>\r\n      ),\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      allowOverflow: true,\r\n      maxWidth: \"7rem\",\r\n      minWidth: \"2rem\",\r\n      cell: (row) => {\r\n        // modal edit\r\n\r\n        return (\r\n          <div className=\"d-flex justify-content-end w-100\">\r\n            <UncontrolledDropdown className=\"\">\r\n              <DropdownToggle className=\"pe-1 \" tag=\"span\">\r\n                <MoreHorizontal size={15} />\r\n              </DropdownToggle>\r\n              <DropdownMenu end>\r\n                <DropdownItem>\r\n                  <div\r\n                    onClick={() => repEditModal(row)}\r\n                    className=\"btn w-100 btn-white p-0 m-0\"\r\n                  >\r\n                    <span className=\"align-middle ms-50\">Edit</span>\r\n                  </div>\r\n                </DropdownItem>\r\n\r\n                <DropdownItem>\r\n                  <div\r\n                    onClick={() => handleDelete(row._id)}\r\n                    className=\"btn w-100 btn-white p-0 m-0\"\r\n                  >\r\n                    <div className=\"align-middle ms-50\">Delete</div>\r\n                  </div>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  let dataA = [\r\n    {\r\n      srno: \"09\",\r\n      equipment_id: \"Atif\",\r\n      tag_number: \"038392833\",\r\n      last_inspec: \"FSD\",\r\n      next_inspec: \"NSW\",\r\n      inspec_by: \"NSW\",\r\n    },\r\n  ];\r\n\r\n  const columnsA = [\r\n    {\r\n      name: \"Sr.no\",\r\n      selector: (row) => row.srno,\r\n      sortable: \"true\",\r\n      maxWidth: \"2rem\",\r\n    },\r\n    {\r\n      name: \"Equipment ID\",\r\n      selector: (row) => row.equipment_id,\r\n      sortable: \"true\",\r\n      // maxWidth: \"2rem\",\r\n    },\r\n\r\n    {\r\n      name: \"Tag Number\",\r\n      selector: (row) => row.tag_number,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n\r\n    {\r\n      name: \"Last Inspection\",\r\n      selector: (row) => row.last_inspec,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Next Inspection\",\r\n      selector: (row) => row.next_inspec,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Inspect By\",\r\n      selector: (row) => row.inspec_by,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n\r\n    {\r\n      name: \"Action\",\r\n      allowOverflow: true,\r\n      maxWidth: \"7rem\",\r\n      minWidth: \"2rem\",\r\n      cell: () => {\r\n        // modal edit\r\n\r\n        return (\r\n          <div className=\"d-flex justify-content-end w-100\">\r\n            <UncontrolledDropdown className=\"\">\r\n              <DropdownToggle className=\"pe-1 \" tag=\"span\">\r\n                <MoreHorizontal size={15} />\r\n              </DropdownToggle>\r\n              <DropdownMenu end>\r\n                <DropdownItem>\r\n                  <Link\r\n                    outline\r\n                    // onClick={toggleLargeModaledit}\r\n                    className=\"btn btn-white p-0 m-0\"\r\n                  >\r\n                    <span className=\"align-middle ms-50\">Edit</span>\r\n                  </Link>\r\n                </DropdownItem>\r\n\r\n                <DropdownItem>\r\n                  <span className=\"align-middle ms-50\">Delete</span>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  let dataB = [\r\n    {\r\n      srno: \"09\",\r\n      equipment_id: \"Atif\",\r\n      tag_number: \"038392833\",\r\n      last_inspec: \"FSD\",\r\n      next_inspec: \"NSW\",\r\n      inspec_by: \"NSW\",\r\n    },\r\n  ];\r\n\r\n  const columnsB = [\r\n    {\r\n      name: \"Sr.no\",\r\n      selector: (row) => row.srno,\r\n      sortable: \"true\",\r\n      maxWidth: \"2rem\",\r\n    },\r\n    {\r\n      name: \"Equipment ID\",\r\n      selector: (row) => row.equipment_id,\r\n      sortable: \"true\",\r\n      // maxWidth: \"2rem\",\r\n    },\r\n\r\n    {\r\n      name: \"Tag Number\",\r\n      selector: (row) => row.tag_number,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n\r\n    {\r\n      name: \"Last Inspection\",\r\n      selector: (row) => row.last_inspec,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Next Inspection\",\r\n      selector: (row) => row.next_inspec,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Inspect By\",\r\n      selector: (row) => row.inspec_by,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n\r\n    {\r\n      name: \"Action\",\r\n      allowOverflow: true,\r\n      maxWidth: \"7rem\",\r\n      minWidth: \"2rem\",\r\n      cell: () => {\r\n        // modal edit\r\n\r\n        return (\r\n          <div className=\"d-flex justify-content-end w-100\">\r\n            <UncontrolledDropdown className=\"\">\r\n              <DropdownToggle className=\"pe-1 \" tag=\"span\">\r\n                <MoreHorizontal size={15} />\r\n              </DropdownToggle>\r\n              <DropdownMenu end>\r\n                <DropdownItem>\r\n                  <Link\r\n                    outline\r\n                    // onClick={toggleLargeModaledit}\r\n                    className=\"btn btn-white p-0 m-0\"\r\n                  >\r\n                    <span className=\"align-middle ms-50\">Edit</span>\r\n                  </Link>\r\n                </DropdownItem>\r\n\r\n                <DropdownItem>\r\n                  <span className=\"align-middle ms-50\">Delete</span>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  // secound tab column data start\r\n  const columnsC = [\r\n    {\r\n      name: \"Tag Number\",\r\n      selector: (row) => row.tag_nbr,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Last Inspection\",\r\n      selector: (row) => row.last_inspection,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Next Inspection\",\r\n      selector: (row) => row.next_inspection,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      cell: (row) => (\r\n        <div className=\"d-flex align-items-center\">\r\n          {row.status === \"Active\" ? (\r\n            <>\r\n              <img\r\n                src={active}\r\n                alt=\"active\"\r\n                width=\"11\"\r\n                height=\"11\"\r\n                className=\"me-1\"\r\n              />\r\n              <span>{row.status}</span>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <img\r\n                src={block}\r\n                alt=\"block\"\r\n                width=\"11\"\r\n                height=\"11\"\r\n                className=\"me-1\"\r\n              />\r\n              <span>{row.status}</span>\r\n            </>\r\n          )}\r\n        </div>\r\n      ),\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      allowOverflow: true,\r\n      maxWidth: \"7rem\",\r\n      minWidth: \"2rem\",\r\n      cell: () => {\r\n        // modal edit\r\n\r\n        return (\r\n          <div className=\"d-flex justify-content-end w-100\">\r\n            <UncontrolledDropdown className=\"\">\r\n              <DropdownToggle className=\"pe-1 \" tag=\"span\">\r\n                <MoreHorizontal size={15} />\r\n              </DropdownToggle>\r\n              <DropdownMenu end>\r\n                <DropdownItem>\r\n                  <div className=\"btn btn-white w-100 p-0 m-0\">\r\n                    <span className=\"align-middle ms-50\">Edit</span>\r\n                  </div>\r\n                </DropdownItem>\r\n\r\n                <DropdownItem>\r\n                  <div className=\"btn btn-white w-100 p-0 m-0\">\r\n                    <span className=\"align-middle ms-50\">Delete</span>\r\n                  </div>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  // secound tab data\r\n  let dataC = [\r\n    {\r\n      tag_nbr: \"09\",\r\n      last_inspection: \"Standard 3.0m\",\r\n      next_inspection: \"10\",\r\n      status: \"Expired\",\r\n    },\r\n  ];\r\n\r\n  // edit client modal start\r\n\r\n  // end\r\n  const selectState = [\r\n    { label: \"Me\", value: \"Me\" },\r\n    { label: \"Max Well\", value: \"Max Well\" },\r\n    { label: \"Imran Ameen\", value: \"Imran Ameen\" },\r\n    { label: \"Raza Ali\", value: \"Raza Ali\" },\r\n  ];\r\n  const selectStaus = [\r\n    { label: \"Every 3 Months\", value: \"Every 3 Months\" },\r\n    { label: \"Every 4 Months\", value: \"Every 4 Months\" },\r\n    { label: \"Every 5 Months\", value: \"Every 5 Months\" },\r\n    { label: \"Every 6 Months\", value: \"Every 6 Months\" },\r\n  ];\r\n\r\n  // Step 2: Add state for managing modal visibility\r\n\r\n  const [isLargeModalOpen, setIsLargeModalOpen] = useState(false);\r\n  const toggleLargeModal = () => {\r\n    setIsLargeModalOpen(!isLargeModalOpen);\r\n  };\r\n\r\n  // edit modal\r\n\r\n  const [repEdit, setrepEdit] = useState(false);\r\n\r\n  const repEditModal = (result) => {\r\n    setDefaultData_(result);\r\n    setrepEdit(!repEdit);\r\n  };\r\n\r\n  const [changeImage, setChangeImage] = useState(null);\r\n  const handleImage = (e) => {\r\n    const file = e.target.files[0];\r\n    const imageUrl = URL.createObjectURL(file);\r\n    setChangeImage(imageUrl);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex align-align-items-center justify-content-between mt-3 mb-3\">\r\n        <h5 className=\"head_title\"> Safety Equipments</h5>\r\n        <div className=\"d-flex align-items-center\">\r\n          <div>\r\n            <Button className=\"default_btn\" outline onClick={toggleLargeModal}>\r\n              Add Safety Equipment\r\n            </Button>\r\n\r\n            {/* add equipment modal */}\r\n            <Modal\r\n              isOpen={isLargeModalOpen}\r\n              toggle={toggleLargeModal}\r\n              size=\"lg\"\r\n            >\r\n              <ModalHeader toggle={toggleLargeModal}></ModalHeader>\r\n              <ModalBody>\r\n                <div className=\"icon_div_main mb-2\">\r\n                  <img className=\"icon_sizee\" src={safetyIcon} alt=\"\" />\r\n                </div>\r\n                <h5 className=\"modal_title\">Add Equipment</h5>\r\n                <span className=\"modal_subtitle\">\r\n                  Enter the correct details of the equipment which you want to\r\n                  add.\r\n                </span>\r\n\r\n                <Form className=\"d-flex flex-column p-1\">\r\n                  <Row>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        ID Number\r\n                      </Label>\r\n                      <Input\r\n                        onChange={(e) => setId_number(e.target.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"ID Number\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">Model</Label>\r\n                      <Input\r\n                        onChange={(e) => setModel(e.target.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"Modal\"\r\n                      />\r\n                    </Col>\r\n\r\n                    <Col className=\"mb-2\" lg=\"12\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Description\r\n                      </Label>\r\n                      <Input\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"Description\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Manufacture Date\r\n                      </Label>\r\n                      <Input\r\n                        onChange={(e) => setManuf_date(e.target.value)}\r\n                        type=\"date\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Expiry Date\r\n                      </Label>\r\n                      <Input\r\n                        onChange={(e) => setExpiry_date(e.target.value)}\r\n                        type=\"date\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">Owner</Label>\r\n                      <Select\r\n                        onChange={(selectedOption) =>\r\n                          setOwner_id(selectedOption.value)\r\n                        }\r\n                        isClearable={false}\r\n                        classNamePrefix=\"select\"\r\n                        options={selectState}\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Inspection Month\r\n                      </Label>\r\n                      <Select\r\n                        onChange={(selectedOption) =>\r\n                          setInspection_month(selectedOption.value)\r\n                        }\r\n                        isClearable={false}\r\n                        classNamePrefix=\"select\"\r\n                        options={selectStaus}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <div className=\"mx-auto\">\r\n                    <Button\r\n                      onClick={postData}\r\n                      type=\"submit\"\r\n                      className=\"mt-2 default_btn\"\r\n                    >\r\n                      Save Equipment\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              </ModalBody>\r\n            </Modal>\r\n\r\n            {/* DELET WITH API  */}\r\n\r\n            <Modal isOpen={isDeleteModalOpen}>\r\n              <ModalHeader>Delete Confirmation</ModalHeader>\r\n              <ModalBody>Are you sure you want to delete this item?</ModalBody>\r\n              <ModalFooter>\r\n                <Button\r\n                  color=\"danger\"\r\n                  onClick={() => handleDeleteConfirm(deleteItemId)}\r\n                >\r\n                  Yes\r\n                </Button>\r\n                <Button\r\n                  color=\"secondary\"\r\n                  onClick={() => setIsDeleteModalOpen(false)}\r\n                >\r\n                  No\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n\r\n            {/* edit modal equipment  */}\r\n\r\n            <Modal isOpen={repEdit} toggle={repEditModal} size=\"lg\">\r\n              <ModalHeader toggle={repEditModal}></ModalHeader>\r\n              <ModalBody>\r\n                <div className=\"icon_div_main mb-2\">\r\n                  <img className=\"icon_sizee\" src={safetyIcon} alt=\"\" />\r\n                </div>\r\n                <h5 className=\"modal_title\">Edit Equipment</h5>\r\n                <span className=\"modal_subtitle\">\r\n                  Enter the correct details of the equipment which you want to\r\n                  Edit.\r\n                </span>\r\n\r\n                <Form className=\"d-flex flex-column p-1\">\r\n                  <Row>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        ID Number\r\n                      </Label>\r\n                      <Input\r\n                        onChange={(e) => setId_number(e.target.value)}\r\n                        defaultValue={defaultData_?.id_number}\r\n                        type=\"text\"\r\n                        placeholder=\"ID Number\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">Model</Label>\r\n                      <Input\r\n                        onChange={(e) => setModel(e.target.value)}\r\n                        defaultValue={defaultData_?.model}\r\n                        type=\"text\"\r\n                        placeholder=\"Modal\"\r\n                      />\r\n                    </Col>\r\n\r\n                    <Col className=\"mb-2\" lg=\"12\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Description\r\n                      </Label>\r\n                      <Input\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                        defaultValue={defaultData_?.description}\r\n                        type=\"text\"\r\n                        placeholder=\"Description\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Manufacture Date\r\n                      </Label>\r\n                      <Input\r\n                        onChange={(e) => setManuf_date(e.target.value)}\r\n                        defaultValue={defaultData_?.manuf_date}\r\n                        type=\"date\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Expiry Date\r\n                      </Label>\r\n                      <Input\r\n                        onChange={(e) => setExpiry_date(e.target.value)}\r\n                        defaultValue={defaultData_?.expiry_date}\r\n                        type=\"date\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">Owner</Label>\r\n                      <Select\r\n                        onChange={(selectedOption) =>\r\n                          setOwner_id(selectedOption.value)\r\n                        }\r\n                        value={selectState.find(\r\n                          (option) => option.value === owner_id\r\n                        )}\r\n                        isClearable={false}\r\n                        classNamePrefix=\"select\"\r\n                        options={selectState}\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Inspection Month\r\n                      </Label>\r\n                      <Select\r\n                        onChange={(selectedOption) =>\r\n                          setInspection_month(selectedOption.value)\r\n                        }\r\n                        value={selectStaus.find(\r\n                          (option) => option.value === inspection_month\r\n                        )}\r\n                        isClearable={false}\r\n                        classNamePrefix=\"select\"\r\n                        options={selectStaus}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <div className=\"mx-auto\">\r\n                    <Button\r\n                      onClick={updateData}\r\n                      type=\"submit\"\r\n                      className=\"mt-2 default_btn\"\r\n                    >\r\n                      Save Equipment\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              </ModalBody>\r\n            </Modal>\r\n\r\n            {/* new inspection modal */}\r\n\r\n            <Modal isOpen={newInspection} toggle={newInspectionModal} size=\"lg\">\r\n              <ModalHeader toggle={newInspectionModal}></ModalHeader>\r\n              <ModalBody>\r\n                <div className=\"icon_div_main mb-2\">\r\n                  <img className=\"icon_sizee\" src={newInspec} alt=\"\" />\r\n                </div>\r\n                <h5 className=\"modal_title\">New Inspection</h5>\r\n                <span className=\"modal_subtitle\">\r\n                  Enter the correct details of the equipment which you want to\r\n                  inspect.\r\n                </span>\r\n\r\n                <Form className=\"d-flex flex-column p-1\">\r\n                  <Row>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Equipment ID\r\n                      </Label>\r\n                      <Input type=\"text\" placeholder=\"Equipment ID\" />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Tag Number\r\n                      </Label>\r\n                      <Input type=\"text\" placeholder=\"Tag Number\" />\r\n                    </Col>\r\n\r\n                    <Col className=\"mb-2\" lg=\"12\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">Notes</Label>\r\n                      <Input type=\"text\" placeholder=\"Notes\" />\r\n                    </Col>\r\n\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Condition\r\n                      </Label>\r\n                      <Select\r\n                        isClearable={false}\r\n                        classNamePrefix=\"select\"\r\n                        options={selectState}\r\n                      />\r\n                    </Col>\r\n\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Next Inspection\r\n                      </Label>\r\n                      <Input type=\"date\" />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Image Upload\r\n                      </Label>\r\n                      <input\r\n                        class=\"custom-file-input\"\r\n                        type=\"file\"\r\n                        onChange={handleImage}\r\n                      />\r\n                      {changeImage && (\r\n                        <div className=\"mt-2\">\r\n                          <img\r\n                            src={changeImage}\r\n                            alt=\"Selected\"\r\n                            style={{\r\n                              width: \"100px\",\r\n                              height: \"100px\",\r\n                              borderRadius: \"8px\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <div className=\"text-center\">\r\n                        <Button\r\n                          onClick={newInspectionModal}\r\n                          type=\"submit\"\r\n                          className=\"default_btn me-2\"\r\n                        >\r\n                          Create Inspection\r\n                        </Button>\r\n                        <Button type=\"submit\" className=\"default_btn2\">\r\n                          Cancel\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              </ModalBody>\r\n            </Modal>\r\n\r\n            {/* inspection log*/}\r\n\r\n            <Modal isOpen={inspectionLog} toggle={inspectionLogModal} size=\"lg\">\r\n              <ModalHeader toggle={inspectionLogModal}></ModalHeader>\r\n              <ModalBody>\r\n                <div className=\"icon_div_main mb-2\">\r\n                  <img className=\"icon_sizee\" src={newInspec} alt=\"\" />\r\n                </div>\r\n                <h5 className=\"modal_title\">Inspection Log</h5>\r\n                <span className=\"modal_subtitle\">\r\n                  B# A-23419 - S# SC752625 - Inspection Log\r\n                </span>\r\n\r\n                <div className=\"table_main p-1 mt-2\">\r\n                  <ClientDataTable columns={columnsC} data={dataC} />\r\n                </div>\r\n              </ModalBody>\r\n            </Modal>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Fragment>\r\n        <Nav tabs justified>\r\n          <NavItem>\r\n            <NavLink\r\n              className={activeTabSection1 === \"1\" ? \"active\" : \"\"}\r\n              onClick={() => {\r\n                toggleTabSection1(\"1\");\r\n              }}\r\n            >\r\n              Safety Equipment List\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink\r\n              className={activeTabSection1 === \"2\" ? \"active\" : \"\"}\r\n              onClick={() => {\r\n                toggleTabSection1(\"2\");\r\n              }}\r\n            >\r\n              Inspection In A Week\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink\r\n              className={activeTabSection1 === \"3\" ? \"active\" : \"\"}\r\n              onClick={() => {\r\n                toggleTabSection1(\"3\");\r\n              }}\r\n            >\r\n              Overdue Inspection List\r\n            </NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n        <TabContent className=\"py-50\" activeTab={activeTabSection1}>\r\n          <TabPane tabId=\"1\">\r\n            <div className=\"d-flex align-align-items-center justify-content-between mt-2\">\r\n              <h5 className=\"head_title\">Safety Equipment List</h5>\r\n              <input\r\n                type=\"search\"\r\n                style={{ width: \"fit-content\" }}\r\n                placeholder=\"Search\"\r\n                className=\"form-control\"\r\n              />\r\n            </div>\r\n            <div className=\"mt-1\">\r\n              <ClientDataTable columns={columns} data={data} />\r\n            </div>\r\n          </TabPane>\r\n          <TabPane tabId=\"2\">\r\n            <div className=\"d-flex align-align-items-center justify-content-between mt-2\">\r\n              <h5 className=\"head_title\">Inspection In A Week </h5>\r\n              <input\r\n                type=\"search\"\r\n                style={{ width: \"fit-content\" }}\r\n                placeholder=\"Search\"\r\n                className=\"form-control\"\r\n              />\r\n            </div>\r\n            <div className=\"mt-1\">\r\n              <ClientDataTable columns={columnsA} data={dataA} />\r\n            </div>\r\n          </TabPane>\r\n          <TabPane tabId=\"3\">\r\n            <div className=\"d-flex align-align-items-center justify-content-between mt-2\">\r\n              <h5 className=\"head_title\">Overdue Inspection List</h5>\r\n              <input\r\n                type=\"search\"\r\n                style={{ width: \"fit-content\" }}\r\n                placeholder=\"Search\"\r\n                className=\"form-control\"\r\n              />\r\n            </div>\r\n            <div className=\"mt-1\">\r\n              <ClientDataTable columns={columnsB} data={dataB} />\r\n            </div>\r\n          </TabPane>\r\n        </TabContent>\r\n\r\n        {/* secound tab start */}\r\n      </Fragment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SafetyEquipments;\r\n","D:\\Utecho\\Scaff-cert\\src\\Admin\\user\\Userpage.js",[],"D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Subscriptions.js",["3825","3826","3827","3828","3829","3830","3831","3832"],"import { React, useState, useEffect } from \"react\";\r\nimport \"@styles/react/apps/app-users.scss\";\r\nimport ClientDataTable from \"./table\";\r\nimport \"./table.css\";\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\";\r\n\r\nimport { Button } from \"reactstrap\";\r\nimport { Breadcrumb, Card, Col, Row, Spinner } from \"react-bootstrap\";\r\nimport Select from \"react-select\";\r\nimport active from \"../../Admin/assests/icons/active.png\";\r\nimport block from \"../../Admin/assests/icons/block.png\";\r\nimport check from \"../../Admin/assests/check.png\";\r\n\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n// for spinner\r\nimport Spinerr from \"../../views/components/spinners/SpinnerGrowing\";\r\n\r\nconst Subscriptions = () => {\r\n  let datas = [\r\n    {\r\n      srno: \"09\",\r\n      SubName: \"Basic Plan\",\r\n      SubRate: \"299.878 AUD\",\r\n      subPeriod: \"1 Year Plan\",\r\n      job_qty: \"20 Job\",\r\n      remaining_qty: \"5000.00\",\r\n      start_date: \"5000.00\",\r\n      end_date: \"5000.00\",\r\n      status: \"Active\",\r\n    },\r\n    // {\r\n    //   srno: \"09\",\r\n    //   SubName: \"Basic Plan\",\r\n    //   SubRate: \"299.878 AUD\",\r\n    //   subPeriod: \"1 Year Plan\",\r\n    //   job_qty: \"20 Job\",\r\n    //   remaining_qty: \"5000.00\",\r\n    //   start_date: \"5000.00\",\r\n    //   end_date: \"5000.00\",\r\n    //   status: \"Delete\",\r\n    // },\r\n  ];\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // show data start code\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  function getData() {\r\n    setIsLoading(true);\r\n    axios\r\n      .post(`${global.BASEURL}getRecords/adminsubscription`)\r\n      .then((res) => {\r\n        setData(res.data.data);\r\n        console.log(res.data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data: \", error);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false); // Hide spinner after data is fetched\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  // get admin subscription\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Sr.no\",\r\n      selector: (row) => row.srno,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Subscription name\",\r\n      selector: (row) => row.SubName,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Subscriptoin Rate\",\r\n      selector: (row) => row.SubRate,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n\r\n    {\r\n      name: \"Subscriptoin Period\",\r\n      selector: (row) => row.subPeriod,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Job Qty\",\r\n      selector: (row) => row.job_qty,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n\r\n    {\r\n      name: \"Remaining Job Qty\",\r\n      selector: (row) => row.remaining_qty,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Start Date\",\r\n      cell: (row) => row.start_date,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"End Date\",\r\n      cell: (row) => row.end_date,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      cell: (row) => (\r\n        <div className=\"d-flex align-items-center\">\r\n          {row.status === \"Active\" ? (\r\n            <>\r\n              <img\r\n                src={active}\r\n                alt=\"active\"\r\n                width=\"11\"\r\n                height=\"11\"\r\n                className=\"me-1\"\r\n              />\r\n              <span>{row.status}</span>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <img\r\n                src={block}\r\n                alt=\"block\"\r\n                width=\"11\"\r\n                height=\"11\"\r\n                className=\"me-1\"\r\n              />\r\n              <span>{row.status}</span>\r\n            </>\r\n          )}\r\n        </div>\r\n      ),\r\n      sortable: true,\r\n    },\r\n  ];\r\n\r\n  const [activeButton, setActiveButton] = useState(\"Monthly\");\r\n\r\n  const handleButtonClick = (buttonType) => {\r\n    setActiveButton(buttonType);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <>\r\n        <div className=\"d-flex align-align-items-center justify-content-between mt-3 mb-3\">\r\n          <h5 className=\"head_title\">Subscription</h5>\r\n          <Button className=\"default_btn\">Add Subscription</Button>\r\n        </div>\r\n        <div className=\"d-flex align-align-items-center justify-content-between mt-2\">\r\n          <h5 className=\"head_title\">List of Subscriptions</h5>\r\n          <input\r\n            type=\"search\"\r\n            placeholder=\"Search\"\r\n            className=\"form-control\"\r\n            style={{ width: \"fit-content\" }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"table_main p-1 mt-2 pb-3\">\r\n          <ClientDataTable columns={columns} data={datas} />\r\n        </div>\r\n        <div className=\"table_main p-1 mt-2 pb-2 d-flex align-items-center justify-content-center flex-column\">\r\n          <div className=\"mt-1 text-center\">\r\n            <h4 className=\"modal_title\">Subscriptions</h4>\r\n            <h5 className=\"modal_subtitle\">\r\n              Select the subscription of your choice that suits you best\r\n              according to your business requirements.\r\n            </h5>\r\n          </div>\r\n          <div className=\"mt-1\">\r\n            <Button\r\n              className={`togl_btn ${\r\n                activeButton === \"Monthly\" ? \"active\" : \"\"\r\n              }`}\r\n              onClick={() => handleButtonClick(\"Monthly\")}\r\n            >\r\n              Monthly\r\n            </Button>\r\n            <Button\r\n              className={`togl_btn ${\r\n                activeButton === \"Annually\" ? \"active\" : \"\"\r\n              }`}\r\n              onClick={() => handleButtonClick(\"Annually\")}\r\n            >\r\n              Annually\r\n            </Button>\r\n          </div>\r\n          <div className=\"mt-3\">\r\n            <Row className=\"g-0\">\r\n              {activeButton === \"Monthly\"\r\n                ? data.map((item, index) => {\r\n                    return (\r\n                      <Col\r\n                        className=\"mb-2\"\r\n                        xxl=\"3\"\r\n                        xl=\"4\"\r\n                        lg=\"6\"\r\n                        md=\"6\"\r\n                        sm=\"6\"\r\n                        key={index}\r\n                      >\r\n                        <div className=\"card fade_card h-100\">\r\n                          <div className=\"card-body\">\r\n                            <div className=\"d-flex align-items-center justify-content-between h-100 flex-column\">\r\n                              <div>\r\n                                <h5 className=\"text-center subs_con mt-3\">\r\n                                  {item.name}\r\n                                </h5>\r\n                                <div className=\"d-flex align-items-baseline justify-content-center\">\r\n                                  <h5 className=\"curncy_con\">$</h5>\r\n                                  <h5 className=\"cout_con\">\r\n                                    {item.month_rate}\r\n                                  </h5>\r\n                                  <h5 className=\"month_con\">/mo</h5>\r\n                                </div>\r\n                                <p className=\"subs_con text-center mt-2\">\r\n                                  {item.description}\r\n                                </p>\r\n                                <div className=\"mt-2\">\r\n                                  <ul\r\n                                    style={{\r\n                                      listStyle: \"none\",\r\n                                      paddingLeft: \"0px\",\r\n                                    }}\r\n                                  >\r\n                                    <li className=\"mb-1\">\r\n                                      <div className=\"d-flex\">\r\n                                        <div className=\"check_cir\">\r\n                                          <img\r\n                                            style={{\r\n                                              width: \"9px\",\r\n                                              height: \"9px\",\r\n                                              objectFit: \"contain\",\r\n                                            }}\r\n                                            src={check}\r\n                                            alt=\"\"\r\n                                          />\r\n                                        </div>\r\n                                        <h4 className=\"mb-0 subs_li ms-1\">\r\n                                          {item.features}\r\n                                        </h4>\r\n                                      </div>\r\n                                    </li>\r\n                                  </ul>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"d-flex align-items-center justify-content-center\">\r\n                                <Button className=\"subsBtn\">\r\n                                  UPGRADE SUBSCRIPTION\r\n                                </Button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </Col>\r\n                    );\r\n                  })\r\n                : activeButton === \"Annually\"\r\n                ? data.map((item, index) => {\r\n                    return (\r\n                      <Col\r\n                        className=\"mb-2\"\r\n                        xxl=\"3\"\r\n                        xl=\"4\"\r\n                        lg=\"6\"\r\n                        md=\"6\"\r\n                        sm=\"6\"\r\n                        key={index}\r\n                      >\r\n                        <div className=\"card fade_card h-100\">\r\n                          <div className=\"card-body\">\r\n                            <div className=\"d-flex align-items-center justify-content-between h-100 flex-column\">\r\n                              <div>\r\n                                <h5 className=\"text-center subs_con mt-3\">\r\n                                  {item.name}\r\n                                </h5>\r\n                                <div className=\"d-flex align-items-baseline justify-content-center\">\r\n                                  <h5 className=\"curncy_con\">$</h5>\r\n                                  <h5 className=\"cout_con\">{item.year_rate}</h5>\r\n                                  <h5 className=\"month_con\">/Yearly</h5>\r\n                                </div>\r\n                                <p className=\"subs_con text-center mt-2\">\r\n                                  {item.description}\r\n                                </p>\r\n                                <div className=\"mt-2\">\r\n                                  <ul\r\n                                    style={{\r\n                                      listStyle: \"none\",\r\n                                      paddingLeft: \"0px\",\r\n                                    }}\r\n                                  >\r\n                                    <li className=\"mb-1\">\r\n                                      <div className=\"d-flex\">\r\n                                        <div className=\"check_cir\">\r\n                                          <img\r\n                                            style={{\r\n                                              width: \"9px\",\r\n                                              height: \"9px\",\r\n                                              objectFit: \"contain\",\r\n                                            }}\r\n                                            src={check}\r\n                                            alt=\"\"\r\n                                          />\r\n                                        </div>\r\n                                        <h4 className=\"mb-0 subs_li ms-1\">\r\n                                          {item.features}\r\n                                        </h4>\r\n                                      </div>\r\n                                    </li>\r\n                                  </ul>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"d-flex align-items-center justify-content-center\">\r\n                                <Button className=\"subsBtn\">\r\n                                  UPGRADE SUBSCRIPTION\r\n                                </Button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </Col>\r\n                    );\r\n                  })\r\n                : null}\r\n            </Row>\r\n          </div>\r\n        </div>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Subscriptions;\r\n","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Payements.js",[],"D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Groups.js",["3833","3834"],"import \"@styles/react/apps/app-users.scss\";\r\nimport ClientDataTable from \"./table\";\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./table.css\";\r\nimport Select from \"react-select\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport active from \"../../Admin/assests/icons/active.png\";\r\nimport block from \"../../Admin/assests/icons/block.png\";\r\nimport group_icon from \"../../Admin/assests/side_icon/group_icon.png\";\r\n\r\nimport {\r\n  UncontrolledButtonDropdown,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Form,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\nimport { MoreHorizontal } from \"react-feather\";\r\n\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n// for spinner\r\nimport Spinerr from \"../../views/components/spinners/SpinnerGrowing\";\r\n\r\nconst GroupsPage = () => {\r\n  const [defaultData_, setDefaultData_] = useState({});\r\n\r\n  // states for update and insert data\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [rep_ids, setRep_ids] = useState(\"\");\r\n  const [status, setStatus] = useState(\"Active\");\r\n\r\n  useEffect(() => {\r\n    if (defaultData_) {\r\n      setName(defaultData_.name);\r\n      setRep_ids(defaultData_.rep_ids);\r\n      setStatus(defaultData_.status);\r\n    }\r\n  }, [defaultData_]);\r\n\r\n  // add data\r\n\r\n  const postData = (e) => {\r\n    e.preventDefault();\r\n    if (!name || !rep_ids || !status) {\r\n      toast.error(\"Please fill out all required fields.\");\r\n      return;\r\n    }\r\n    setName(\"\");\r\n    setRep_ids(\"\");\r\n    setStatus(\"\");\r\n\r\n    axios\r\n      .post(`${global.BASEURL}createRecord/groups`, {\r\n        name,\r\n        rep_ids,\r\n        status,\r\n      })\r\n      .then(() => {\r\n        toggleLargeModal();\r\n        getData();\r\n        toast.success(\"Data added successfully.\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error adding data: \", error);\r\n        toast.error(\"Failed to add data.\"); // Show error toast\r\n      });\r\n  };\r\n\r\n  // get data\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // show data start code\r\n  const [data, setData] = useState([]);\r\n  const [selectedOption, setSelectedOption] = useState(\"All\");\r\n  function getData() {\r\n    setIsLoading(true);\r\n    axios\r\n      .post(`${global.BASEURL}getRecords/groups`)\r\n      .then((res) => {\r\n        const data = res.data.data;\r\n        if (selectedOption === \"New User\") {\r\n          const last5Records = data.slice(0, 3); // Get the last 5 records\r\n          setData(last5Records);\r\n        } else {\r\n          const filteredData = data.filter(\r\n            (item) => item.status === selectedOption || selectedOption === \"All\"\r\n          );\r\n          setData(filteredData);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data: \", error);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false); // Hide spinner after data is fetched\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [selectedOption]);\r\n\r\n  // update data\r\n\r\n  const updateData = (e) => {\r\n    e.preventDefault();\r\n    const itemId = defaultData_?._id;\r\n    axios\r\n      .post(`${global.BASEURL}updateRecord/groups`, {\r\n        id: itemId,\r\n        name,\r\n        rep_ids,\r\n        status,\r\n      })\r\n      .then(() => {\r\n        groupEditModal();\r\n        getData();\r\n        toast.success(\"Data updated successfully.\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error updating client:\", error);\r\n      });\r\n  };\r\n\r\n  // get rep from api\r\n\r\n  const [repData, setRepData] = useState([]);\r\n  // Function to fetch repData\r\n  const fetchRepData = async () => {\r\n    try {\r\n      const response = await axios.post(`${global.BASEURL}getRecords/rep`);\r\n      const data = response.data.data.map((element) => ({\r\n        value: element.name,\r\n        label: element.name,\r\n      }));\r\n      return data;\r\n    } catch (error) {\r\n      console.error(\"Error fetching data: \", error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const data = await fetchRepData();\r\n      setRepData(data);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // end get rep\r\n  // delet\r\n\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [deleteItemId, setDeleteItemId] = useState(null);\r\n\r\n  const handleDelete = (id) => {\r\n    setDeleteItemId(id);\r\n    setIsDeleteModalOpen(true);\r\n  };\r\n\r\n  const handleDeleteConfirm = () => {\r\n    // Close the delete confirmation modal\r\n    setIsDeleteModalOpen(false);\r\n\r\n    // Delete the item\r\n    if (deleteItemId) {\r\n      axios\r\n        .post(`${global.BASEURL}deleteRecord/groups`, {\r\n          id: deleteItemId,\r\n        })\r\n        .then(() => {\r\n          getData();\r\n          toast.success(\"Data deleted successfully.\"); // Show success toast\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error deleting data:\", error);\r\n          toast.error(\"Failed to delete data.\"); // Show error toast\r\n        });\r\n    }\r\n  };\r\n\r\n  let counter = 0;\r\n  const columns = [\r\n    {\r\n      name: \"Sr.no\",\r\n      selector: (row) => ++counter,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Group Name\",\r\n      selector: (row) => row.name,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Assigned Reps\",\r\n      selector: (row) => row.rep_ids,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n\r\n    {\r\n      name: \"Status\",\r\n      cell: (row) => (\r\n        <div className=\"d-flex align-items-center\">\r\n          {row.status === \"Active\" ? (\r\n            <>\r\n              <img\r\n                src={active}\r\n                alt=\"active\"\r\n                width=\"11\"\r\n                height=\"11\"\r\n                className=\"me-1\"\r\n              />\r\n              <span>{row.status}</span>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <img\r\n                src={block}\r\n                alt=\"block\"\r\n                width=\"11\"\r\n                height=\"11\"\r\n                className=\"me-1\"\r\n              />\r\n              <span>{row.status}</span>\r\n            </>\r\n          )}\r\n        </div>\r\n      ),\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      allowOverflow: true,\r\n      maxWidth: \"7rem\",\r\n      minWidth: \"2rem\",\r\n      cell: (row) => {\r\n        // modal edit\r\n\r\n        return (\r\n          <div className=\"d-flex justify-content-end w-100\">\r\n            <UncontrolledDropdown className=\"\">\r\n              <DropdownToggle className=\"pe-1 \" tag=\"span\">\r\n                <MoreHorizontal size={15} />\r\n              </DropdownToggle>\r\n              <DropdownMenu end>\r\n                <DropdownItem>\r\n                  <div\r\n                    onClick={() => groupEditModal(row)}\r\n                    outline\r\n                    // onClick={toggleLargeModaledit}\r\n                    className=\"btn w-100 btn-white p-0 m-0\"\r\n                  >\r\n                    <span className=\"align-middle ms-50\">Edit</span>\r\n                  </div>\r\n                </DropdownItem>\r\n\r\n                <DropdownItem>\r\n                  <div\r\n                    onClick={() => handleDelete(row._id)}\r\n                    className=\"btn w-100 btn-white p-0 m-0\"\r\n                  >\r\n                    <span className=\"align-middle ms-50\">Delete</span>\r\n                  </div>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  // edit client modal start\r\n\r\n  // end\r\n  const statuss = [\r\n    { label: \"Active\", value: \"Active\" },\r\n    { label: \"Un Active\", value: \"Un Active\" },\r\n  ];\r\n\r\n  // Step 2: Add state for managing modal visibility\r\n  const [editGroup, seteditGroup] = useState(false);\r\n\r\n  const groupEditModal = (result) => {\r\n    setDefaultData_(result);\r\n    seteditGroup(!editGroup);\r\n  };\r\n\r\n  const [isLargeModalOpen, setIsLargeModalOpen] = useState(false);\r\n\r\n  const toggleLargeModal = () => {\r\n    setIsLargeModalOpen(!isLargeModalOpen);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n\r\n      <div className=\"d-flex align-align-items-center justify-content-between mt-3 mb-3\">\r\n        <h5 className=\"head_title\">\r\n          Employees / <span style={{ fontSize: \"20px\" }}>Groups</span>\r\n        </h5>\r\n        <div className=\"d-flex align-items-center\">\r\n          <div>\r\n            <Button className=\"default_btn\" outline onClick={toggleLargeModal}>\r\n              Add Groups\r\n            </Button>\r\n\r\n            {/* add client modal */}\r\n            <Modal\r\n              isOpen={isLargeModalOpen}\r\n              toggle={toggleLargeModal} // Use the correct toggle function for the large modal\r\n              size=\"lg\"\r\n            >\r\n              <ModalHeader\r\n                toggle={toggleLargeModal} // Use the correct toggle function for the large modal\r\n              ></ModalHeader>\r\n              <ModalBody>\r\n                <div className=\"icon_div_main mb-2\">\r\n                  <img className=\"icon_sizee\" src={group_icon} alt=\"\" />\r\n                </div>\r\n                <h5 className=\"modal_title\">Add New Rep</h5>\r\n                <span className=\"modal_subtitle\">\r\n                  Enter the correct details of the rep which you want to add.\r\n                </span>\r\n\r\n                <Form className=\"d-flex flex-column p-1\">\r\n                  <Row>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Group Name\r\n                      </Label>\r\n                      <Input\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"Name\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Row>\r\n                        <Col lg=\"6\" md=\"12\" className=\"mb-2\">\r\n                          <Label className=\"value_font input_label\">\r\n                            Assign Rep\r\n                          </Label>\r\n                          <Select\r\n                            onChange={(selectedOption) => {\r\n                              setRep_ids(\r\n                                selectedOption ? selectedOption.value : null\r\n                              );\r\n                            }}\r\n                            value={repData.find(\r\n                              (option) => option.value === rep_ids\r\n                            )}\r\n                            isClearable={false}\r\n                            classNamePrefix=\"select\"\r\n                            options={repData}\r\n                          />\r\n                        </Col>\r\n                        <Col lg=\"6\" md=\"12\" className=\"mb-2\">\r\n                          <Label className=\"value_font input_label\">\r\n                            Status\r\n                          </Label>\r\n                          <Select\r\n                            onChange={(selectedOption) =>\r\n                              setStatus(selectedOption.value)\r\n                            }\r\n                            isClearable={false}\r\n                            classNamePrefix=\"select\"\r\n                            options={statuss}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                  <div className=\"mx-auto\">\r\n                    <Button\r\n                      onClick={postData}\r\n                      type=\"submit\"\r\n                      className=\"mt-2 default_btn\"\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              </ModalBody>\r\n            </Modal>\r\n\r\n            {/* edit modal */}\r\n            <Modal isOpen={editGroup} toggle={groupEditModal} size=\"lg\">\r\n              <ModalHeader toggle={groupEditModal}></ModalHeader>\r\n              <ModalBody>\r\n                <div className=\"icon_div_main mb-2\">\r\n                  <img className=\"icon_sizee\" src={group_icon} alt=\"\" />\r\n                </div>\r\n                <h5 className=\"modal_title\">Edit New Rep</h5>\r\n                <span className=\"modal_subtitle\">\r\n                  Enter the correct details of the rep which you want to edit.\r\n                </span>\r\n\r\n                <Form className=\"d-flex flex-column p-1\">\r\n                  <Row>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Group Name\r\n                      </Label>\r\n                      <Input\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        defaultValue={defaultData_?.name}\r\n                        type=\"text\"\r\n                        placeholder=\"Name\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Row>\r\n                        <Col lg=\"6\" md=\"12\" className=\"mb-2\">\r\n                          <Label className=\"value_font input_label\">\r\n                            Assign Rep\r\n                          </Label>\r\n                          <Select\r\n                            onChange={(selectedOption) => {\r\n                              setRep_ids(\r\n                                selectedOption ? selectedOption.value : null\r\n                              );\r\n                            }}\r\n                            value={repData.find(\r\n                              (option) => option.value === rep_ids\r\n                            )}\r\n                            isClearable={false}\r\n                            classNamePrefix=\"select\"\r\n                            options={repData}\r\n                          />\r\n                        </Col>\r\n                        <Col lg=\"6\" md=\"12\" className=\"mb-2\">\r\n                          <Label className=\"value_font input_label\">\r\n                            Status\r\n                          </Label>\r\n                          <Select\r\n                            onChange={(selectedOption) =>\r\n                              setStatus(selectedOption.value)\r\n                            }\r\n                            value={statuss.find(\r\n                              (option) => option.value === status\r\n                            )}\r\n                            isClearable={false}\r\n                            classNamePrefix=\"select\"\r\n                            options={statuss}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                  <div className=\"mx-auto\">\r\n                    <Button\r\n                      onClick={updateData}\r\n                      type=\"submit\"\r\n                      className=\"mt-2 default_btn\"\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              </ModalBody>\r\n            </Modal>\r\n\r\n            <Modal isOpen={isDeleteModalOpen}>\r\n              <ModalHeader>Delete Confirmation</ModalHeader>\r\n              <ModalBody>Are you sure you want to delete this item?</ModalBody>\r\n              <ModalFooter>\r\n                <Button\r\n                  color=\"danger\"\r\n                  onClick={() => handleDeleteConfirm(deleteItemId)}\r\n                >\r\n                  Yes\r\n                </Button>\r\n                <Button\r\n                  color=\"secondary\"\r\n                  onClick={() => setIsDeleteModalOpen(false)}\r\n                >\r\n                  No\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          </div>\r\n          <div className=\"ms-2\">\r\n            <UncontrolledButtonDropdown>\r\n              <DropdownToggle className=\"filter_btn\">\r\n                <img className=\"filter_img\" src=\"./icons/filter_icon.png\" />\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem\r\n                  tag=\"a\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    setSelectedOption(\"All\");\r\n                  }}\r\n                >\r\n                  All\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  tag=\"a\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    setSelectedOption(\"New User\");\r\n                  }}\r\n                >\r\n                  New User\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  tag=\"a\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    setSelectedOption(\"Active\");\r\n                  }}\r\n                >\r\n                  Active User\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  tag=\"a\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    setSelectedOption(\"Un Active\");\r\n                  }}\r\n                >\r\n                  Un Active\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledButtonDropdown>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* table satar */}\r\n      <div>\r\n        {isLoading ? (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: \"100%\",\r\n            }}\r\n          >\r\n            <Spinerr />\r\n          </div>\r\n        ) : data.length === 0 ? (\r\n          <p>There is no data to show.</p>\r\n        ) : (\r\n          <ClientDataTable columns={columns} data={data} />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GroupsPage;\r\n","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Reps.js",["3835"],"import \"@styles/react/apps/app-users.scss\";\r\nimport ClientDataTable from \"./table\";\r\n// import './client.css';\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./table.css\";\r\nimport Select from \"react-select\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport active from \"../../Admin/assests/icons/active.png\";\r\nimport block from \"../../Admin/assests/icons/block.png\";\r\nimport addReps from \"../../Admin/assests/add_new_rep.svg\";\r\nimport {\r\n  UncontrolledButtonDropdown,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Form,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\nimport { MoreHorizontal } from \"react-feather\";\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n// for spinner\r\nimport Spinerr from \"../../views/components/spinners/SpinnerGrowing\";\r\n\r\nimport countriesData from \"./countries.json\";\r\n\r\nconst RepsPage = () => {\r\n\r\n  const [defaultData_, setDefaultData_] = useState(\"\");\r\n  // states for update and insert data\r\n\r\n  const [timezone, setTimezone] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n  const [zipcode, setZipcode] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [branch, setBranch] = useState(\"\");\r\n  const [priviliges_inspection, setPriviliges_inspection] = useState(\"\");\r\n  const [priviliges_delivery, setPriviliges_delivery] = useState(\"\");\r\n  const [priviliges_equipment, setPriviliges_equipment] = useState(\"\");\r\n  const [status, setStatus] = useState(\"Active\");\r\n\r\n  useEffect(() => {\r\n    if (defaultData_) {\r\n      setTimezone(defaultData_.timezone);\r\n      setName(defaultData_.name);\r\n      setEmail(defaultData_.email);\r\n      setPassword(defaultData_.password);\r\n      setAddress(defaultData_.address);\r\n      setPhone(defaultData_.phone);\r\n      setCity(defaultData_.city);\r\n      setState(defaultData_.state);\r\n      setZipcode(defaultData_.zipcode);\r\n      setCountry(defaultData_.country);\r\n      setBranch(defaultData_.branch);\r\n      setPriviliges_inspection(defaultData_.priviliges_inspection);\r\n      setPriviliges_delivery(defaultData_.priviliges_delivery);\r\n      setPriviliges_equipment(defaultData_.priviliges_equipment);\r\n      setStatus(defaultData_.status);\r\n    }\r\n  }, [defaultData_]);\r\n\r\n  // add data\r\n\r\n  const postData = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      !timezone ||\r\n      !name ||\r\n      !email ||\r\n      !password ||\r\n      !address ||\r\n      !phone ||\r\n      !city ||\r\n      !state ||\r\n      !zipcode ||\r\n      !country ||\r\n      !branch ||\r\n      !priviliges_inspection ||\r\n      !priviliges_delivery ||\r\n      !priviliges_equipment\r\n    ) {\r\n      toast.error(\"Please fill out all required fields.\");\r\n      return;\r\n    }\r\n    setTimezone(\"\");\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setAddress(\"\");\r\n    setPhone(\"\");\r\n    setCity(\"\");\r\n    setState(\"\");\r\n    setZipcode(\"\");\r\n    setCountry(\"\");\r\n    setBranch(\"\");\r\n    setPriviliges_inspection(\"\");\r\n    setPriviliges_delivery(\"\");\r\n    setPriviliges_equipment(\"\");\r\n    // setStatus(\"\");\r\n\r\n    axios\r\n      .post(`${global.BASEURL}createRecord/rep`, {\r\n        timezone,\r\n        name,\r\n        email,\r\n        password,\r\n        address,\r\n        phone,\r\n        city,\r\n        state,\r\n        zipcode,\r\n        country,\r\n        branch,\r\n        priviliges_inspection,\r\n        priviliges_delivery,\r\n        priviliges_equipment,\r\n        status,\r\n      })\r\n      .then(() => {\r\n        toggleLargeModal();\r\n        getData();\r\n        toast.success(\"Data added successfully.\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error adding data: \", error);\r\n        toast.error(\"Failed to add data.\"); // Show error toast\r\n      });\r\n  };\r\n\r\n  // get data\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // show data start code\r\n  const [data, setData] = useState([]);\r\n\r\n  function getData() {\r\n    setIsLoading(true);\r\n    axios\r\n      .post(`${global.BASEURL}getRecords/rep`)\r\n      .then((res) => {\r\n        setData(res.data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data: \", error);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false); // Hide spinner after data is fetched\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  // update data\r\n\r\n  const updateData = (e) => {\r\n    e.preventDefault();\r\n    const itemId = defaultData_?._id;\r\n    axios\r\n      .post(`${global.BASEURL}updateRecord/rep`, {\r\n        id: itemId,\r\n        name,\r\n        email,\r\n        timezone,\r\n        password,\r\n        address,\r\n        phone,\r\n        city,\r\n        state,\r\n        zipcode,\r\n        country,\r\n        branch,\r\n        priviliges_inspection,\r\n        priviliges_delivery,\r\n        priviliges_equipment,\r\n        status,\r\n      })\r\n      .then(() => {\r\n        repEditModal();\r\n        getData();\r\n        toast.success(\"Data updated successfully.\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error updating client:\", error);\r\n      });\r\n  };\r\n\r\n  // datel data\r\n\r\n  const [branchData, setBranchData] = useState([]);\r\n\r\n  function branchDataGet() {\r\n    axios\r\n      .post(`${global.BASEURL}getBranches`)\r\n      .then((res) => {\r\n        // setBranchData(res.data.data);\r\n        const data = res.data.data;\r\n        const arr = [];\r\n        for (let index = 0; index < data.length; index++) {\r\n          const element = data[index];\r\n          const obj = { value: element.name, label: element.name };\r\n          arr.push(obj);\r\n        }\r\n        setBranchData(arr);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data: \", error);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    branchDataGet();\r\n  }, []);\r\n\r\n  //\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [deleteItemId, setDeleteItemId] = useState(null);\r\n\r\n  const handleDelete = (id) => {\r\n    setDeleteItemId(id);\r\n    setIsDeleteModalOpen(true);\r\n  };\r\n\r\n  const handleDeleteConfirm = () => {\r\n    // Close the delete confirmation modal\r\n    setIsDeleteModalOpen(false);\r\n\r\n    // Delete the item\r\n    if (deleteItemId) {\r\n      axios\r\n        .post(`${global.BASEURL}deleteRecord/rep`, {\r\n          id: deleteItemId,\r\n        })\r\n        .then(() => {\r\n          getData();\r\n          toast.success(\"Data deleted successfully.\"); // Show success toast\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error deleting data:\", error);\r\n          toast.error(\"Failed to delete data.\"); // Show error toast\r\n        });\r\n    }\r\n  };\r\n\r\n  // data render\r\n  let counter = 0;\r\n  const columns = [\r\n    {\r\n      name: \"Sr.no\",\r\n      selector: (row) => ++counter,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: (row) => row.name,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Email\",\r\n      selector: (row) => row.email,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Phone\",\r\n      selector: (row) => row.phone,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Address\",\r\n      selector: (row) => row.address,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"State\",\r\n      selector: (row) => row.state,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      cell: (row) => (\r\n        <div className=\"d-flex align-items-center\">\r\n          {row.status === \"Active\" ? (\r\n            <>\r\n              <img\r\n                src={active}\r\n                alt=\"active\"\r\n                width=\"11\"\r\n                height=\"11\"\r\n                className=\"me-1\"\r\n              />\r\n              <span>{row.status}</span>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <img\r\n                src={block}\r\n                alt=\"block\"\r\n                width=\"11\"\r\n                height=\"11\"\r\n                className=\"me-1\"\r\n              />\r\n              <span>{row.status}</span>\r\n            </>\r\n          )}\r\n        </div>\r\n      ),\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      allowOverflow: true,\r\n      maxWidth: \"7rem\",\r\n      minWidth: \"2rem\",\r\n      cell: (row) => {\r\n        // modal edit\r\n\r\n        return (\r\n          <div className=\"d-flex justify-content-end w-100\">\r\n            <UncontrolledDropdown className=\"\">\r\n              <DropdownToggle className=\"pe-1 \" tag=\"span\">\r\n                <MoreHorizontal size={15} />\r\n              </DropdownToggle>\r\n              <DropdownMenu end>\r\n                <DropdownItem>\r\n                  <div\r\n                    onClick={() => repEditModal(row)}\r\n                    \r\n                    className=\"btn w-100 btn-white p-0 m-0\"\r\n                  >\r\n                    <span className=\"align-middle ms-50\">Edit</span>\r\n                  </div>\r\n                </DropdownItem>\r\n\r\n                <DropdownItem>\r\n                  <div\r\n                    onClick={() => handleDelete(row._id)}\r\n                    className=\"btn w-100 btn-white p-0 m-0\"\r\n                  >\r\n                    <span className=\"align-middle ms-50\">Delete</span>\r\n                  </div>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  // edit client modal start\r\n\r\n  // end\r\n  const timeZone = [\r\n    { label: \"Australian Western Standard Time (Perth)\", value: \"Perth\" },\r\n    {\r\n      label: \"Australian Central Western Standard Time (Eucla)\",\r\n      value: \"Eucla\",\r\n    },\r\n    { label: \"Australian Central Standard Time(Adelaide)\", value: \"Adelaide\" },\r\n    { label: \"Australian Eastern Standard Time(Sydney)\", value: \"Sydney\" },\r\n  ];\r\n\r\n  const countryOptions = countriesData.map((country) => ({\r\n    label: country.name,\r\n    value: country.name,\r\n  }));\r\n\r\n  const inspections = [\r\n    { label: \"Active\", value: \"Active\" },\r\n    { label: \"Deactive\", value: \"Deactive\" },\r\n  ];\r\n  const equipments = [\r\n    { label: \"Active\", value: \"Active\" },\r\n    { label: \"Deactive\", value: \"Deactive\" },\r\n  ];\r\n  const deliverys = [\r\n    { label: \"Active\", value: \"Active\" },\r\n    { label: \"Deactive\", value: \"Deactive\" },\r\n  ];\r\n\r\n  // Step 2: Add state for managing modal visibility\r\n  const [repEdit, setrepEdit] = useState(false);\r\n\r\n  const repEditModal = (result) => {\r\n    setDefaultData_(result);\r\n    setrepEdit(!repEdit);\r\n  };\r\n\r\n  const [isLargeModalOpen, setIsLargeModalOpen] = useState(false);\r\n\r\n  const toggleLargeModal = () => {\r\n    setIsLargeModalOpen(!isLargeModalOpen);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      <div className=\"d-flex align-align-items-center justify-content-between mt-3 mb-3\">\r\n        <h5 className=\"head_title\">\r\n          Employees <span>Reps</span>\r\n        </h5>\r\n        <div className=\"d-flex align-items-center\">\r\n          <div>\r\n            <Button className=\"default_btn\" outline onClick={toggleLargeModal}>\r\n              Add New Rep\r\n            </Button>\r\n\r\n            {/* add client modal */}\r\n            <Modal\r\n              isOpen={isLargeModalOpen}\r\n              toggle={toggleLargeModal} // Use the correct toggle function for the large modal\r\n              size=\"lg\"\r\n            >\r\n              <ModalHeader\r\n                toggle={toggleLargeModal} // Use the correct toggle function for the large modal\r\n              ></ModalHeader>\r\n              <ModalBody>\r\n                <div className=\"icon_div_main mb-2\">\r\n                  <img\r\n                    style={{\r\n                      width: \"35px\",\r\n                      height: \"35px\",\r\n                    }}\r\n                    src={addReps}\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <h5 className=\"modal_title\">Add New Rep</h5>\r\n                <span className=\"modal_subtitle\">\r\n                  Enter the correct details of the rep which you want to add.\r\n                </span>\r\n\r\n                <Form className=\"d-flex flex-column p-1\">\r\n                  <Row>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Select Your Time Zone\r\n                      </Label>\r\n                      <Select\r\n                        onChange={(selectedOption) =>\r\n                          setTimezone(selectedOption.value)\r\n                        }\r\n                        isClearable={false}\r\n                        classNamePrefix=\"select\"\r\n                        options={timeZone}\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">Name</Label>\r\n                      <Input\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"Name\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">Email</Label>\r\n                      <Input\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        type=\"email\"\r\n                        placeholder=\"Email\"\r\n                      />\r\n                    </Col>\r\n\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">Password</Label>\r\n                      <Input\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">Address</Label>\r\n                      <Input\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"Address\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Row>\r\n                        <Col lg=\"6\" md=\"12\" className=\"mb-2\">\r\n                          <Label className=\"value_font input_label\">\r\n                            Phone\r\n                          </Label>\r\n                          <Input\r\n                            onChange={(e) => setPhone(e.target.value)}\r\n                            type=\"tel\"\r\n                            placeholder=\"Phone\"\r\n                          />\r\n                        </Col>\r\n                        <Col lg=\"6\" md=\"12\" className=\"mb-2\">\r\n                          <Label className=\"value_font input_label\">City</Label>\r\n                          <Input\r\n                            onChange={(e) => setCity(e.target.value)}\r\n                            type=\"text\"\r\n                            placeholder=\"City\"\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Row>\r\n                        <Col lg=\"6\" md=\"12\" className=\"mb-2\">\r\n                          <Label className=\"value_font input_label\">\r\n                            State\r\n                          </Label>\r\n                          <Input\r\n                            onChange={(e) => setState(e.target.value)}\r\n                            type=\"text\"\r\n                            placeholder=\"State\"\r\n                          />\r\n                        </Col>\r\n                        <Col lg=\"6\" md=\"12\" className=\"mb-2\">\r\n                          <Label className=\"value_font input_label\">\r\n                            Zip Code\r\n                          </Label>\r\n                          <Input\r\n                            onChange={(e) => setZipcode(e.target.value)}\r\n                            type=\"number\"\r\n                            placeholder=\"Zip Code\"\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Row>\r\n                        <Col lg=\"6\" md=\"12\" className=\"mb-2\">\r\n                          <Label className=\"value_font input_label\">\r\n                            Country\r\n                          </Label>\r\n                          <Select\r\n                            onChange={(selectedOption) =>\r\n                              setCountry(selectedOption.value)\r\n                            }\r\n                            isClearable={false}\r\n                            classNamePrefix=\"select\"\r\n                            options={countryOptions}\r\n                          />\r\n                        </Col>\r\n                        <Col lg=\"6\" md=\"12\" className=\"mb-2\">\r\n                          <Label className=\"value_font input_label\">\r\n                            Branch\r\n                          </Label>\r\n                          <Select\r\n                            onChange={(selectedOption) => {\r\n                              setBranch(selectedOption.value);\r\n                            }}\r\n                            isClearable={false}\r\n                            classNamePrefix=\"select\"\r\n                            options={branchData}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Privileges to Inspection\r\n                      </Label>\r\n                      <Select\r\n                        onChange={(selectedOption) =>\r\n                          setPriviliges_inspection(selectedOption.value)\r\n                        }\r\n                        isClearable={false}\r\n                        classNamePrefix=\"select\"\r\n                        options={inspections}\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Privileges to Delivery/Return\r\n                      </Label>\r\n                      <Select\r\n                        onChange={(selectedOption) =>\r\n                          setPriviliges_delivery(selectedOption.value)\r\n                        }\r\n                        isClearable={false}\r\n                        classNamePrefix=\"select\"\r\n                        options={deliverys}\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Privileges to Equipment\r\n                      </Label>\r\n                      <Select\r\n                        onChange={(selectedOption) =>\r\n                          setPriviliges_equipment(selectedOption.value)\r\n                        }\r\n                        isClearable={false}\r\n                        classNamePrefix=\"select\"\r\n                        options={equipments}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <div className=\"mx-auto\">\r\n                    <Button\r\n                      onClick={postData}\r\n                      type=\"submit\"\r\n                      className=\"mt-2 default_btn\"\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              </ModalBody>\r\n            </Modal>\r\n\r\n            {/* edit modal */}\r\n            <Modal\r\n              isOpen={repEdit}\r\n              toggle={repEditModal} // Use the correct toggle function for the large modal\r\n              size=\"lg\"\r\n            >\r\n              <ModalHeader\r\n                toggle={repEditModal} // Use the correct toggle function for the large modal\r\n              ></ModalHeader>\r\n              <ModalBody>\r\n                <div className=\"icon_div_main mb-2\">\r\n                  <img\r\n                    style={{\r\n                      width: \"35px\",\r\n                      height: \"35px\",\r\n                    }}\r\n                    src={addReps}\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <h5 className=\"modal_title\">Edit New Rep</h5>\r\n                <span className=\"modal_subtitle\">\r\n                  Enter the correct details of the rep which you want to edit.\r\n                </span>\r\n\r\n                <Form className=\"d-flex flex-column p-1\">\r\n                  <Row>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Select Your Time Zone\r\n                      </Label>\r\n                      <Select\r\n                        onChange={(selectedOption) =>\r\n                          setTimezone(selectedOption.value)\r\n                        }\r\n                        value={timeZone.find(\r\n                          (option) => option.value === timezone\r\n                        )}\r\n                        isClearable={false}\r\n                        classNamePrefix=\"select\"\r\n                        options={timeZone}\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">Name</Label>\r\n                      <Input\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        defaultValue={defaultData_?.name}\r\n                        type=\"text\"\r\n                        placeholder=\"Name\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">Email</Label>\r\n                      <Input\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        defaultValue={defaultData_?.email}\r\n                        type=\"email\"\r\n                        placeholder=\"Email\"\r\n                      />\r\n                    </Col>\r\n\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">Password</Label>\r\n                      <Input\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        defaultValue={defaultData_?.password}\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">Address</Label>\r\n                      <Input\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                        defaultValue={defaultData_?.address}\r\n                        type=\"text\"\r\n                        placeholder=\"Address\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Row>\r\n                        <Col lg=\"6\" md=\"12\" className=\"mb-2\">\r\n                          <Label className=\"value_font input_label\">\r\n                            Phone\r\n                          </Label>\r\n                          <Input\r\n                            onChange={(e) => setPhone(e.target.value)}\r\n                            defaultValue={defaultData_?.phone}\r\n                            type=\"tel\"\r\n                            placeholder=\"Phone\"\r\n                          />\r\n                        </Col>\r\n                        <Col lg=\"6\" md=\"12\" className=\"mb-2\">\r\n                          <Label className=\"value_font input_label\">City</Label>\r\n                          <Input\r\n                            onChange={(e) => setCity(e.target.value)}\r\n                            defaultValue={defaultData_?.city}\r\n                            type=\"text\"\r\n                            placeholder=\"City\"\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Row>\r\n                        <Col lg=\"6\" md=\"12\" className=\"mb-2\">\r\n                          <Label className=\"value_font input_label\">\r\n                            State\r\n                          </Label>\r\n                          <Input\r\n                            onChange={(e) => setState(e.target.value)}\r\n                            defaultValue={defaultData_?.state}\r\n                            type=\"text\"\r\n                            placeholder=\"State\"\r\n                          />\r\n                        </Col>\r\n                        <Col lg=\"6\" md=\"12\" className=\"mb-2\">\r\n                          <Label className=\"value_font input_label\">\r\n                            Zip Code\r\n                          </Label>\r\n                          <Input\r\n                            onChange={(e) => setZipcode(e.target.value)}\r\n                            defaultValue={defaultData_?.zipcode}\r\n                            type=\"number\"\r\n                            placeholder=\"Zip Code\"\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Row>\r\n                        <Col lg=\"6\" md=\"12\" className=\"mb-2\">\r\n                          <Label className=\"value_font input_label\">\r\n                            Country\r\n                          </Label>\r\n                          <Select\r\n                            onChange={(selectedOption) =>\r\n                              setCountry(selectedOption.value)\r\n                            }\r\n                            value={countryOptions.find(\r\n                              (option) => option.value === country\r\n                            )}\r\n                            isClearable={false}\r\n                            classNamePrefix=\"select\"\r\n                            options={countryOptions}\r\n                          />\r\n                        </Col>\r\n                        <Col lg=\"6\" md=\"12\" className=\"mb-2\">\r\n                          <Label className=\"value_font input_label\">\r\n                            Branch\r\n                          </Label>\r\n                          <Select\r\n                            onChange={(selectedOption) =>\r\n                              setBranch(selectedOption.value)\r\n                            }\r\n                            value={branchData.find(\r\n                              (option) => option.label === branch\r\n                            )}\r\n                            isClearable={false}\r\n                            classNamePrefix=\"select\"\r\n                            options={branchData}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Privileges to Inspection\r\n                      </Label>\r\n                      <Select\r\n                        onChange={(selectedOption) =>\r\n                          setPriviliges_inspection(selectedOption.value)\r\n                        }\r\n                        value={inspections.find(\r\n                          (option) => option.value === priviliges_inspection\r\n                        )}\r\n                        isClearable={false}\r\n                        classNamePrefix=\"select\"\r\n                        options={inspections}\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Privileges to Delivery/Return\r\n                      </Label>\r\n                      <Select\r\n                        onChange={(selectedOption) =>\r\n                          setPriviliges_delivery(selectedOption.value)\r\n                        }\r\n                        value={deliverys.find(\r\n                          (option) => option.value === priviliges_delivery\r\n                        )}\r\n                        isClearable={false}\r\n                        classNamePrefix=\"select\"\r\n                        options={deliverys}\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Privileges to Equipment\r\n                      </Label>\r\n                      <Select\r\n                        onChange={(selectedOption) =>\r\n                          setPriviliges_equipment(selectedOption.value)\r\n                        }\r\n                        value={equipments.find(\r\n                          (option) => option.value === priviliges_equipment\r\n                        )}\r\n                        isClearable={false}\r\n                        classNamePrefix=\"select\"\r\n                        options={equipments}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <div className=\"mx-auto\">\r\n                    <Button\r\n                      onClick={updateData}\r\n                      type=\"submit\"\r\n                      className=\"mt-2 default_btn\"\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              </ModalBody>\r\n            </Modal>\r\n\r\n            {/* delet modal */}\r\n\r\n            {/* delete modal */}\r\n\r\n            <Modal isOpen={isDeleteModalOpen}>\r\n              <ModalHeader>Delete Confirmation</ModalHeader>\r\n              <ModalBody>Are you sure you want to delete this item?</ModalBody>\r\n              <ModalFooter>\r\n                <Button\r\n                  color=\"danger\"\r\n                  onClick={() => handleDeleteConfirm(deleteItemId)}\r\n                >\r\n                  Yes\r\n                </Button>\r\n                <Button\r\n                  color=\"secondary\"\r\n                  onClick={() => setIsDeleteModalOpen(false)}\r\n                >\r\n                  No\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          </div>\r\n          <div className=\"ms-2\">\r\n            <UncontrolledButtonDropdown>\r\n              <DropdownToggle className=\"filter_btn\">\r\n                <img className=\"filter_img\" src=\"./icons/filter_icon.png\" />\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem\r\n                  href=\"/\"\r\n                  tag=\"a\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  All\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  href=\"/\"\r\n                  tag=\"a\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  New User\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  href=\"/\"\r\n                  tag=\"a\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  Active User\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  href=\"/\"\r\n                  tag=\"a\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  Blocked User\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledButtonDropdown>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* table start */}\r\n      <div>\r\n        {isLoading ? (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: \"100%\",\r\n            }}\r\n          >\r\n            <Spinerr />\r\n          </div>\r\n        ) : data.length === 0 ? (\r\n          <p>There is no data to show.</p>\r\n        ) : (\r\n          <ClientDataTable columns={columns} data={data} />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RepsPage;\r\n","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Employees.js",["3836","3837"],"import \"@styles/react/apps/app-users.scss\";\r\nimport ClientDataTable from \"./table\";\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./table.css\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport active from \"../../Admin/assests/icons/active.png\";\r\nimport block from \"../../Admin/assests/icons/block.png\";\r\nimport addEmployee from \"../../Admin/assests/add_new_employee.svg\";\r\nimport Select from \"react-select\";\r\n\r\nimport {\r\n  UncontrolledButtonDropdown,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Form,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\nimport { MoreHorizontal } from \"react-feather\";\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n// for spinner\r\nimport Spinerr from \"../../views/components/spinners/SpinnerGrowing\";\r\nimport axios from \"axios\";\r\n\r\nconst Employees = () => {\r\n  const [defaultData_, setDefaultData_] = useState(\"\");\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (defaultData_) {\r\n      setName(defaultData_.name);\r\n      setEmail(defaultData_.email);\r\n      setPhone(defaultData_.phone);\r\n      setAddress(defaultData_.address);\r\n      setStatus(defaultData_.status);\r\n    }\r\n  }, [defaultData_]);\r\n\r\n  // post req for data\r\n\r\n  const postData = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!name || !email || !phone || !address) {\r\n      toast.error(\"Please fill out all required fields.\");\r\n      return;\r\n    }\r\n\r\n    if (!isEmailValid(email)) {\r\n      toast.error(\"Enter valid email address.\");\r\n      return;\r\n    }\r\n\r\n    if (!isPhoneValidAustralia(phone)) {\r\n      toast.error(\"Enter valid Phone address.\");\r\n      return;\r\n    }\r\n    if (!isAddressValid(address)) {\r\n      toast.error(\"Enter valid Address address.\");\r\n      return;\r\n    }\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setPhone(\"\");\r\n    setAddress(\"\");\r\n    setStatus(\"\");\r\n\r\n    axios\r\n      .post(`${global.BASEURL}createRecord/employee`, {\r\n        name,\r\n        email,\r\n        phone,\r\n        address,\r\n        status,\r\n      })\r\n      .then(() => {\r\n        toggleLargeModal();\r\n        getData();\r\n        toast.success(\"Data added successfully.\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error adding data: \", error);\r\n        toast.error(\"Failed to add data.\"); // Show error toast\r\n      });\r\n  };\r\n\r\n  //  for get data\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  const [selectedOption, setSelectedOption] = useState(\"All\");\r\n\r\n  function getData() {\r\n    setIsLoading(true);\r\n    axios\r\n      .post(`${global.BASEURL}getRecords/employee`)\r\n      .then((res) => {\r\n        const data = res.data.data;\r\n\r\n        if (selectedOption === \"New User\") {\r\n          const last5Records = data.slice(0, 3); // Get the last 5 records\r\n          setData(last5Records);\r\n        } else {\r\n          const filteredData = data.filter(\r\n            (item) => item.status === selectedOption || selectedOption === \"All\"\r\n          );\r\n          setData(filteredData);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data: \", error);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false); // Hide spinner after data is fetched\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [selectedOption]);\r\n\r\n  // for delet\r\n\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [deleteItemId, setDeleteItemId] = useState(null);\r\n\r\n  function handleDelete(id) {\r\n    setDeleteItemId(id);\r\n    setIsDeleteModalOpen(true);\r\n  }\r\n\r\n  const handleDeleteConfirm = () => {\r\n    // Close the delete confirmation modal\r\n    setIsDeleteModalOpen(false);\r\n\r\n    // Delete the item\r\n    if (deleteItemId) {\r\n      axios\r\n        .post(`${global.BASEURL}deleteRecord/employee`, {\r\n          id: deleteItemId,\r\n        })\r\n        .then(() => {\r\n          getData();\r\n          toast.success(\"Data deleted successfully.\"); // Show success toast\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error deleting data:\", error);\r\n          toast.error(\"Failed to delete data.\"); // Show error toast\r\n        });\r\n    }\r\n  };\r\n\r\n  // for update\r\n\r\n  const updateData = (e) => {\r\n    e.preventDefault();\r\n    const itemId = defaultData_?._id;\r\n    if (!isEmailValid(email)) {\r\n      toast.error(\"Enter valid email address.\");\r\n      return;\r\n    }\r\n\r\n    if (!isPhoneValidAustralia(phone)) {\r\n      toast.error(\"Enter valid Phone address.\");\r\n      return;\r\n    }\r\n    if (!isAddressValid(address)) {\r\n      toast.error(\"Enter valid Address address.\");\r\n      return;\r\n    }\r\n    axios\r\n      .post(`${global.BASEURL}updateRecord/employee`, {\r\n        id: itemId,\r\n        name,\r\n        email,\r\n        phone,\r\n        address,\r\n        status,\r\n      })\r\n      .then(() => {\r\n        employeesEditModal();\r\n        getData();\r\n        toast.success(\"Data updated successfully.\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error updating client:\", error);\r\n      });\r\n  };\r\n\r\n  const statuss = [\r\n    { label: \"Active\", value: \"Active\" },\r\n    { label: \"Un Active\", value: \"Un Active\" },\r\n  ];\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Sr.no\",\r\n      cell: (row, index) => index + 1,\r\n      sortable: \"true\",\r\n      maxWidth: \"2rem\",\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: (row) => row.name,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Email\",\r\n      selector: (row) => row.email,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n\r\n    {\r\n      name: \"Phone\",\r\n      selector: (row) => row.phone,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n\r\n    {\r\n      name: \"Adress\",\r\n      selector: (row) => row.address,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n\r\n    {\r\n      name: \"Status\",\r\n      cell: (row) => (\r\n        <div className=\"d-flex align-items-center\">\r\n          {row.status === \"Active\" ? (\r\n            <>\r\n              <img\r\n                src={active}\r\n                alt=\"active\"\r\n                width=\"11\"\r\n                height=\"11\"\r\n                className=\"me-1\"\r\n              />\r\n              <span>{row.status}</span>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <img\r\n                src={block}\r\n                alt=\"block\"\r\n                width=\"11\"\r\n                height=\"11\"\r\n                className=\"me-1\"\r\n              />\r\n              <span>{row.status}</span>\r\n            </>\r\n          )}\r\n        </div>\r\n      ),\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      allowOverflow: true,\r\n      maxWidth: \"7rem\",\r\n      minWidth: \"2rem\",\r\n      cell: (row) => {\r\n        // modal edit\r\n\r\n        return (\r\n          <div className=\"d-flex justify-content-end w-100\">\r\n            <UncontrolledDropdown className=\"\">\r\n              <DropdownToggle className=\"pe-1 \" tag=\"span\">\r\n                <MoreHorizontal size={15} />\r\n              </DropdownToggle>\r\n              <DropdownMenu end>\r\n                <DropdownItem>\r\n                  <div\r\n                    onClick={() => employeesEditModal(row)}\r\n                    outline\r\n                    className=\"btn btn-white w-100 p-0 m-0\"\r\n                  >\r\n                    <span className=\"align-middle ms-50\">Edit</span>\r\n                  </div>\r\n                </DropdownItem>\r\n\r\n                <DropdownItem>\r\n                  <div\r\n                    onClick={() => handleDelete(row._id)}\r\n                    className=\"btn btn-white w-100 p-0 m-0\"\r\n                  >\r\n                    <span className=\"align-middle ms-50\">Delete</span>\r\n                  </div>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  // Step 2: Add state for managing modal visibility\r\n  const [employeeEditModal, setemployeeEditModal] = useState(false);\r\n\r\n  const employeesEditModal = (result) => {\r\n    setDefaultData_(result);\r\n    setemployeeEditModal(!employeeEditModal);\r\n  };\r\n\r\n  const [isLargeModalOpen, setIsLargeModalOpen] = useState(false);\r\n\r\n  const toggleLargeModal = () => {\r\n    setIsLargeModalOpen(!isLargeModalOpen);\r\n  };\r\n\r\n  // validation\r\n\r\n  const [emailError, setEmailError] = useState(false);\r\n  const [phoneError, setPhoneError] = useState(false);\r\n  const [addressError, setAddressError] = useState(false);\r\n\r\n  const isEmailValid = (email) => {\r\n    const emailRegex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\r\n    return emailRegex.test(email);\r\n  };\r\n  const isAddressValid = (address) => {\r\n    const addressRegex = /^[A-Za-z\\s]+$/i;\r\n    return addressRegex.test(address);\r\n  };\r\n\r\n  const isPhoneValidAustralia = (phone) => {\r\n    // Regular expression n phone numbers (example: +61 1234567890)\r\n    const phoneRegex = /(?:\\+?61)?(?:\\(0\\)[23478]|\\(?0?[23478]\\)?)\\d{8}/i;\r\n    return phoneRegex.test(phone);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n\r\n      <div className=\"d-flex align-align-items-center justify-content-between mt-3 mb-3\">\r\n        <h5 className=\"head_title\">\r\n          Employess / <span style={{ fontSize: \"20px\" }}>Employess</span>\r\n        </h5>\r\n        <div className=\"d-flex align-items-center\">\r\n          <div>\r\n            <Button className=\"default_btn\" outline onClick={toggleLargeModal}>\r\n              Add Employess\r\n            </Button>\r\n\r\n            {/* add client modal  */}\r\n            <Modal\r\n              isOpen={isLargeModalOpen}\r\n              toggle={toggleLargeModal}\r\n              size=\"lg\"\r\n            >\r\n              <ModalHeader toggle={toggleLargeModal}></ModalHeader>\r\n              <ModalBody>\r\n                <div className=\"icon_div_main mb-2\">\r\n                  <img\r\n                    style={{ width: \"35px\", height: \"35px\" }}\r\n                    src={addEmployee}\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <h5 className=\"modal_title\">Add New Employee</h5>\r\n                <span className=\"modal_subtitle\">\r\n                  Enter the correct details of the employee which you want to\r\n                  add.\r\n                </span>\r\n\r\n                <Form className=\"d-flex flex-column p-1\">\r\n                  <Row>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">Name</Label>\r\n                      <Input\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"Name\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">Email</Label>\r\n                      <Input\r\n                        onBlur={(e) => {\r\n                          const emailValue = e.target.value;\r\n                          setEmail(emailValue);\r\n                          if (!isEmailValid(emailValue)) {\r\n                            setEmailError(true);\r\n                          } else {\r\n                            setEmailError(false);\r\n                          }\r\n                        }}\r\n                        type=\"email\"\r\n                        placeholder=\"Email Address\"\r\n                      />\r\n                      {emailError && (\r\n                        <div className=\"error_mssg\">Invalid email address</div>\r\n                      )}\r\n                    </Col>\r\n\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Phone Number\r\n                      </Label>\r\n                      <Input\r\n                        onBlur={(e) => {\r\n                          const phoneValue = e.target.value;\r\n                          setPhone(phoneValue);\r\n                          if (!isPhoneValidAustralia(phoneValue)) {\r\n                            setPhoneError(true);\r\n                          } else {\r\n                            setPhoneError(false);\r\n                          }\r\n                        }}\r\n                        type=\"tel\"\r\n                        placeholder=\"Phone Number\"\r\n                      />\r\n                      {phoneError && (\r\n                        <div className=\"error_mssg\">Invalid phone number</div>\r\n                      )}\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">Address</Label>\r\n                      <Input\r\n                        onBlur={(e) => {\r\n                          const addressValue = e.target.value;\r\n                          setAddress(addressValue);\r\n                          if (!isAddressValid(addressValue)) {\r\n                            setAddressError(true);\r\n                          } else {\r\n                            setAddressError(false);\r\n                          }\r\n                        }}\r\n                        type=\"text\"\r\n                        placeholder=\"Address\"\r\n                      />\r\n                      {addressError && (\r\n                        <div className=\"error_mssg\">\r\n                          Invalid address (only letters and spaces allowed)\r\n                        </div>\r\n                      )}\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">Status</Label>\r\n                      <Select\r\n                        onChange={(selectedOption) =>\r\n                          setStatus(selectedOption.value)\r\n                        }\r\n                        isClearable={false}\r\n                        classNamePrefix=\"select\"\r\n                        options={statuss}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <div className=\"mx-auto\">\r\n                    <Button\r\n                      onClick={postData}\r\n                      type=\"submit\"\r\n                      className=\"mt-2 default_btn\"\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              </ModalBody>\r\n            </Modal>\r\n\r\n            {/* edit modal */}\r\n\r\n            <Modal\r\n              isOpen={employeeEditModal}\r\n              toggle={employeesEditModal}\r\n              size=\"lg\"\r\n            >\r\n              <ModalHeader toggle={employeesEditModal}></ModalHeader>\r\n              <ModalBody>\r\n                <div className=\"icon_div_main mb-2\">\r\n                  <img\r\n                    style={{ width: \"35px\", height: \"35px\" }}\r\n                    src={addEmployee}\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <h5 className=\"modal_title\">Edit New Employee</h5>\r\n                <span className=\"modal_subtitle\">\r\n                  Enter the correct details of the employee which you want to\r\n                  edit.\r\n                </span>\r\n\r\n                <Form className=\"d-flex flex-column p-1\">\r\n                  <Row>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">Name</Label>\r\n                      <Input\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        defaultValue={defaultData_?.name}\r\n                        type=\"text\"\r\n                        placeholder=\"Name\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">Email</Label>\r\n                      <Input\r\n                        onBlur={(e) => {\r\n                          const emailValue = e.target.value;\r\n                          setEmail(emailValue);\r\n                          if (!isEmailValid(emailValue)) {\r\n                            setEmailError(true);\r\n                          } else {\r\n                            setEmailError(false);\r\n                          }\r\n                        }}\r\n                        defaultValue={defaultData_?.email}\r\n                        type=\"email\"\r\n                        placeholder=\"Email Address\"\r\n                      />\r\n                      {emailError && (\r\n                        <div className=\"error_mssg\">Invalid email address</div>\r\n                      )}\r\n                    </Col>\r\n\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Phone Number\r\n                      </Label>\r\n                      <Input\r\n                        onBlur={(e) => {\r\n                          const emailValue = e.target.value;\r\n                          setEmail(emailValue);\r\n                          if (!isEmailValid(emailValue)) {\r\n                            setEmailError(true);\r\n                          } else {\r\n                            setEmailError(false);\r\n                          }\r\n                        }}\r\n                        defaultValue={defaultData_?.phone}\r\n                        type=\"tel\"\r\n                        placeholder=\"Phone Number\"\r\n                      />\r\n                      {phoneError && (\r\n                        <div className=\"error_mssg\">Invalid phone number</div>\r\n                      )}\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">Address</Label>\r\n                      <Input\r\n                        onBlur={(e) => {\r\n                          const addressValue = e.target.value;\r\n                          setAddress(addressValue);\r\n                          if (!isAddressValid(addressValue)) {\r\n                            setAddressError(true);\r\n                          } else {\r\n                            setAddressError(false);\r\n                          }\r\n                        }}\r\n                        defaultValue={defaultData_?.address}\r\n                        type=\"text\"\r\n                        placeholder=\"Address\"\r\n                      />\r\n                      {addressError && (\r\n                        <div className=\"error_mssg\">\r\n                          Invalid address (only letters and spaces allowed)\r\n                        </div>\r\n                      )}\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">Status</Label>\r\n                      <Select\r\n                        onChange={(selectedOption) =>\r\n                          setStatus(selectedOption.value)\r\n                        }\r\n                        value={statuss.find(\r\n                          (option) => option.value === status\r\n                        )}\r\n                        isClearable={false}\r\n                        classNamePrefix=\"select\"\r\n                        options={statuss}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <div className=\"mx-auto\">\r\n                    <Button\r\n                      onClick={updateData}\r\n                      type=\"submit\"\r\n                      className=\"mt-2 default_btn\"\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              </ModalBody>\r\n            </Modal>\r\n\r\n            {/* delet modal */}\r\n\r\n            <Modal isOpen={isDeleteModalOpen}>\r\n              <ModalHeader>Delete Confirmation</ModalHeader>\r\n              <ModalBody>Are you sure you want to delete this item?</ModalBody>\r\n              <ModalFooter>\r\n                <Button\r\n                  color=\"danger\"\r\n                  onClick={() => handleDeleteConfirm(deleteItemId)}\r\n                >\r\n                  Yes\r\n                </Button>\r\n                <Button\r\n                  color=\"secondary\"\r\n                  onClick={() => setIsDeleteModalOpen(false)}\r\n                >\r\n                  No\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          </div>\r\n          <div className=\"ms-2\">\r\n            <UncontrolledButtonDropdown>\r\n              <DropdownToggle className=\"filter_btn\">\r\n                <img className=\"filter_img\" src=\"./icons/filter_icon.png\" />\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem\r\n                  tag=\"a\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    setSelectedOption(\"All\");\r\n                  }}\r\n                >\r\n                  All\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  tag=\"a\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    setSelectedOption(\"New User\");\r\n                  }}\r\n                >\r\n                  New User\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  tag=\"a\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    setSelectedOption(\"Active\");\r\n                  }}\r\n                >\r\n                  Active User\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  tag=\"a\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    setSelectedOption(\"Un Active\");\r\n                  }}\r\n                >\r\n                  Un Active\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledButtonDropdown>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* table start */}\r\n      <div>\r\n        {isLoading ? (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: \"100%\",\r\n            }}\r\n          >\r\n            <Spinerr />\r\n          </div>\r\n        ) : data.length === 0 ? (\r\n          <p>There is no data to show.</p>\r\n        ) : (\r\n          <ClientDataTable columns={columns} data={data} />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Employees;\r\n","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Job_add.js",["3838","3839","3840","3841"],"// ** React Imports\r\nimport { Fragment, useState, useEffect } from \"react\";\r\nimport ClientDataTable from \"./table\";\r\nimport \"./table.css\";\r\nimport Select from \"react-select\";\r\nimport check from \"../../Admin/assests/check.png\";\r\nimport { Link, useHistory, useLocation, useParams } from \"react-router-dom\";\r\nimport checkWihte from \"../../Admin/assests/check-white.png\";\r\nimport axios from \"axios\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n// for spinner\r\nimport Spinerr from \"../../views/components/spinners/SpinnerGrowing\";\r\nimport SignatureCanvas from \"react-signature-canvas\";\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Form,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  TabContent,\r\n  Button,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n} from \"reactstrap\";\r\n\r\nconst JobAdd = () => {\r\n  const history = useHistory();\r\n  const queryParams = new URLSearchParams(history.location.search);\r\n  const tabKey = queryParams.get(\"tabKey\");\r\n  // url id get\r\n  const { id } = useParams();\r\n\r\n  // states\r\n  const [jobData, setJobData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const [quantityValues, setQuantityValues] = useState({});\r\n  const [pickModal, setPickModal] = useState(false);\r\n  const [totalQuantity, setTotalQuantity] = useState(0);\r\n  const [totalWeight, setTotalWeight] = useState([]);\r\n  const [yourRowArray, setYourRowArray] = useState([]);\r\n  const [activeTabSection2, setActiveTabSection2] = useState(\"5\");\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [successModalS, setSuccessModalS] = useState(false);\r\n\r\n  // use effects\r\n\r\n  useEffect(() => {\r\n    getDataJob();\r\n    getData();\r\n    getDataJob();\r\n  }, []);\r\n\r\n  const moveToPickJobs = async (e, newStatus) => {\r\n    e.preventDefault();\r\n    const inventoryItemsString = JSON.stringify(yourRowArray);\r\n    await axios\r\n      .post(`${global.BASEURL}updateRecord/jobs`, {\r\n        inventory_items: inventoryItemsString,\r\n        status: newStatus,\r\n        id: id,\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error updating data: \", error);\r\n        toast.error(\"Failed to update data.\");\r\n      });\r\n    history.push({\r\n      pathname: `/job_notify/${id}`,\r\n      state: {\r\n        totalQuantity: totalQuantity,\r\n        totalWeightSum: totalWeightSum,\r\n      },\r\n    });\r\n  };\r\n\r\n  const confirmDelivery = async (e, newStatus) => {\r\n    e.preventDefault();\r\n    const calculatedTotalQuantity = jobData.reduce(\r\n      (total, item) => total + item.quantity,\r\n      0\r\n    );\r\n    const calculatedTotalWeightSum = jobData.reduce(\r\n      (total, item) => total + item.weight,\r\n      0\r\n    );\r\n\r\n    console.log(\"okk\", calculatedTotalQuantity);\r\n    await axios\r\n      .post(`${global.BASEURL}updateRecord/jobs`, {\r\n        status: newStatus,\r\n        id: id,\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error updating data: \", error);\r\n        toast.error(\"Failed to update data.\");\r\n      });\r\n\r\n    history.push({\r\n      pathname: `/job_notify/${id}`,\r\n      state: {\r\n        totalQuantity: calculatedTotalQuantity,\r\n        totalWeightSum: calculatedTotalWeightSum,\r\n      },\r\n    });\r\n  };\r\n\r\n  // job data get\r\n  function getDataJob() {\r\n    setIsLoading(true);\r\n    axios\r\n      .post(`${global.BASEURL}getRecords/jobs`)\r\n      .then((res) => {\r\n        const filteredData = res.data.data.filter((item) => item._id === id);\r\n\r\n        if (filteredData.length > 0) {\r\n          const parsedInventoryItems = JSON.parse(\r\n            filteredData[0]?.inventory_items\r\n          );\r\n          setJobData(parsedInventoryItems);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data: \", error);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }\r\n\r\n  // get inventory data from api\r\n\r\n  function getData() {\r\n    setIsLoading(true);\r\n    axios\r\n      .post(`${global.BASEURL}getInventory`)\r\n      .then((res) => {\r\n        setData(res.data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data: \", error);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false); // Hide spinner after data is fetched\r\n      });\r\n  }\r\n\r\n  const totalWeightSum = Object.values(totalWeight).reduce(\r\n    (acc, itemWeight) => acc + itemWeight,\r\n    0\r\n  );\r\n\r\n  // Now, you can use totalWeightSum in your JSX to display the total weight.\r\n\r\n  const handleQuantityChange = (row, value) => {\r\n    const parsedValue = parseInt(value) || 0;\r\n\r\n    setQuantityValues((prevQuantityValues) => ({\r\n      ...prevQuantityValues,\r\n      [row._id]: parsedValue,\r\n    }));\r\n\r\n    const newWeight = row.weight * parsedValue;\r\n    const newRow = { ...row, quantity: parsedValue, weight: newWeight };\r\n\r\n    const newRowArray = [...yourRowArray, newRow];\r\n\r\n    setYourRowArray(newRowArray);\r\n\r\n    const newTotalQuantity = Object.values({\r\n      ...quantityValues,\r\n      [row._id]: parsedValue,\r\n    }).reduce((acc, currentValue) => acc + currentValue, 0);\r\n\r\n    setTotalQuantity(newTotalQuantity);\r\n    const updatedTotalWeight = { ...totalWeight };\r\n\r\n    updatedTotalWeight[row._id] = row.weight * (parsedValue || 0);\r\n\r\n    setTotalWeight(updatedTotalWeight);\r\n  };\r\n\r\n  ////////\r\n\r\n  const pickListModal = () => {\r\n    const selectedQuantity = Object.values(quantityValues).reduce(\r\n      (acc, currentValue) => acc + currentValue,\r\n      0\r\n    );\r\n\r\n    if (selectedQuantity > 0) {\r\n      setPickModal(!pickModal);\r\n    } else {\r\n      toast.error(\"Must fill atleast 1 Qty.\");\r\n    }\r\n  };\r\n\r\n  /////////////////////////////////////////////////////////////////////////////\r\n\r\n  let counter = 0;\r\n  const columns = [\r\n    {\r\n      name: \"Sr.no\",\r\n      selector: (row) => ++counter,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Item Name\",\r\n      selector: (row) => row.name,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"On Hand\",\r\n      selector: (row) => (\r\n        <>\r\n          {row.quantity === \"0\" ? (\r\n            <div className=\"actionCss\">out of stock</div>\r\n          ) : (\r\n            row.quantity\r\n          )}\r\n        </>\r\n      ),\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Qty\",\r\n      cell: (row) => (\r\n        <>\r\n          {row.quantity === \"0\" ? (\r\n            <input\r\n              value={\r\n                quantityValues[row._id] !== undefined\r\n                  ? quantityValues[row._id]\r\n                  : 0\r\n              }\r\n              onChange={(e) => handleQuantityChange(row, e.target.value)}\r\n              className=\"form-control\"\r\n              type=\"number\"\r\n              readOnly\r\n            />\r\n          ) : (\r\n            <input\r\n              value={\r\n                quantityValues[row._id] !== undefined\r\n                  ? quantityValues[row._id]\r\n                  : 0\r\n              }\r\n              onChange={(e) => handleQuantityChange(row, e.target.value)}\r\n              className=\"form-control\"\r\n              type=\"number\"\r\n            />\r\n          )}\r\n        </>\r\n      ),\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Weight(Kg)\",\r\n      selector: (row) => row.weight * (quantityValues[row._id] || 0),\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n  ];\r\n\r\n  // secound tab column data start\r\n\r\n  const columnsB = [\r\n    {\r\n      name: \"Sr.no\",\r\n      selector: (row, index) => index + 1,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Item Name\",\r\n      selector: (row) => row.name,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"On Hand\",\r\n      selector: (row) => (\r\n        <>\r\n          {row.quantity === \"0\" ? (\r\n            <div className=\"actionCss\">out of stock</div>\r\n          ) : (\r\n            row.quantity\r\n          )}\r\n        </>\r\n      ),\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Qty\",\r\n      selector: (row) => {\r\n        const matchedItem = jobData.find((item) => item._id === row._id);\r\n\r\n        if (matchedItem) {\r\n          return <>{matchedItem.quantity}</>;\r\n        } else {\r\n          return 0;\r\n        }\r\n      },\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Actuals\",\r\n      cell: (row) => (\r\n        <>\r\n          {row.quantity === \"0\" ? (\r\n            <input\r\n              value={\r\n                quantityValues[row._id] !== undefined\r\n                  ? quantityValues[row._id]\r\n                  : 0\r\n              }\r\n              onChange={(e) => handleQuantityChange(row, e.target.value)}\r\n              className=\"form-control\"\r\n              type=\"number\"\r\n              readOnly\r\n            />\r\n          ) : (\r\n            <input\r\n              value={\r\n                quantityValues[row._id] !== undefined\r\n                  ? quantityValues[row._id]\r\n                  : 0\r\n              }\r\n              onChange={(e) => handleQuantityChange(row, e.target.value)}\r\n              className=\"form-control\"\r\n              type=\"number\"\r\n            />\r\n          )}\r\n        </>\r\n      ),\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Weight(Kg)\",\r\n      selector: (row) => row.weight * (quantityValues[row._id] || 0),\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n  ];\r\n\r\n  // secound tab column data start\r\n  const columnsC = [\r\n    {\r\n      name: \"Sr.no\",\r\n      selector: (row, index) => index + 1,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Item Name\",\r\n      selector: (row) => row.name,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Delivery Qty\",\r\n      selector: (row) => row.quantity,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Bal Qty\",\r\n      selector: (row) => row.quantity,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Actuals\",\r\n      cell: (row) => (\r\n        <>\r\n          <input\r\n            value={\r\n              quantityValues[row._id] !== undefined\r\n                ? quantityValues[row._id]\r\n                : 0\r\n            }\r\n            onChange={(e) => {\r\n              const inputValue = parseInt(e.target.value, 10);\r\n              if (inputValue <= row.quantity) {\r\n                // If user input is less than or equal to row.quantity\r\n                handleQuantityChange(row, inputValue);\r\n              } else {\r\n                // If user input is greater than row.quantity, show an error message\r\n                toast.error(\"Please select less than or equal to row.quantity.\");\r\n              }\r\n            }}\r\n            className=\"form-control\"\r\n            type=\"number\"\r\n          />\r\n        </>\r\n      ),\r\n      sortable: \"true\",\r\n    },    \r\n    {\r\n      name: \"Weight(Kg)\",\r\n      selector: (row) => row.weight * (quantityValues[row._id] || 0),\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n  ];\r\n  // secound tab data\r\n\r\n  const columnsk = [\r\n    {\r\n      name: \"Sr.no\",\r\n      selector: (row) => row.srno,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Item Name\",\r\n      selector: (row) => row.item_name,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Qty\",\r\n      selector: (row) => row.qty,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n\r\n    {\r\n      name: \"Action\",\r\n      cell: (row) => (\r\n        <div className=\"d-flex align-items-center\">\r\n          {row.action === \"Out of Stock\" ? (\r\n            <>\r\n              <div className=\"actionCss\">\r\n                <span>{row.action}</span>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <div className=\"actionCssA\">\r\n                <span>{row.action}</span>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      ),\r\n      sortable: true,\r\n    },\r\n  ];\r\n\r\n  let datak = [\r\n    {\r\n      srno: \"09\",\r\n      item_name: \"Standard 3.0m\",\r\n      qty: \"10\",\r\n      action: \"Out of Stock\",\r\n    },\r\n    {\r\n      srno: \"09\",\r\n      item_name: \"Standard 3.0m\",\r\n      qty: \"10\",\r\n      action: \"Add to Picklist\",\r\n    },\r\n    {\r\n      srno: \"09\",\r\n      item_name: \"Standard 3.0m\",\r\n      qty: \"10\",\r\n      action: \"Add to ojko\",\r\n    },\r\n  ];\r\n\r\n  const [activeTabSection1, setActiveTabSection1] = useState(() => {\r\n    if (tabKey === \"desiredKey\") {\r\n      return \"1\";\r\n    } else if (tabKey === \"cube\") {\r\n      return \"2\";\r\n    } else if (tabKey === \"deli\") {\r\n      return \"3\";\r\n    } else if (tabKey === \"ret\") {\r\n      return \"4\";\r\n    }\r\n  });\r\n\r\n  const toggleTabSection1 = (tab) => {\r\n    if (activeTabSection1 !== tab) {\r\n      setActiveTabSection1(tab);\r\n    }\r\n  };\r\n\r\n  const toggleTabSection2 = (tab) => {\r\n    if (activeTabSection2 !== tab) {\r\n      setActiveTabSection2(tab);\r\n    }\r\n  };\r\n\r\n  const selectBranch = [\r\n    { label: \"Active\", value: \"Active\" },\r\n    { label: \"Un Active\", value: \"Un Active\" },\r\n  ];\r\n  const selectSign = [\r\n    { label: \"Signature\", value: \"Signature\" },\r\n    { label: \"Text\", value: \"Text\" },\r\n  ];\r\n\r\n  const handleChange = (selectedOption) => {\r\n    setSelectedOption(selectedOption);\r\n  };\r\n\r\n  const [items, setItems] = useState([\r\n    {\r\n      itemName: \"\",\r\n      quantity: \"\",\r\n      supplier: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    const imageUrl = URL.createObjectURL(file);\r\n    setSelectedImage(imageUrl);\r\n  };\r\n\r\n  const handleItemChange = (e, index, field) => {\r\n    const updatedItems = [...items];\r\n    updatedItems[index][field] = e.target.value;\r\n    setItems(updatedItems);\r\n  };\r\n\r\n  const addMore = () => {\r\n    const newItem = {\r\n      itemName: \"\",\r\n      quantity: \"\",\r\n      supplier: \"\",\r\n    };\r\n    setItems([...items, newItem]);\r\n  };\r\n\r\n  // success modal\r\n\r\n  const successModal = () => {\r\n    setSuccessModalS(!successModalS);\r\n  };\r\n\r\n  // cancel btn css\r\n\r\n  const cancelBtn = {\r\n    background: \"white\",\r\n    color: \"#2873B9\",\r\n    border: \"0px\",\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <ToastContainer />\r\n      <Nav tabs justified>\r\n        <NavItem>\r\n          <NavLink\r\n            className={activeTabSection1 === \"1\" ? \"active\" : \"\"}\r\n            onClick={() => {\r\n              toggleTabSection1(\"1\");\r\n            }}\r\n            disabled={tabKey !== \"desiredKey\"}\r\n          >\r\n            <div className=\"numCount\">\r\n              <span>1</span>\r\n            </div>\r\n            Create Picklist\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink\r\n            className={activeTabSection1 === \"2\" ? \"active\" : \"\"}\r\n            onClick={() => {\r\n              toggleTabSection1(\"2\");\r\n            }}\r\n            disabled={tabKey !== \"cube\"}\r\n          >\r\n            <div className=\"numCount\">\r\n              <span>2</span>\r\n            </div>\r\n            Pick Order\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink\r\n            className={activeTabSection1 === \"3\" ? \"active\" : \"\"}\r\n            onClick={() => {\r\n              toggleTabSection1(\"3\");\r\n            }}\r\n            disabled={tabKey !== \"deli\"}\r\n          >\r\n            <div className=\"numCount\">\r\n              <span>3</span>\r\n            </div>\r\n            Complete Delivery\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem style={{ display: tabKey === \"ret\" ? \"block\" : \"none\" }}>\r\n          <NavLink\r\n            className={activeTabSection1 === \"4\" ? \"active\" : \"\"}\r\n            onClick={() => {\r\n              toggleTabSection1(\"4\");\r\n            }}\r\n          >\r\n            <div className=\"numCount\">\r\n              <span>4</span>\r\n            </div>\r\n            Return\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent className=\"py-50\" activeTab={activeTabSection1}>\r\n        <TabPane tabId=\"1\">\r\n          <div className=\"d-flex align-align-items-center justify-content-between mt-3 mb-3\">\r\n            <h5 className=\"head_title\"> Inventory Items</h5>\r\n            <div className=\"ms-2\">\r\n              <input\r\n                placeholder=\"Search...\"\r\n                className=\"form-control\"\r\n                type=\"search\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"table_main p-1 mt-2 pb-3\">\r\n            <div>\r\n              {isLoading ? (\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    height: \"100%\",\r\n                  }}\r\n                >\r\n                  <Spinerr />\r\n                </div>\r\n              ) : data.length === 0 ? (\r\n                <p>There is no data to show.</p>\r\n              ) : (\r\n                <ClientDataTable columns={columns} data={data} />\r\n              )}\r\n            </div>\r\n            <div className=\"d-flex align-items-center justify-content-start md_mt_5rem sm_column\">\r\n              <h5 style={{ fontSize: \"20px\" }} className=\"head_title\">\r\n                Total Item(s): {totalQuantity} : Total Weight : {totalWeightSum}\r\n              </h5>\r\n\r\n              <Button\r\n                onClick={() => pickListModal()}\r\n                className=\"default_btn ms-2 sm_mt-10\"\r\n              >\r\n                Create Picklist\r\n              </Button>\r\n\r\n              {/* picklist modal */}\r\n\r\n              <Modal\r\n                className=\"modal_lg_resize\"\r\n                isOpen={pickModal}\r\n                toggle={pickListModal} // Use the correct toggle function for the large modal\r\n                size=\"lg\"\r\n              >\r\n                <ModalHeader\r\n                  toggle={pickListModal} // Use the correct toggle function for the large modal\r\n                ></ModalHeader>\r\n                <ModalBody style={{ padding: \"50px 0px\" }}>\r\n                  <div className=\"check_div\">\r\n                    <div className=\"d-flex align-items-center justify-content-between md_column\">\r\n                      <div className=\"circle_div d-flex align-items-center justify-content-center\">\r\n                        <img src={check} alt=\"\" />\r\n                      </div>\r\n                      <div className=\"md_mt-10\">\r\n                        <div className=\"def_li\"></div>\r\n                        <div className=\"def_li mt-1\"></div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex align-items-center justify-content-center flex-column mt-1\">\r\n                    <h5 className=\"modal_title\">Picklist Created</h5>\r\n                    <span className=\"modal_subtitle\">\r\n                      Do you want Quick Delivery?\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"d-flex align-items-center justify-content-center sm_column  mt-2\">\r\n                    <Button\r\n                      onClick={(e) => {\r\n                        moveToPickJobs(e, \"Move to Picklist\");\r\n                        // successModal();\r\n                      }}\r\n                      type=\"submit\"\r\n                      className=\"default_btn2 me-2 sm_mr_none\"\r\n                    >\r\n                      Move to Pick Jobs\r\n                    </Button>\r\n                    <Button\r\n                      onClick={(e) => {\r\n                        moveToPickJobs(e, \"Create Delivery Docket\");\r\n                        // successModal();\r\n                      }}\r\n                      type=\"submit\"\r\n                      className=\"default_btn sm_mt-10\"\r\n                    >\r\n                      Yes, Create Delivery Docket\r\n                    </Button>\r\n                  </div>\r\n                </ModalBody>\r\n              </Modal>\r\n\r\n              {/* success modal*/}\r\n\r\n              <Modal\r\n                className=\"modal_lg_resize\"\r\n                isOpen={successModalS}\r\n                toggle={successModal} // Use the correct toggle function for the large modal\r\n                size=\"lg\"\r\n              >\r\n                <ModalHeader\r\n                  toggle={successModal} // Use the correct toggle function for the large modal\r\n                ></ModalHeader>\r\n                <ModalBody style={{ padding: \"50px 0px\" }}>\r\n                  <div\r\n                    className=\"d-flex align-items-center justify-content-center flex-column\"\r\n                    style={{ width: \"50%\", margin: \"auto\" }}\r\n                  >\r\n                    <div\r\n                      style={{ marginLeft: \"auto\" }}\r\n                      className=\"check_div2 sm_mr_none\"\r\n                    >\r\n                      <div className=\"d-flex align-items-center justify-content-between sm_column\">\r\n                        <div className=\"circleW_div d-flex align-items-center justify-content-center\">\r\n                          <img\r\n                            style={{\r\n                              width: \"20px\",\r\n                              height: \"20px\",\r\n                              objectFit: \"contain\",\r\n                            }}\r\n                            src={checkWihte}\r\n                            alt=\"\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"md_mt-10\">\r\n                          <div\r\n                            style={{ width: \"50%\" }}\r\n                            className=\"def_li2\"\r\n                          ></div>\r\n                          <div className=\"def_li2 mt-1\"></div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"blank_divW mt-2\"></div>\r\n                    <div\r\n                      style={{ marginRight: \"auto\" }}\r\n                      className=\"checo check_div2 sm_mr_none\"\r\n                    >\r\n                      <div className=\"d-flex align-items-center justify-content-between sm_column\">\r\n                        <div className=\"circleW_div d-flex align-items-center justify-content-center\">\r\n                          <img\r\n                            style={{\r\n                              width: \"20px\",\r\n                              height: \"20px\",\r\n                              objectFit: \"contain\",\r\n                            }}\r\n                            src={checkWihte}\r\n                            alt=\"\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"md_mt-10\">\r\n                          <div\r\n                            style={{ width: \"50%\" }}\r\n                            className=\"def_li2\"\r\n                          ></div>\r\n                          <div className=\"def_li2 mt-1\"></div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex align-items-center justify-content-center flex-column mt-1\">\r\n                    <h5 className=\"modal_title\">Success</h5>\r\n                    <span className=\"modal_subtitle\">\r\n                      Your Picklist moved to Quick Delivery Docket\r\n                    </span>\r\n                  </div>\r\n                </ModalBody>\r\n              </Modal>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"d-flex align-items-center justify-content-between mt-2\">\r\n            <div>\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={activeTabSection2 === \"5\" ? \"active\" : \"\"}\r\n                    onClick={() => {\r\n                      toggleTabSection2(\"5\");\r\n                    }}\r\n                  >\r\n                    Other Branch Items\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={activeTabSection2 === \"6\" ? \"active\" : \"\"}\r\n                    onClick={() => {\r\n                      toggleTabSection2(\"6\");\r\n                    }}\r\n                  >\r\n                    Cross Hire Items\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n            <div className=\"d-flex align-items-center dropCss\">\r\n              <span className=\"me-2\">Branch</span>|\r\n              <div style={{ width: \"10rem\" }}>\r\n                <Select\r\n                  isClearable={false}\r\n                  classNamePrefix=\"select\"\r\n                  options={selectBranch}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <TabContent className=\"py-50\" activeTab={activeTabSection2}>\r\n            <TabPane tabId=\"5\">\r\n              <div className=\"table_main p-1 mt-2 pb-31\">\r\n                <ClientDataTable columns={columnsk} data={datak} />\r\n                <div className=\"mt-4\"></div>\r\n              </div>\r\n            </TabPane>\r\n            <TabPane tabId=\"6\">\r\n              <div\r\n                className=\"p-2\"\r\n                style={{ border: \"1px solid #E0E0E0\", borderRadius: \"5px\" }}\r\n              >\r\n                {items.map((item, index) => (\r\n                  <div key={index} className=\"d-flex align-items-center mb-2\">\r\n                    <div className=\"me-2\">\r\n                      <label htmlFor=\"\" className=\"value_font input_label\">\r\n                        Item Name*\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control mt-1\"\r\n                        value={item.itemName}\r\n                        onChange={(e) => handleItemChange(e, index, \"itemName\")}\r\n                      />\r\n                    </div>\r\n                    <div className=\"me-2\">\r\n                      <label htmlFor=\"\" className=\"value_font input_label\">\r\n                        Quantity*\r\n                      </label>\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"form-control mt-1\"\r\n                        value={item.quantity}\r\n                        onChange={(e) => handleItemChange(e, index, \"quantity\")}\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <label htmlFor=\"\" className=\"value_font input_label\">\r\n                        Supplier*\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control mt-1\"\r\n                        value={item.supplier}\r\n                        onChange={(e) => handleItemChange(e, index, \"supplier\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n\r\n                <h5\r\n                  style={{ color: \"#2873B9\", cursor: \"pointer\" }}\r\n                  onClick={addMore}\r\n                >\r\n                  Add More\r\n                </h5>\r\n\r\n                <div className=\"mt-1 d-flex align-items-center justify-content-end\">\r\n                  <Button type=\"submit\" className=\"default_btn me-2\">\r\n                    Add\r\n                  </Button>\r\n                  <Button type=\"submit\" className=\"default_btn\">\r\n                    Add Picklist\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </TabPane>\r\n          </TabContent>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n          <div className=\"d-flex align-align-items-center justify-content-between mt-3 mb-3\">\r\n            <h5 className=\"head_title\"> Inventory Items 90</h5>\r\n            <div className=\"ms-2\">\r\n              <input\r\n                placeholder=\"Search...\"\r\n                className=\"form-control\"\r\n                type=\"search\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"table_main p-1 mt-2 pb-3\">\r\n            <div>\r\n              {isLoading ? (\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    height: \"100%\",\r\n                  }}\r\n                >\r\n                  <Spinerr />\r\n                </div>\r\n              ) : data.length === 0 ? (\r\n                <p>There is no data to show.</p>\r\n              ) : (\r\n                <ClientDataTable columns={columnsB} data={data} />\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-2\">\r\n            <div className=\"d-flex align-items-center justify-content-between sm_column\">\r\n              <div>\r\n                <label htmlFor=\"\" className=\"value_font input_label\">\r\n                  Picked By\r\n                </label>\r\n                <input\r\n                  placeholder=\"Picked By\"\r\n                  type=\"text\"\r\n                  style={{ width: \"20rem\" }}\r\n                  className=\"form-control mt-1\"\r\n                />\r\n              </div>\r\n              <div className=\"sm_mt-10\">\r\n                <label htmlFor=\"\" className=\"value_font input_label\">\r\n                  Signature\r\n                </label>\r\n                <div style={{ width: \"20rem\" }}>\r\n                  <Select\r\n                    isClearable={false}\r\n                    className=\"mt-1\"\r\n                    classNamePrefix=\"select\"\r\n                    options={selectSign}\r\n                    value={selectedOption}\r\n                    onChange={handleChange}\r\n                  />\r\n                </div>\r\n                {selectedOption && selectedOption.value === \"Signature\" ? (\r\n                  <div className=\"d-flex flex-column singDiv\">\r\n                    <label\r\n                      htmlFor=\"\"\r\n                      className=\"value_font input_label mt-2 mb-1\"\r\n                    >\r\n                      Sign Here\r\n                    </label>\r\n                    {/* Burada imza kısmı */}\r\n                    <SignatureCanvas\r\n                      penColor=\"black\"\r\n                      canvasProps={{\r\n                        width: 270,\r\n                        height: 65,\r\n                        className: \"sigCanvas\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                ) : selectedOption && selectedOption.value === \"Text\" ? (\r\n                  <div>\r\n                    <input\r\n                      placeholder=\"Name\"\r\n                      className=\"form-control mt-2\"\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                ) : null}\r\n                <hr style={{ width: \"20rem\" }} className=\"mt-1\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"d-flex align-items-center justify-content-end sm_column mb-3\">\r\n              <h5 style={{ fontSize: \"20px\" }} className=\"head_title\">\r\n                Total Item(s): {totalQuantity} : Total Weight : {totalWeightSum}\r\n              </h5>\r\n              <div className=\"sm_mt-10 d-flex align-items-center\">\r\n                <Button style={cancelBtn} className=\"ms-2\">\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  onClick={(e) => {\r\n                    moveToPickJobs(e, \"Create Delivery Docket\");\r\n                    // successModal();\r\n                  }}\r\n                  className=\"default_btn border-0 ms-2\"\r\n                >\r\n                  Create Delivery Docket\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </TabPane>\r\n        <TabPane tabId=\"3\">\r\n          <div className=\"d-flex align-align-items-center justify-content-between mt-3 mb-3\">\r\n            <h5 className=\"head_title\">Delivery</h5>\r\n            <div className=\"ms-2\">\r\n              <input\r\n                placeholder=\"Search...\"\r\n                className=\"form-control\"\r\n                type=\"search\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"table_main p-1 mt-2 pb-3\">\r\n            <ClientDataTable columns={columnsC} data={jobData} />\r\n            <div className=\"mt-2\">\r\n              <div className=\"d-flex justify-content-between sm_column\">\r\n                <div>\r\n                  <label htmlFor=\"\" className=\"value_font input_label\">\r\n                    Image Upload\r\n                  </label>\r\n                  <div className=\"mt-2\">\r\n                    <input type=\"file\" onChange={handleImageChange} />\r\n                  </div>\r\n                  {selectedImage && (\r\n                    <div className=\"mt-2\">\r\n                      <img\r\n                        src={selectedImage}\r\n                        alt=\"Selected\"\r\n                        style={{\r\n                          width: \"80px\",\r\n                          height: \"80px\",\r\n                          borderRadius: \"8px\",\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"sm_mt-10\">\r\n                  <label htmlFor=\"\" className=\"value_font input_label\">\r\n                    Client Name\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control mt-1\"\r\n                    placeholder=\"Client Name\"\r\n                  />\r\n                  <label htmlFor=\"\" className=\"value_font input_label mt-2\">\r\n                    Client Signature\r\n                  </label>\r\n                  <Select\r\n                    isClearable={false}\r\n                    className=\"mt-1\"\r\n                    classNamePrefix=\"select\"\r\n                    options={selectSign}\r\n                  />\r\n\r\n                  <label htmlFor=\"\" className=\"value_font input_label mt-2\">\r\n                    Sign Here\r\n                  </label>\r\n                  <hr className=\"mt-1\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex align-items-center justify-content-end sm_column\">\r\n                <h5 style={{ fontSize: \"20px\" }} className=\"head_title\">\r\n                  Total Item(s): 100 Total Weight : 1800{\" \"}\r\n                </h5>\r\n                <div className=\"sm_mt-10 d-flex align-items-center\">\r\n                  <Button\r\n                    style={{\r\n                      background: \"white\",\r\n                      color: \"#2873B9\",\r\n                      border: \"0px\",\r\n                    }}\r\n                    className=\"ms-2\"\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    onClick={(e) => {\r\n                      confirmDelivery(e, \"Delivery Succesfully\");\r\n                    }}\r\n                    className=\"default_btn border-0 ms-2\"\r\n                  >\r\n                    Confirm Delivery\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </TabPane>\r\n        <TabPane tabId=\"4\">\r\n          <div className=\"d-flex align-align-items-center justify-content-between mt-3 mb-3\">\r\n            <h5 className=\"head_title\">Return Item</h5>\r\n            <div className=\"ms-2\">\r\n              <input\r\n                placeholder=\"Search...\"\r\n                className=\"form-control\"\r\n                type=\"search\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"table_main p-1 mt-2 pb-3\">\r\n            <ClientDataTable columns={columnsC} data={jobData} />\r\n            <div className=\"mt-2\">\r\n              <label htmlFor=\"\" className=\"value_font input_label\">\r\n                Received By\r\n              </label>\r\n              <input\r\n                style={{ width: \"20rem\" }}\r\n                className=\"form-control mt-1\"\r\n                type=\"text\"\r\n              />\r\n              <label htmlFor=\"\" className=\"value_font input_label mt-2\">\r\n                Client Signature\r\n              </label>\r\n              <div style={{ width: \"20rem\" }}>\r\n                <Select\r\n                  isClearable={false}\r\n                  className=\"mt-1\"\r\n                  classNamePrefix=\"select\"\r\n                  options={selectSign}\r\n                />\r\n              </div>\r\n              <label htmlFor=\"\" className=\"value_font input_label mt-1\">\r\n                Sign Here ,\r\n              </label>\r\n              <hr style={{ width: \"20rem\" }} />\r\n            </div>\r\n            <div className=\"d-flex align-items-center justify-content-end sm_column\">\r\n              <h5 style={{ fontSize: \"20px\" }} className=\"head_title\">\r\n                Total Item(s): 100 Total Weight : 1800{\" \"}\r\n              </h5>\r\n              <div className=\"sm_mt-10 d-flex align-items-center\">\r\n                <Button\r\n                  style={{\r\n                    background: \"white\",\r\n                    color: \"#2873B9\",\r\n                    border: \"0px\",\r\n                  }}\r\n                  className=\"ms-2\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  onClick={(e) => {\r\n                    moveToPickJobs(e, \"Item(s) successfully Returned\");\r\n                    // successModal();\r\n                  }}\r\n                  className=\"default_btn border-0 ms-2\"\r\n                >\r\n                  Complete Return\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </TabPane>\r\n      </TabContent>\r\n\r\n      {/* secound tab start */}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default JobAdd;\r\n","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Job_notification.js",["3842","3843"],"import \"@styles/react/apps/app-users.scss\";\r\nimport ClientDataTable from \"./table\";\r\nimport \"./table.css\";\r\n// import './client.css';\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useLocation, useParams, Link } from \"react-router-dom\";\r\nimport active from \"../../Admin/assests/icons/active.png\";\r\nimport axios from \"axios\";\r\nimport cube from \"../../Admin/assests/cube.svg\";\r\nimport mini_truck from \"../../Admin/assests/mini-truck.svg\";\r\nimport mini_full from \"../../Admin/assests/mini-full.svg\";\r\nimport \"./table.css\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n// for spinner\r\nimport Spinerr from \"../../views/components/spinners/SpinnerGrowing\";\r\nconst iconS = {\r\n  width: \"16px\",\r\n  height: \"16px\",\r\n};\r\nconst JobNotification = () => {\r\n  const location = useLocation();\r\n  const { totalQuantity, totalWeightSum } = location.state || {};\r\n\r\n  console.log(\"qun\", totalQuantity);\r\n\r\n  const { id } = useParams();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // show data start code\r\n  const [data, setData] = useState([]);\r\n\r\n  function getData() {\r\n    setIsLoading(true);\r\n    axios\r\n      .post(`${global.BASEURL}getRecords/jobs`)\r\n      .then((res) => {\r\n        const matchedData = res.data.data.filter((item) => item._id === id);\r\n        setData(matchedData);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data: \", error);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [id]);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Job Number\",\r\n      cell: (row) => row.job_no,\r\n      sortable: true,\r\n      maxWidth: \"7rem\",\r\n      minWidth: \"2rem\",\r\n    },\r\n    {\r\n      name: \"Job Name\",\r\n      cell: (row) => row.job_name,\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Branch\",\r\n      cell: (row) => row.branch,\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Total Qty\",\r\n      cell: (row) => totalQuantity,\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Total Weight(kg)\",\r\n      cell: (row) => totalWeightSum,\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      cell: (row) => (\r\n        <>\r\n          {row.status === \"Move to Picklist\" ? (\r\n            <>\r\n              <h5>Move to Picklist</h5>\r\n            </>\r\n          ) : row.status === \"Create Delivery Docket\" ? (\r\n            <>\r\n              <h5>Create Delivery Docket</h5>\r\n            </>\r\n          ) : row.status === \"Delivery Succesfully\" ? (\r\n            <>\r\n              <h5>Delivery Succesfully</h5>\r\n            </>\r\n          ) : row.status === \"Item(s) successfully Returned\" ? (\r\n            <h5>Item(s) successfully Returned</h5>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </>\r\n      ),\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      cell: (row) => (\r\n        <>\r\n          {row.status === \"Move to Picklist\" ? (\r\n            <>\r\n              <Link to={`/job_add/${row._id}?tabKey=cube`}>\r\n                <img\r\n                  src={cube}\r\n                  alt=\"active\"\r\n                  style={iconS}\r\n                  className=\"me-1 mb-1\"\r\n                />\r\n              </Link>\r\n            </>\r\n          ) : row.status === \"Create Delivery Docket\" ? (\r\n            <>\r\n              <Link to={`/job_add/${row._id}?tabKey=deli`}>\r\n                <img\r\n                  src={mini_truck}\r\n                  alt=\"active\"\r\n                  style={iconS}\r\n                  className=\"me-1 mb-1\"\r\n                />\r\n              </Link>\r\n            </>\r\n          ) : row.status === \"Delivery Succesfully\" ? (\r\n            <>\r\n              <Link to={`/job_add/${row._id}?tabKey=ret`}>\r\n                <img\r\n                  src={mini_full}\r\n                  alt=\"active\"\r\n                  style={iconS}\r\n                  className=\"me-1 mb-1\"\r\n                />\r\n              </Link>\r\n              <Link to={`/job_add/${row._id}?tabKey=cube`}>\r\n                <img\r\n                  src={cube}\r\n                  alt=\"active\"\r\n                  style={iconS}\r\n                  className=\"me-1 mb-1\"\r\n                />\r\n              </Link>\r\n            </>\r\n          ) : row.status === \"Item(s) successfully Returned\" ? (\r\n            <>\r\n              {/* <Link to={`/job_add/${row._id}?tabKey=comRet`}> */}\r\n              <img\r\n                src={mini_full}\r\n                alt=\"active\"\r\n                style={iconS}\r\n                className=\"me-1 mb-1\"\r\n              />\r\n              {/* </Link> */}\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </>\r\n      ),\r\n      allowOverflow: true,\r\n      maxWidth: \"7rem\",\r\n      minWidth: \"2rem\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      <div className=\"d-flex align-align-items-center justify-content-between mt-3 mb-3\">\r\n        <h5 className=\"head_title\">Notification</h5>\r\n      </div>\r\n      {/* data satrt */}\r\n\r\n      <div>\r\n        {isLoading ? (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: \"100%\",\r\n            }}\r\n          >\r\n            <Spinerr />\r\n          </div>\r\n        ) : data.length === 0 ? (\r\n          <p>There is no data to show.</p>\r\n        ) : (\r\n          <ClientDataTable columns={columns} data={data} />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JobNotification;\r\n","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Job.js",["3844","3845","3846","3847","3848"],"import \"@styles/react/apps/app-users.scss\";\r\nimport ClientDataTable from \"./table\";\r\n// import './client.css';\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./table.css\";\r\nimport Select from \"react-select\";\r\nimport { Col, Row, Spinner, Tooltip } from \"react-bootstrap\";\r\nimport active from \"../../Admin/assests/icons/active.png\";\r\nimport jobIcon from \"../../Admin/assests/add_new_job.svg\";\r\nimport qr_code from \"../../Admin/assests/qr_code.png\";\r\nimport document from \"../../Admin/assests/document.svg\";\r\nimport cube from \"../../Admin/assests/cube.svg\";\r\nimport mini_truck from \"../../Admin/assests/mini-truck.svg\";\r\nimport mini_full from \"../../Admin/assests/mini-full.svg\";\r\nimport check from \"../../Admin/assests/check.png\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport {\r\n  UncontrolledButtonDropdown,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Form,\r\n  Input,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport { MoreHorizontal, Trash, Edit2 } from \"react-feather\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Alert,\r\n} from \"reactstrap\";\r\n\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n// for spinner\r\nimport Spinerr from \"../../views/components/spinners/SpinnerGrowing\";\r\nimport { log } from \"@craco/craco/lib/logger\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nconst iconS = {\r\n  width: \"16px\",\r\n  height: \"16px\",\r\n};\r\nconst icon_sizee = {\r\n  width: \"45px\",\r\n  height: \"45px\",\r\n};\r\n\r\nconst JobPage = () => {\r\n  const [defaultData_, setDefaultData_] = useState(\"\");\r\n\r\n  // states for update and insert data\r\n\r\n  const [branch, setBranch] = useState(\"\");\r\n  const [group, setGroup] = useState(\"\");\r\n  const [job_no, setJob_no] = useState(\"\");\r\n  const [client, setClient] = useState(\"\");\r\n  const [job_name, setJob_name] = useState(\"\");\r\n  const [job_address, setJob_address] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [load_rating, setLoad_rating] = useState(\"\");\r\n  const [drawing_numbers, setDrawing_numbers] = useState(\"\");\r\n  const [platforms, setPlatforms] = useState(\"\");\r\n  const [open_work, setOpen_work] = useState(\"\");\r\n  const [purpose, setPurpose] = useState(\"\");\r\n  const [day_hire, setDay_hire] = useState(\"false\");\r\n  const [status, setStatus] = useState(\"Completed\");\r\n\r\n  useEffect(() => {\r\n    if (defaultData_) {\r\n      setBranch(defaultData_.branch);\r\n      setGroup(defaultData_.group);\r\n      setJob_no(defaultData_.job_no);\r\n      setClient(defaultData_.client);\r\n      setJob_name(defaultData_.job_name);\r\n      setJob_address(defaultData_.job_address);\r\n      setDescription(defaultData_.description);\r\n      setLoad_rating(defaultData_.load_rating);\r\n      setDrawing_numbers(defaultData_.drawing_numbers);\r\n      setPlatforms(defaultData_.platforms);\r\n      setOpen_work(defaultData_.open_work);\r\n      setPurpose(defaultData_.purpose);\r\n      setDay_hire(defaultData_.day_hire);\r\n      setStatus(defaultData_.status);\r\n    }\r\n  }, [defaultData_]);\r\n\r\n  // post data\r\n\r\n  const postData = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      !branch ||\r\n      !group ||\r\n      !job_no ||\r\n      !client ||\r\n      !job_name ||\r\n      !job_address ||\r\n      !description ||\r\n      !load_rating ||\r\n      !drawing_numbers ||\r\n      !platforms ||\r\n      !open_work ||\r\n      !purpose\r\n    ) {\r\n      toast.error(\"Please fill out all required fields.\");\r\n      return;\r\n    }\r\n    setBranch(\"\");\r\n    setGroup(\"\");\r\n    setJob_no(\"\");\r\n    setClient(\"\");\r\n    setJob_name(\"\");\r\n    setJob_address(\"\");\r\n    setDescription(\"\");\r\n    setLoad_rating(\"\");\r\n    setDrawing_numbers(\"\");\r\n    setPlatforms(\"\");\r\n    setOpen_work(\"\");\r\n    setPurpose(\"\");\r\n    setDay_hire(\"\");\r\n    // setStatus(\"\");\r\n\r\n    axios\r\n      .post(`${global.BASEURL}createRecord/jobs`, {\r\n        branch,\r\n        group,\r\n        job_no,\r\n        client,\r\n        job_name,\r\n        job_address,\r\n        description,\r\n        load_rating,\r\n        drawing_numbers,\r\n        platforms,\r\n        open_work,\r\n        purpose,\r\n        day_hire,\r\n        status,\r\n      })\r\n      .then(() => {\r\n        toggleLargeModal();\r\n        getData();\r\n        toast.success(\"Data added successfully.\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error adding data: \", error);\r\n        toast.error(\"Failed to add data.\"); // Show error toast\r\n      });\r\n  };\r\n\r\n  // get data\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // show data start code\r\n  const [data, setData] = useState([]);\r\n  console.log(\"data is \", data[0]?.client.name);\r\n\r\n  function getData() {\r\n    setIsLoading(true);\r\n    axios\r\n      .post(`${global.BASEURL}getRecords/jobs`)\r\n      .then((res) => {\r\n        setData(res.data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data: \", error);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false); // Hide spinner after data is fetched\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    branchDataGet();\r\n    clientDataGet();\r\n  }, []);\r\n\r\n  // update data\r\n\r\n  const updateData = (e) => {\r\n    e.preventDefault();\r\n    const itemId = defaultData_?._id;\r\n\r\n    axios\r\n      .post(`${global.BASEURL}updateRecord/jobs`, {\r\n        id: itemId,\r\n        branch,\r\n        group,\r\n        job_no,\r\n        client,\r\n        job_name,\r\n        job_address,\r\n        description,\r\n        load_rating,\r\n        drawing_numbers,\r\n        platforms,\r\n        open_work,\r\n        purpose,\r\n        day_hire,\r\n        // status,\r\n      })\r\n      .then(() => {\r\n        editModal();\r\n        getData();\r\n        toast.success(\"Data updated successfully.\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error updating client:\", error);\r\n      });\r\n  };\r\n\r\n  // delet data\r\n\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [deleteItemId, setDeleteItemId] = useState(null);\r\n\r\n  const handleDelete = (id) => {\r\n    setDeleteItemId(id);\r\n    setIsDeleteModalOpen(true);\r\n  };\r\n\r\n  const handleDeleteConfirm = () => {\r\n    // Close the delete confirmation modal\r\n    setIsDeleteModalOpen(false);\r\n\r\n    // Delete the item\r\n    if (deleteItemId) {\r\n      axios\r\n        .post(`${global.BASEURL}deleteRecord/jobs`, {\r\n          id: deleteItemId,\r\n        })\r\n        .then(() => {\r\n          getData();\r\n          toast.success(\"Data deleted successfully.\"); // Show success toast\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error deleting data:\", error);\r\n          toast.error(\"Failed to delete data.\"); // Show error toast\r\n        });\r\n    }\r\n  };\r\n\r\n  // get branch data from api\r\n\r\n  const [branchData, setBranchData] = useState([]);\r\n\r\n  function branchDataGet() {\r\n    axios\r\n      .post(`${global.BASEURL}getBranches`)\r\n      .then((res) => {\r\n        // setBranchData(res.data.data);\r\n        const data = res.data.data;\r\n        const arr = [];\r\n        for (let index = 0; index < data.length; index++) {\r\n          const element = data[index];\r\n          const obj = { value: element.name, label: element.name };\r\n          arr.push(obj);\r\n        }\r\n        setBranchData(arr);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data: \", error);\r\n      });\r\n  }\r\n  const [clientData, setClientData] = useState([]);\r\n\r\n  function clientDataGet() {\r\n    axios\r\n      .post(`${global.BASEURL}getClients`)\r\n      .then((res) => {\r\n        // setBranchData(res.data.data);\r\n        const data = res.data.data;\r\n        const arr = [];\r\n        for (let index = 0; index < data.length; index++) {\r\n          const element = data[index];\r\n          const obj = { value: element.name, label: element.name };\r\n          arr.push(obj);\r\n        }\r\n        setClientData(arr);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data: \", error);\r\n      });\r\n  }\r\n\r\n  // chnage status with modal complete\r\n  const [completeModal, setCompleteModal] = useState(false);\r\n  const [selectedRowId, setSelectedRowId] = useState(null);\r\n  const [lastStatus, setLastStatus] = useState(\"\");\r\n\r\n  const togglaModalCompl = (rowId, preStatus) => {\r\n    setSelectedRowId(rowId);\r\n    setCompleteModal(true);\r\n    setLastStatus(preStatus);\r\n  };\r\n\r\n  const moveToPickJobs = (e, status) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(`${global.BASEURL}updateRecord/jobs`, {\r\n        status: status,\r\n        id: selectedRowId,\r\n        last_status: lastStatus,\r\n      })\r\n      .then(() => {\r\n        getData();\r\n        toast.success(\"Data Update successfully.\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error updated data:\", error);\r\n        toast.error(\"Failed to delete data.\");\r\n      });\r\n\r\n    setCompleteModal(false);\r\n  };\r\n\r\n  const lastStatusUpdate = (lastStatus, id) => {\r\n    // Yahan aap apni API request bhej sakte hain\r\n    axios\r\n      .post(`${global.BASEURL}updateRecord/jobs`, {\r\n        id: id,\r\n        status: lastStatus,\r\n      })\r\n      .then(() => {\r\n        getData();\r\n        // Status update ho gaya, aap kuch aur actions le sakte hain\r\n        console.log(\"Status updated successfully.\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error updating status:\", error);\r\n      });\r\n  };\r\n\r\n  // ended api section\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Sr.no\",\r\n      selector: (row, index) => index + 1,\r\n      sortable: \"true\",\r\n      maxWidth: \"2rem\",\r\n    },\r\n    {\r\n      name: \"Job No\",\r\n      selector: (row) => row.job_no,\r\n      sortable: \"true\",\r\n      maxWidth: \"2rem\",\r\n    },\r\n    {\r\n      name: \"Client\",\r\n      selector: (row) => row.client.name || row.client,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n\r\n    {\r\n      name: \"Job Name\",\r\n      selector: (row) => row.job_name,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n\r\n    {\r\n      name: \"Job Address\",\r\n      selector: (row) => row.job_address,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Job Docket\",\r\n      selector: (row) => (\r\n        <div className=\"d-flex align-items-center flex-wrap\">\r\n          {row.status === \"Move to Picklist\" ? (\r\n            <>\r\n              <OverlayTrigger\r\n                placement=\"top\"\r\n                overlay={<Tooltip id=\"tooltip1\">Pick Order</Tooltip>}\r\n              >\r\n                <Link to={`/job_add/${row._id}?tabKey=cube`}>\r\n                  <img\r\n                    src={cube}\r\n                    alt=\"active\"\r\n                    style={iconS}\r\n                    className=\"me-1 mb-1\"\r\n                  />\r\n                </Link>\r\n              </OverlayTrigger>\r\n            </>\r\n          ) : row.status === \"Create Delivery Docket\" ? (\r\n            <>\r\n              <OverlayTrigger\r\n                placement=\"top\"\r\n                overlay={\r\n                  <Tooltip id=\"tooltip1\">Create Delivery Docket</Tooltip>\r\n                }\r\n              >\r\n                <Link to={`/job_add/${row._id}?tabKey=deli`}>\r\n                  <img\r\n                    src={mini_truck}\r\n                    alt=\"active\"\r\n                    style={iconS}\r\n                    className=\"me-1 mb-1\"\r\n                  />\r\n                </Link>\r\n              </OverlayTrigger>\r\n            </>\r\n          ) : row.status === \"Item(s) successfully Returned\" ? (\r\n            <>\r\n              <OverlayTrigger\r\n                placement=\"top\"\r\n                overlay={<Tooltip id=\"tooltip1\">Create Picklist</Tooltip>}\r\n              >\r\n                <Link to={`/job_add/${row._id}?tabKey=desiredKey`}>\r\n                  <img\r\n                    src={document}\r\n                    alt=\"active\"\r\n                    style={iconS}\r\n                    className=\"me-1 mb-1\"\r\n                  />\r\n                </Link>\r\n              </OverlayTrigger>\r\n              <OverlayTrigger\r\n                placement=\"top\"\r\n                overlay={<Tooltip id=\"tooltip1\">Delivery</Tooltip>}\r\n              >\r\n                <Link to={`/job_add/${row._id}?tabKey=ret`}>\r\n                  <img\r\n                    src={mini_full}\r\n                    alt=\"active\"\r\n                    style={iconS}\r\n                    className=\"me-1 mb-1\"\r\n                  />\r\n                </Link>\r\n              </OverlayTrigger>\r\n            </>\r\n          ) : row.status === \"Delivery Succesfully\" ? (\r\n            <>\r\n              <OverlayTrigger\r\n                placement=\"top\"\r\n                overlay={<Tooltip id=\"tooltip1\">Delivery</Tooltip>}\r\n              >\r\n                <Link to={`/job_add/${row._id}?tabKey=ret`}>\r\n                  <img\r\n                    src={mini_full}\r\n                    alt=\"active\"\r\n                    style={iconS}\r\n                    className=\"me-1 mb-1\"\r\n                  />\r\n                </Link>\r\n              </OverlayTrigger>\r\n              <OverlayTrigger\r\n                placement=\"top\"\r\n                overlay={<Tooltip id=\"tooltip1\">Pick Order</Tooltip>}\r\n              >\r\n                <Link to={`/job_add/${row._id}?tabKey=cube`}>\r\n                  <img\r\n                    src={cube}\r\n                    alt=\"active\"\r\n                    style={iconS}\r\n                    className=\"me-1 mb-1\"\r\n                  />\r\n                </Link>\r\n              </OverlayTrigger>\r\n            </>\r\n          ) : row.status === \"Complete\" ? (\r\n            <></>\r\n          ) : (\r\n            <OverlayTrigger\r\n              placement=\"top\"\r\n              overlay={<Tooltip id=\"tooltip1\">Create Picklist</Tooltip>}\r\n            >\r\n              <Link to={`/job_add/${row._id}?tabKey=desiredKey`}>\r\n                <img\r\n                  src={document}\r\n                  alt=\"active\"\r\n                  style={iconS}\r\n                  className=\"me-1 mb-1\"\r\n                />\r\n              </Link>\r\n            </OverlayTrigger>\r\n          )}\r\n        </div>\r\n      ),\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Inspection\",\r\n      cell: (row) => (\r\n        <div>\r\n          {row.day_hire === \"true\" ? (\r\n            <NavLink to={\"/hire_job\"} className=\"inspc cursor_p mb-2\">\r\n              Dray Hire\r\n            </NavLink>\r\n          ) : (\r\n            <NavLink to={\"/InspectionForm\"} className=\"inspc cursor_p mb-2\">\r\n              Inspection\r\n            </NavLink>\r\n          )}\r\n          {row.status !== \"Complete\" && (\r\n            <div\r\n              onClick={() => togglaModalCompl(row._id, row.status)}\r\n              className=\"comL cursor_p\"\r\n            >\r\n              Complete\r\n            </div>\r\n          )}\r\n        </div>\r\n      ),\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"QR Code\",\r\n      cell: (row) => (\r\n        <img\r\n          src={qr_code}\r\n          alt=\"active\"\r\n          width=\"30\"\r\n          height=\"30\"\r\n          className=\"me-1\"\r\n        />\r\n      ),\r\n\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      cell: (row) => (\r\n        <>\r\n          {row.status === \"Complete\" ? (\r\n            <h5\r\n              onClick={() => lastStatusUpdate(row.last_status, row._id)}\r\n              className=\"comp_div\"\r\n            >\r\n              {row.status}\r\n            </h5>\r\n          ) : (\r\n            <div className=\"d-flex align-items-center\">\r\n              <img\r\n                src={active}\r\n                alt=\"active\"\r\n                width=\"11\"\r\n                height=\"11\"\r\n                className=\"me-1\"\r\n              />\r\n              <span>Active</span>\r\n            </div>\r\n          )}\r\n        </>\r\n      ),\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      allowOverflow: true,\r\n      maxWidth: \"7rem\",\r\n      minWidth: \"2rem\",\r\n      cell: (row) => {\r\n        // modal edit\r\n        const id = row._id;\r\n\r\n        return (\r\n          <div className=\"d-flex justify-content-end w-100\">\r\n            <UncontrolledDropdown className=\"\">\r\n              <DropdownToggle className=\"pe-1 \" tag=\"span\">\r\n                <MoreHorizontal size={15} />\r\n              </DropdownToggle>\r\n              <DropdownMenu end>\r\n                <DropdownItem>\r\n                  <div\r\n                    onClick={() => editModal(row)}\r\n                    className=\"btn w-100 btn-white p-0 m-0\"\r\n                  >\r\n                    <span className=\"align-middle ms-50\">Edit</span>\r\n                  </div>\r\n                </DropdownItem>\r\n\r\n                <DropdownItem>\r\n                  <div\r\n                    onClick={() => handleDelete(row._id)}\r\n                    className=\"btn w-100 btn-white p-0 m-0\"\r\n                  >\r\n                    <span className=\"align-middle ms-50\">Delete</span>\r\n                  </div>\r\n                </DropdownItem>\r\n                <DropdownItem>\r\n                  <Link\r\n                    to={`/job_detail/${id}`}\r\n                    className=\"btn w-100 btn-white p-0 m-0\"\r\n                  >\r\n                    <span className=\"align-middle ms-50\">View</span>\r\n                  </Link>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  // edit client modal start\r\n\r\n  // end\r\n\r\n  const groupData = [\r\n    { label: \"NSW\", value: \"NSW\" },\r\n    { label: \"abc\", value: \"abc\" },\r\n    { label: \"asd\", value: \"asd\" },\r\n  ];\r\n\r\n  const [isLargeModalOpen, setIsLargeModalOpen] = useState(false);\r\n\r\n  const toggleLargeModal = () => {\r\n    setIsLargeModalOpen(!isLargeModalOpen);\r\n  };\r\n\r\n  // complete modal\r\n\r\n  // edit modal\r\n\r\n  const [iseditOpen, setiseditOpen] = useState(false);\r\n\r\n  const editModal = (result) => {\r\n    setDefaultData_(result);\r\n    setiseditOpen(!iseditOpen);\r\n  };\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n\r\n      <div className=\"d-flex align-align-items-center justify-content-between mt-3 mb-3\">\r\n        <h5 className=\"head_title\">Job</h5>\r\n\r\n        <div className=\"d-flex align-items-center\">\r\n          <div>\r\n            {/* <Link to=\"/job_add\"> */}\r\n            <Button\r\n              data-toggle=\"tooltip\"\r\n              onClick={toggleLargeModal}\r\n              className=\"default_btn\"\r\n            >\r\n              Add Job\r\n            </Button>\r\n\r\n            {/* </Link> */}\r\n\r\n            {/* add modal */}\r\n            <Modal\r\n              isOpen={isLargeModalOpen}\r\n              toggle={toggleLargeModal}\r\n              size=\"lg\"\r\n            >\r\n              <ModalHeader toggle={toggleLargeModal}></ModalHeader>\r\n              <ModalBody>\r\n                <div className=\"icon_div_main mb-2\">\r\n                  <img style={icon_sizee} src={jobIcon} alt=\"\" />\r\n                </div>\r\n                <h5 className=\"modal_title\">Add New Job</h5>\r\n                <span className=\"modal_subtitle\">\r\n                  Enter the correct details of the job which you want to add.\r\n                </span>\r\n                <Form className=\"d-flex flex-column p-1\">\r\n                  <Row>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Select the Branch to Assign this Job\r\n                      </Label>\r\n                      <Select\r\n                        onChange={(selectedOption) => {\r\n                          setBranch(selectedOption.value);\r\n                        }}\r\n                        isClearable={false}\r\n                        classNamePrefix=\"select\"\r\n                        options={branchData}\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Select the Group to Assign this Job\r\n                      </Label>\r\n                      <Select\r\n                        onChange={(selectedOption) =>\r\n                          setGroup(selectedOption.value)\r\n                        }\r\n                        isClearable={false}\r\n                        classNamePrefix=\"select\"\r\n                        options={groupData}\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Job Number\r\n                      </Label>\r\n                      <Input\r\n                        onChange={(e) => setJob_no(e.target.value)}\r\n                        type=\"number\"\r\n                        placeholder=\"Job Number\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">Client</Label>\r\n                      <Select\r\n                        onChange={(selectedOption) => {\r\n                          setClient(selectedOption.value);\r\n                        }}\r\n                        isClearable={false}\r\n                        classNamePrefix=\"select\"\r\n                        options={clientData}\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">Job Name</Label>\r\n                      <Input\r\n                        onChange={(e) => setJob_name(e.target.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"Job Name\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Job Address\r\n                      </Label>\r\n                      <Input\r\n                        onChange={(e) => setJob_address(e.target.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"Job Address\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Job Description\r\n                      </Label>\r\n                      <Input\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"Job Description\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Load Rating\r\n                      </Label>\r\n                      <Input\r\n                        onChange={(e) => setLoad_rating(e.target.value)}\r\n                        type=\"number\"\r\n                        placeholder=\"Load Rating\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Drawing Numbers\r\n                      </Label>\r\n                      <Input\r\n                        onChange={(e) => setDrawing_numbers(e.target.value)}\r\n                        type=\"number\"\r\n                        placeholder=\"Drawing  Numbers\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Total Number Of Platforms\r\n                      </Label>\r\n                      <Input\r\n                        onChange={(e) => setPlatforms(e.target.value)}\r\n                        type=\"number\"\r\n                        placeholder=\"Total Number Of Platforms\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Open Work Platforms No From The Ground Up\r\n                      </Label>\r\n                      <Input\r\n                        onChange={(e) => setOpen_work(e.target.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"Open Work Platforms\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Intended Purpose\r\n                      </Label>\r\n                      <Input\r\n                        onChange={(e) => setPurpose(e.target.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"Intended Purpose\"\r\n                      />\r\n                      <div className=\"mt-2\">\r\n                        <Input\r\n                          onChange={(e) => setDay_hire(e.target.checked)}\r\n                          className=\"me-1\"\r\n                          type=\"checkbox\"\r\n                        />\r\n                        <Label className=\"value_font input_label\">\r\n                          Dry Hire Job\r\n                        </Label>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <div className=\"mx-auto\">\r\n                    <Button\r\n                      onClick={postData}\r\n                      type=\"submit\"\r\n                      className=\"mt-2 default_btn\"\r\n                    >\r\n                      Add Job\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              </ModalBody>\r\n            </Modal>\r\n\r\n            {/* edit modal start */}\r\n\r\n            <Modal isOpen={iseditOpen} toggle={editModal} size=\"lg\">\r\n              <ModalHeader toggle={editModal}></ModalHeader>\r\n              <ModalBody>\r\n                <div className=\"icon_div_main mb-2\">\r\n                  <img style={icon_sizee} src={jobIcon} alt=\"\" />\r\n                </div>\r\n                <h5 className=\"modal_title\">Edit Job</h5>\r\n                <span className=\"modal_subtitle\">\r\n                  Eneter the correct details of your job which you want to edit.\r\n                </span>\r\n\r\n                <Form className=\"d-flex flex-column p-1\">\r\n                  <Row>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Select the Branch to Assign this Job\r\n                      </Label>\r\n                      <Select\r\n                        onChange={(selectedOption) =>\r\n                          setBranch(selectedOption.value)\r\n                        }\r\n                        value={branchData.find(\r\n                          (option) => option.label === branch\r\n                        )}\r\n                        isClearable={false}\r\n                        classNamePrefix=\"select\"\r\n                        options={branchData}\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Select the Group to Assign this Job\r\n                      </Label>\r\n                      <Select\r\n                        onChange={(selectedOption) =>\r\n                          setGroup(selectedOption.value)\r\n                        }\r\n                        value={groupData.find(\r\n                          (option) => option.value === group\r\n                        )}\r\n                        isClearable={false}\r\n                        classNamePrefix=\"select\"\r\n                        options={groupData}\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Job Number\r\n                      </Label>\r\n                      <Input\r\n                        defaultValue={defaultData_?.job_no}\r\n                        onChange={(e) => setJob_no(e.target.value)}\r\n                        type=\"number\"\r\n                        placeholder=\"Job Number\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">Client</Label>\r\n                      <Select\r\n                        onChange={(selectedOption) =>\r\n                          setClient(selectedOption.value)\r\n                        }\r\n                        value={clientData.find(\r\n                          (option) => option.label === client\r\n                        )}\r\n                        isClearable={false}\r\n                        classNamePrefix=\"select\"\r\n                        options={clientData}\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">Job Name</Label>\r\n                      <Input\r\n                        defaultValue={defaultData_?.job_name}\r\n                        onChange={(e) => setJob_name(e.target.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"Job Name\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Job Address\r\n                      </Label>\r\n                      <Input\r\n                        defaultValue={defaultData_?.job_address}\r\n                        onChange={(e) => setJob_address(e.target.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"Job Address\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Job Description\r\n                      </Label>\r\n                      <Input\r\n                        defaultValue={defaultData_?.description}\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"Job Description\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Load Rating\r\n                      </Label>\r\n                      <Input\r\n                        defaultValue={defaultData_?.load_rating}\r\n                        onChange={(e) => setLoad_rating(e.target.value)}\r\n                        type=\"number\"\r\n                        placeholder=\"Load Rating\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Drawing Numbers\r\n                      </Label>\r\n                      <Input\r\n                        defaultValue={defaultData_?.drawing_numbers}\r\n                        onChange={(e) => setDrawing_numbers(e.target.value)}\r\n                        type=\"number\"\r\n                        placeholder=\"Drawing  Numbers\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Total Number Of Platforms\r\n                      </Label>\r\n                      <Input\r\n                        defaultValue={defaultData_?.platforms}\r\n                        onChange={(e) => setPlatforms(e.target.value)}\r\n                        type=\"number\"\r\n                        placeholder=\"Total Number Of Platforms\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Open Work Platforms No From The Ground Up\r\n                      </Label>\r\n                      <Input\r\n                        defaultValue={defaultData_?.open_work}\r\n                        onChange={(e) => setOpen_work(e.target.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"Open Work Platforms\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Intended Purpose\r\n                      </Label>\r\n                      <Input\r\n                        defaultValue={defaultData_?.purpose}\r\n                        onChange={(e) => setPurpose(e.target.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"Intended Purpose\"\r\n                      />\r\n                      <div className=\"mt-2\">\r\n                        <Input\r\n                          checked={day_hire === \"true\"}\r\n                          onChange={(e) =>\r\n                            setDay_hire(e.target.checked ? \"true\" : \"false\")\r\n                          }\r\n                          className=\"me-1\"\r\n                          type=\"checkbox\"\r\n                        />\r\n                        <Label className=\"value_font input_label\">\r\n                          Dry Hire Job\r\n                        </Label>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <div className=\"mx-auto\">\r\n                    <Button\r\n                      onClick={updateData}\r\n                      type=\"submit\"\r\n                      className=\"mt-2 default_btn\"\r\n                    >\r\n                      Add Job\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              </ModalBody>\r\n            </Modal>\r\n\r\n            {/* delete modal */}\r\n\r\n            <Modal isOpen={isDeleteModalOpen}>\r\n              <ModalHeader>Delete Confirmation</ModalHeader>\r\n              <ModalBody>Are you sure you want to delete this item?</ModalBody>\r\n              <ModalFooter>\r\n                <Button\r\n                  color=\"danger\"\r\n                  onClick={() => handleDeleteConfirm(deleteItemId)}\r\n                >\r\n                  Yes\r\n                </Button>\r\n                <Button\r\n                  color=\"secondary\"\r\n                  onClick={() => setIsDeleteModalOpen(false)}\r\n                >\r\n                  No\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          </div>\r\n          <div className=\"ms-2\">\r\n            <UncontrolledButtonDropdown>\r\n              <DropdownToggle className=\"filter_btn\">\r\n                <img\r\n                  className=\"filter_img\"\r\n                  alt=\"\"\r\n                  src=\"./icons/filter_icon.png\"\r\n                />\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem\r\n                  href=\"/\"\r\n                  tag=\"a\"\r\n                  className=\"text-center\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  <span className=\"\">All</span>\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  href=\"/\"\r\n                  tag=\"a\"\r\n                  className=\"text-center\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  New User\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  href=\"/\"\r\n                  tag=\"a\"\r\n                  className=\"text-center\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  Active User\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  href=\"/\"\r\n                  tag=\"a\"\r\n                  className=\"text-center\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  Blocked User\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledButtonDropdown>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* table start */}\r\n      <div>\r\n        {isLoading ? (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: \"100%\",\r\n            }}\r\n          >\r\n            <Spinerr />\r\n          </div>\r\n        ) : data.length === 0 ? (\r\n          <p>There is no data to show.</p>\r\n        ) : (\r\n          <ClientDataTable columns={columns} data={data} />\r\n        )}\r\n      </div>\r\n\r\n      {/* compelet modal start */}\r\n\r\n      <Modal\r\n        isOpen={completeModal}\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        toggle={togglaModalCompl}\r\n        size=\"sm\"\r\n        centered\r\n      >\r\n        <ModalHeader toggle={togglaModalCompl}></ModalHeader>\r\n        <ModalBody className=\"d-flex align-items-center justify-content-center flex-column\">\r\n          <div className=\"circle_div d-flex align-items-center justify-content-center mb-3\">\r\n            <img src={check} alt=\"\" />\r\n          </div>\r\n          <h5>Job Completed!</h5>\r\n          <Button\r\n            onClick={(e) => moveToPickJobs(e, \"Complete\")}\r\n            type=\"submit\"\r\n            className=\"mt-2 default_btn\"\r\n          >\r\n            Ok\r\n          </Button>\r\n        </ModalBody>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JobPage;\r\n","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\InventoryOrder.js",["3849","3850"],"import \"@styles/react/apps/app-users.scss\";\r\n// import './client.css';\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./table.css\";\r\nimport Select from \"react-select\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport inventory_order2 from \"../../Admin/assests/side_icon/inventory_order2.png\";\r\n\r\nimport {\r\n  Form,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\n// tostify\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n// for spinner\r\nimport Spinerr from \"../../views/components/spinners/SpinnerGrowing\";\r\n\r\n// drag and drop code\r\n\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\n\r\nconst DraggableCol = ({ item, index, moveItem }) => {\r\n  const [, ref] = useDrag({\r\n    type: \"COL\",\r\n    item: { index },\r\n  });\r\n\r\n  const [, drop] = useDrop({\r\n    accept: \"COL\",\r\n    hover: (draggedItem) => {\r\n      if (draggedItem.index !== index) {\r\n        moveItem(draggedItem.index, index);\r\n        draggedItem.index = index;\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Col\r\n      className=\"mb-2\"\r\n      xl=\"3\"\r\n      lg=\"4\"\r\n      md=\"6\"\r\n      key={index}\r\n      ref={(node) => ref(drop(node))}\r\n    >\r\n      <div className=\"d-flex align-items-center\">\r\n        <div className=\"branc_count\">\r\n          <h5>{item.quantity}</h5>\r\n        </div>\r\n        <div className=\"branc_contnt\">\r\n          <h5>\r\n            {item.name} {item.weight}\r\n          </h5>\r\n        </div>\r\n      </div>\r\n    </Col>\r\n  );\r\n};\r\n\r\nconst InventoryOrder = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [branch_code, setBranch_code] = useState(\"\");\r\n  const [quantity, setQuantity] = useState(\"\");\r\n  const [weight, setWeight] = useState(\"\");\r\n  const [status, setStatus] = useState(\"Instock\");\r\n\r\n  // post data\r\n\r\n  const postData = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!name || !branch_code || !quantity || !weight) {\r\n      toast.error(\"Please fill out all required fields.\");\r\n      return;\r\n    }\r\n    setName(\"\");\r\n    setBranch_code(\"\");\r\n    setQuantity(\"\");\r\n    setWeight(\"\");\r\n    // setStatus(\"\");\r\n\r\n    axios\r\n      .post(`${global.BASEURL}createInventory`, {\r\n        name,\r\n        branch_code,\r\n        quantity,\r\n        weight,\r\n        status,\r\n      })\r\n      .then(() => {\r\n        toggleLargeModal();\r\n        getData();\r\n        toast.success(\"Data added successfully.\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error adding data: \", error);\r\n        toast.error(\"Failed to add data.\"); // Show error toast\r\n      });\r\n  };\r\n\r\n  // get data\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  // for spiner\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [selectedBranch, setSelectedBranch] = useState(\"all\"); // Default value \"all\" for All Branches\r\n\r\n  function getData() {\r\n    setIsLoading(true);\r\n\r\n    axios\r\n      .post(`${global.BASEURL}getInventory`)\r\n      .then((response) => {\r\n        const data = response.data.data;\r\n        const filteredData =\r\n          selectedBranch === \"all\"\r\n            ? data\r\n            : data.filter((item) => item.branch_code === selectedBranch);\r\n        setData(filteredData);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data: \", error);\r\n        setIsLoading(false);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    getData();\r\n  }, [selectedBranch]);\r\n\r\n  // end\r\n\r\n  // dynamic branch\r\n\r\n  const [branchData, setBranchData] = useState([]);\r\n\r\n  function branchDataGet() {\r\n    axios\r\n      .post(`${global.BASEURL}getBranches`)\r\n      .then((res) => {\r\n        setBranchData(res.data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data: \", error);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    branchDataGet();\r\n  }, []);\r\n\r\n  // Step 2: Add state for managing modal visibility\r\n  const [isLargeModalOpen, setIsLargeModalOpen] = useState(false);\r\n\r\n  const toggleLargeModal = () => {\r\n    setIsLargeModalOpen(!isLargeModalOpen);\r\n  };\r\n\r\n  // drag code\r\n\r\n  const moveItem = (fromIndex, toIndex) => {\r\n    const updatedData = [...data];\r\n    const [movedItem] = updatedData.splice(fromIndex, 1);\r\n    updatedData.splice(toIndex, 0, movedItem);\r\n    setData(updatedData);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n\r\n      <div className=\"d-flex align-items-center justify-content-between md_column mt-3 mb-3\">\r\n        <h5 className=\"head_title\">\r\n          Inventory Order\r\n          <span style={{ fontSize: \"20px\" }}>/ Inventory Sort Order</span>\r\n        </h5>\r\n        <div className=\"d-flex align-items-center\">\r\n          <div>\r\n            <Button className=\"default_btn\" onClick={toggleLargeModal}>\r\n              Add New Inventory\r\n            </Button>\r\n          </div>\r\n          <div style={{ width: \"12rem\" }} className=\"ms-2\">\r\n            <Select\r\n              onChange={(selectedOption) => {\r\n                setSelectedBranch(selectedOption.value);\r\n              }}\r\n              isClearable={false}\r\n              classNamePrefix=\"select\"\r\n              options={[\r\n                { label: \"All Branches\", value: \"all\" }, // Custom option\r\n                ...branchData.map((branch) => ({\r\n                  label: branch.name,\r\n                  value: branch.name,\r\n                })),\r\n              ]}\r\n            />\r\n          </div>\r\n\r\n          {/* add  modal */}\r\n          <Modal\r\n            isOpen={isLargeModalOpen}\r\n            toggle={toggleLargeModal} // Use the correct toggle function for the large modal\r\n            size=\"lg\"\r\n          >\r\n            <ModalHeader\r\n              toggle={toggleLargeModal} // Use the correct toggle function for the large modal\r\n            ></ModalHeader>\r\n            <ModalBody>\r\n              <div className=\"icon_div_main mb-2\">\r\n                <img className=\"icon_sizee\" src={inventory_order2} alt=\"\" />\r\n              </div>\r\n              <h5 className=\"modal_title\">Add Inventory Item</h5>\r\n              <span className=\"modal_subtitle\">\r\n                Enter the correct details of the item which you want to add.\r\n              </span>\r\n\r\n              <Form className=\"d-flex flex-column p-1\">\r\n                <Row>\r\n                  <Col className=\"mb-2\" lg=\"12\">\r\n                    <Label className=\"value_font input_label\">\r\n                      Select Branch*\r\n                    </Label>\r\n                    <Select\r\n                      onChange={(selectedOption) => {\r\n                        setBranch_code(selectedOption.value);\r\n                      }}\r\n                      isClearable={false}\r\n                      classNamePrefix=\"select\"\r\n                      options={branchData.map((branch) => ({\r\n                        label: branch.name,\r\n                        value: branch.name,\r\n                      }))}\r\n                    />\r\n                  </Col>\r\n                  <Col className=\"mb-2\" lg=\"12\">\r\n                    <Row>\r\n                      <Col lg=\"6\" md=\"12\" className=\"mb-2\">\r\n                        <Label className=\"value_font input_label\">\r\n                          Item Name*\r\n                        </Label>\r\n                        <Input\r\n                          onChange={(e) => setName(e.target.value)}\r\n                          value={name}\r\n                          type=\"text\"\r\n                          placeholder=\"Item Name*\"\r\n                        />\r\n                      </Col>\r\n                      <Col lg=\"6\" md=\"12\">\r\n                        <Row>\r\n                          <Col lg=\"6\" md=\"12\" className=\"mb-2\">\r\n                            <Label className=\"value_font input_label\">\r\n                              Quantity*\r\n                            </Label>\r\n                            <Input\r\n                              onChange={(e) => setQuantity(e.target.value)}\r\n                              value={quantity}\r\n                              type=\"number\"\r\n                              placeholder=\"Quantity*\"\r\n                            />\r\n                          </Col>\r\n                          <Col lg=\"6\" md=\"12\" className=\"mb-2\">\r\n                            <Label className=\"value_font input_label\">\r\n                              Weight (kg) Per Item*\r\n                            </Label>\r\n                            <Input\r\n                              onChange={(e) => setWeight(e.target.value)}\r\n                              value={weight}\r\n                              type=\"number\"\r\n                              placeholder=\"Weight (kg) Per Item*\"\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                </Row>\r\n                <div className=\"mx-auto\">\r\n                  <Button\r\n                    onClick={postData}\r\n                    type=\"submit\"\r\n                    className=\"mt-2 default_btn\"\r\n                  >\r\n                    Create\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </ModalBody>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div>\r\n          {isLoading ? (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                height: \"100%\",\r\n              }}\r\n            >\r\n              <Spinerr />\r\n            </div>\r\n          ) : data.length === 0 ? (\r\n            <p>There is no data to show.</p>\r\n          ) : (\r\n            <>\r\n              <Row>\r\n                {data.map((item, index) => (\r\n                  <DraggableCol\r\n                    key={index}\r\n                    item={item}\r\n                    index={index}\r\n                    moveItem={moveItem}\r\n                  />\r\n                ))}\r\n              </Row>\r\n              <div className=\"d-flex align-items-center justify-content-center mt-2 mb-2\">\r\n                <button className=\"default_btn sub_btn\">Save</button>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InventoryOrder;\r\n","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Inventory.js",["3851","3852","3853","3854","3855","3856","3857","3858","3859","3860","3861","3862"],"import \"@styles/react/apps/app-users.scss\";\r\nimport ClientDataTable from \"./table\";\r\n// import './client.css';\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./table.css\";\r\nimport Select from \"react-select\";\r\nimport { Breadcrumb, Card, Col, Row, Spinner } from \"react-bootstrap\";\r\nimport active from \"../../Admin/assests/icons/active.png\";\r\nimport block from \"../../Admin/assests/icons/block.png\";\r\nimport branches2 from \"../../Admin/assests/side_icon/branches2.png\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  UncontrolledButtonDropdown,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Form,\r\n  Input,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport { MoreHorizontal, Trash, Edit2 } from \"react-feather\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Alert,\r\n} from \"reactstrap\";\r\n\r\nconst InventoryPage = () => {\r\n  let data = [\r\n    {\r\n      srno: \"09\",\r\n      Branch_Name: \"Eleven Dev-Branch 1\",\r\n      item_name: \"Alum Ladder 3.6m\",\r\n      owned: \"30 pcs\",\r\n      in_stock: \"15 pcs\",\r\n      weight_item: \"10 kg\",\r\n      total_weight: \"300 kg\",\r\n      on_site: \"15 pcs\",\r\n      status: \"Instock\",\r\n    },\r\n    {\r\n      srno: \"09\",\r\n      Branch_Name: \"Eleven Dev-Branch 1\",\r\n      item_name: \"Alum Ladder 3.6m\",\r\n      owned: \"30 pcs\",\r\n      in_stock: \"15 pcs\",\r\n      weight_item: \"10 kg\",\r\n      total_weight: \"300 kg\",\r\n      on_site: \"15 pcs\",\r\n      status: \"out of stock\",\r\n    },\r\n    \r\n  ];\r\n\r\n\r\n  const title = \"Clients\";\r\n  const columns = [\r\n    {\r\n      name: \"Sr.no\",\r\n      selector: (row) => row.srno,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Item Name\",\r\n      selector: (row) => row.item_name,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Owned\",\r\n      selector: (row) => row.owned,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n\r\n    {\r\n      name: \"In Stock\",\r\n      selector: (row) => row.in_stock,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Weight (per Item)\",\r\n      selector: (row) => row.weight_item,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Total Weight\",\r\n      selector: (row) => row.total_weight,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"On Site\",\r\n      selector: (row) => row.on_site,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    \r\n    {\r\n      name: \"Status\",\r\n      cell: (row) => (\r\n        <div className=\"d-flex align-items-center\">\r\n          {row.status === \"Instock\" ? (\r\n            <>\r\n              <img\r\n                src={active}\r\n                alt=\"active\"\r\n                width=\"11\"\r\n                height=\"11\"\r\n                className=\"me-1\"\r\n              />\r\n              <span>{row.status}</span>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <img\r\n                src={block}\r\n                alt=\"block\"\r\n                width=\"11\"\r\n                height=\"11\"\r\n                className=\"me-1\"\r\n              />\r\n              <span>{row.status}</span>\r\n            </>\r\n          )}\r\n        </div>\r\n      ),\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      allowOverflow: true,\r\n      maxWidth: \"7rem\",\r\n      minWidth: \"2rem\",\r\n      cell: () => {\r\n        // modal edit\r\n\r\n        return (\r\n          <div className=\"d-flex justify-content-end w-100\">\r\n            <UncontrolledDropdown className=\"\">\r\n              <DropdownToggle className=\"pe-1 \" tag=\"span\">\r\n                <MoreHorizontal size={15} />\r\n              </DropdownToggle>\r\n              <DropdownMenu end>\r\n                <DropdownItem>\r\n                  <Link\r\n                    outline\r\n                    // onClick={toggleLargeModaledit}\r\n                    className=\"btn btn-white p-0 m-0\"\r\n                  >\r\n                    <span className=\"align-middle ms-50\">Edit</span>\r\n                  </Link>\r\n                </DropdownItem>\r\n\r\n                <DropdownItem>\r\n                  <span className=\"align-middle ms-50\">Delete</span>\r\n                </DropdownItem>\r\n                <DropdownItem>\r\n                     <span className=\"align-middle ms-50\">Inventory</span>\r\n                </DropdownItem>\r\n                <DropdownItem>\r\n                  <span className=\"align-middle ms-50\">Damage Stock</span>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  // edit client modal start\r\n\r\n  // end\r\n  const selectState = [\r\n    { label: \"NSW\", value: \"NSW\" },\r\n    { label: \"abc\", value: \"abc\" },\r\n    { label: \"asd\", value: \"asd\" },\r\n  ];\r\n  const selectStaus = [\r\n    { label: \"Active\", value: \"Active\" },\r\n    { label: \"Un Active\", value: \"Un Active\" },\r\n  ];\r\n\r\n  // Step 2: Add state for managing modal visibility\r\n  const [isLargeModalOpen, setIsLargeModalOpen] = useState(false);\r\n\r\n  const toggleLargeModal = () => {\r\n    setIsLargeModalOpen(!isLargeModalOpen);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex align-align-items-center justify-content-between mt-3 mb-3\">\r\n        <h5 className=\"head_title\"> Branch / <span style={{fontSize:'20px'}}>Branches / Inventory</span></h5>\r\n        <div className=\"d-flex align-items-center\">\r\n          <div>\r\n            <Button className=\"default_btn\" outline onClick={toggleLargeModal}>\r\n            Add New Inventory\r\n            </Button>\r\n\r\n            {/* add client modal */}\r\n            <Modal\r\n              isOpen={isLargeModalOpen}\r\n              toggle={toggleLargeModal} // Use the correct toggle function for the large modal\r\n              size=\"lg\"\r\n            >\r\n              <ModalHeader\r\n                toggle={toggleLargeModal} // Use the correct toggle function for the large modal\r\n              ></ModalHeader>\r\n              <ModalBody>\r\n                <div className=\"icon_div_main mb-2\">\r\n                  <img className=\"icon_sizee\" src={branches2} alt=\"\" />\r\n                </div>\r\n                <h5 className=\"modal_title\">Add New Branch</h5>\r\n                <span className=\"modal_subtitle\">\r\n                Enter the correct details of the branch which you want to add.\r\n                </span>\r\n\r\n                <Form className=\"d-flex flex-column p-1\">\r\n                  <Row>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">Name</Label>\r\n                      <Input type=\"text\" placeholder=\"Name\" />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                      Branch Code\r\n                      </Label>\r\n                      <Input type=\"number\" placeholder=\"Branch Code\" />\r\n                    </Col>\r\n\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                      Location\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        placeholder=\"Location\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Phone Number\r\n                      </Label>\r\n                      <Input type=\"tel\" placeholder=\"Phone Number\" />\r\n                    </Col>\r\n                  </Row>\r\n                  <div className=\"mx-auto\">\r\n                    <Button\r\n                      onClick={toggleLargeModal}\r\n                      type=\"submit\"\r\n                      className=\"mt-2 default_btn\"\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              </ModalBody>\r\n            </Modal>\r\n          </div>\r\n          <div className=\"ms-2\">\r\n            <UncontrolledButtonDropdown>\r\n              <DropdownToggle className=\"filter_btn\">\r\n                <img className=\"filter_img\" src=\"./icons/filter_icon.png\" />\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem\r\n                  href=\"/\"\r\n                  tag=\"a\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  All\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  href=\"/\"\r\n                  tag=\"a\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  New User\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  href=\"/\"\r\n                  tag=\"a\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  Active User\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  href=\"/\"\r\n                  tag=\"a\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  Blocked User\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledButtonDropdown>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"\">\r\n        <ClientDataTable columns={columns} data={data} title={title} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InventoryPage;\r\n","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Damage_stock.js",["3863"],"import \"@styles/react/apps/app-users.scss\";\r\nimport ClientDataTable from \"./table\";\r\nimport \"./table.css\";\r\n// import './client.css';\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\";\r\nimport React from \"react\";\r\nimport \"./table.css\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst Damage_stock = () => {\r\n  let data = [\r\n    {\r\n      srno: \"09\",\r\n      item_name: \"Atif\",\r\n      qty: \"1\",\r\n      job_no: \"223\",\r\n      branch: \"test\",\r\n    },\r\n  ];\r\n  const columns = [\r\n    {\r\n      name: \"Sr.no\",\r\n      cell: (row, index) => index + 1,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Item Name\",\r\n      selector: (row) => row.item_name,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Qty\",\r\n      selector: (row) => row.qty,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Job Number\",\r\n      selector: (row) => row.job_no,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Branch\",\r\n      selector: (row) => row.branch,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex align-align-items-center justify-content-between mt-3 mb-3\">\r\n        <h5 className=\"head_title\">Damage Stock</h5>\r\n        <div className=\"d-flex align-items-center\"></div>\r\n      </div>\r\n      {/* data satrt */}\r\n      <div>\r\n        <ClientDataTable columns={columns} data={data} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Damage_stock;\r\n","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Branches.js",["3864"],"import \"@styles/react/apps/app-users.scss\";\r\nimport ClientDataTable from \"./table\";\r\nimport \"./table.css\";\r\n// import './client.css';\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./table.css\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport active from \"../../Admin/assests/icons/active.png\";\r\nimport block from \"../../Admin/assests/icons/block.png\";\r\nimport branches2 from \"../../Admin/assests/side_icon/branches2.png\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  UncontrolledButtonDropdown,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Form,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\nimport { MoreHorizontal } from \"react-feather\";\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n// for spinner\r\nimport Spinerr from \"../../views/components/spinners/SpinnerGrowing\";\r\n\r\nconst Branches = () => {\r\n  const [defaultData_, setDefaultData_] = useState(\"\");\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [branch_code, setBranch_code] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (defaultData_) {\r\n      setName(defaultData_.name);\r\n      setBranch_code(defaultData_.branch_code);\r\n      setLocation(defaultData_.location);\r\n      setPhone(defaultData_.phone);\r\n      setStatus(defaultData_.status);\r\n    }\r\n  }, [defaultData_]);\r\n\r\n  // post data\r\n\r\n  const postData = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!name || !branch_code || !location || !phone) {\r\n      toast.error(\"Please fill out all required fields.\");\r\n      return;\r\n    }\r\n\r\n    if (!isPhoneValidAustralia(phone)) {\r\n      toast.error(\"Enter valid Phone address.\");\r\n      return;\r\n    }\r\n    setName(\"\");\r\n    setBranch_code(\"\");\r\n    setLocation(\"\");\r\n    setPhone(\"\");\r\n    setStatus(\"\");\r\n\r\n    axios\r\n      .post(`${global.BASEURL}createBranch`, {\r\n        name,\r\n        branch_code,\r\n        location,\r\n        phone,\r\n        status,\r\n      })\r\n      .then(() => {\r\n        toggleLargeModal();\r\n        getData();\r\n        toast.success(\"Data added successfully.\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error adding data: \", error);\r\n        toast.error(\"Failed to add data.\"); // Show error toast\r\n      });\r\n  };\r\n\r\n  // DATA GET\r\n\r\n  // for spiner to get data\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  function getData() {\r\n    setIsLoading(true);\r\n    axios\r\n      .post(`${global.BASEURL}getBranches`)\r\n      .then((res) => {\r\n        setData(res.data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data: \", error);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false); // Hide spinner after data is fetched\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  // delet data\r\n\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [deleteItemId, setDeleteItemId] = useState(null);\r\n\r\n  function handleDelete(id) {\r\n    setDeleteItemId(id);\r\n    setIsDeleteModalOpen(true);\r\n  }\r\n\r\n  const handleDeleteConfirm = () => {\r\n    // Close the delete confirmation modal\r\n    setIsDeleteModalOpen(false);\r\n\r\n    // Delete the item\r\n    if (deleteItemId) {\r\n      axios\r\n        .post(`${global.BASEURL}deleteBranch`, {\r\n          id: deleteItemId,\r\n        })\r\n        .then(() => {\r\n          getData();\r\n          toast.success(\"Data deleted successfully.\"); // Show success toast\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error deleting data:\", error);\r\n          toast.error(\"Failed to delete data.\"); // Show error toast\r\n        });\r\n    }\r\n  };\r\n\r\n  // update data\r\n\r\n  const updateData = (e) => {\r\n    e.preventDefault();\r\n    const itemId = defaultData_?._id;\r\n\r\n    if (!isPhoneValidAustralia(phone)) {\r\n      toast.error(\"Enter valid Phone address.\");\r\n      return;\r\n    }\r\n    axios\r\n      .post(`${global.BASEURL}updateBranch`, {\r\n        id: itemId,\r\n        name,\r\n        branch_code,\r\n        location,\r\n        phone,\r\n        status,\r\n      })\r\n      .then(() => {\r\n        editModalBranch();\r\n        getData();\r\n        toast.success(\"Data updated successfully.\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error updating client:\", error);\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Sr.no\",\r\n      cell: (row, index) => index + 1,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Branch Name\",\r\n      selector: (row) => row.name,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Branch Code\",\r\n      selector: (row) => row.branch_code,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Location\",\r\n      selector: (row) => row.location,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      cell: (row) => (\r\n        <div className=\"d-flex align-items-center\">\r\n          {row.status === \"Active\" ? (\r\n            <>\r\n              <img\r\n                src={active}\r\n                alt=\"active\"\r\n                width=\"11\"\r\n                height=\"11\"\r\n                className=\"me-1\"\r\n              />\r\n              <span>{row.status}</span>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <img\r\n                src={block}\r\n                alt=\"block\"\r\n                width=\"11\"\r\n                height=\"11\"\r\n                className=\"me-1\"\r\n              />\r\n              <span>{row.status}</span>\r\n            </>\r\n          )}\r\n        </div>\r\n      ),\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      allowOverflow: true,\r\n      maxWidth: \"7rem\",\r\n      minWidth: \"2rem\",\r\n      cell: (row) => {\r\n        // modal edit\r\n\r\n        return (\r\n          <div className=\"d-flex justify-content-end w-100\">\r\n            <UncontrolledDropdown className=\"\">\r\n              <DropdownToggle className=\"pe-1 \" tag=\"span\">\r\n                <MoreHorizontal size={15} />\r\n              </DropdownToggle>\r\n              <DropdownMenu className=\"scrolDrop\" end>\r\n                <DropdownItem>\r\n                  <div\r\n                    onClick={() => editModalBranch(row)}\r\n                    className=\"btn btn-white w-100 p-0 m-0\"\r\n                  >\r\n                    <span className=\"align-middle ms-50\">Edit</span>\r\n                  </div>\r\n                </DropdownItem>\r\n\r\n                <DropdownItem>\r\n                  <div\r\n                    onClick={() => handleDelete(row._id)}\r\n                    className=\"btn btn-white w-100 p-0 m-0\"\r\n                  >\r\n                    <span className=\"align-middle ms-50\">Delete</span>\r\n                  </div>\r\n                </DropdownItem>\r\n                <DropdownItem>\r\n                  <Link\r\n                    to={{\r\n                      pathname: \"/branch_inventory\",\r\n                      search: `?bN=${row.name}`,\r\n                    }}\r\n                  >\r\n                    <div className=\"btn btn-white w-100 p-0 m-0\">\r\n                      <span className=\"align-middle ms-50\">Inventory</span>\r\n                    </div>\r\n                  </Link>\r\n                </DropdownItem>\r\n                <DropdownItem>\r\n                  <Link to={\"/damage_stock\"}>\r\n                    <div className=\"btn btn-white w-100 p-0 m-0\">\r\n                      <span className=\"align-middle ms-50\">Damage Stock</span>\r\n                    </div>\r\n                  </Link>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  // edit client modal start\r\n\r\n  // end\r\n\r\n  // Step 2: Add state for managing modal visibility\r\n  const [branchEdit, setbranchEdit] = useState(false);\r\n\r\n  const editModalBranch = (result) => {\r\n    setDefaultData_(result);\r\n    setbranchEdit(!branchEdit);\r\n  };\r\n\r\n  const [isLargeModalOpen, setIsLargeModalOpen] = useState(false);\r\n  const toggleLargeModal = () => {\r\n    setIsLargeModalOpen(!isLargeModalOpen);\r\n  };\r\n\r\n  const statuss = [\r\n    { label: \"Active\", value: \"Active\" },\r\n    { label: \"Un Active\", value: \"Un Active\" },\r\n  ];\r\n\r\n  //  phone validation\r\n  const [phoneError, setPhoneError] = useState(false);\r\n  const isPhoneValidAustralia = (phone) => {\r\n    // Regular expression for Australian phone numbers (example: +61 1234567890)\r\n    const phoneRegex = /(?:\\+?61)?(?:\\(0\\)[23478]|\\(?0?[23478]\\)?)\\d{8}/i;\r\n    return phoneRegex.test(phone);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      <div className=\"d-flex align-align-items-center justify-content-between mt-3 mb-3\">\r\n        <h5 className=\"head_title\">\r\n          Branch / <span style={{ fontSize: \"20px\" }}>Branches</span>\r\n        </h5>\r\n        <div className=\"d-flex align-items-center\">\r\n          <div>\r\n            <Button className=\"default_btn\" onClick={toggleLargeModal}>\r\n              Add New Branch\r\n            </Button>\r\n\r\n            {/* add branches modal */}\r\n            <Modal\r\n              isOpen={isLargeModalOpen}\r\n              toggle={toggleLargeModal}\r\n              size=\"lg\"\r\n            >\r\n              <ModalHeader toggle={toggleLargeModal}></ModalHeader>\r\n              <ModalBody>\r\n                <div className=\"icon_div_main mb-2\">\r\n                  <img className=\"icon_sizee\" src={branches2} alt=\"\" />\r\n                </div>\r\n                <h5 className=\"modal_title\">Add New Branch</h5>\r\n                <span className=\"modal_subtitle\">\r\n                  Enter the correct details of the branch which you want to add.\r\n                </span>\r\n\r\n                <Form className=\"d-flex flex-column p-1\">\r\n                  <Row>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">Name</Label>\r\n                      <Input\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"Name\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Branch Code\r\n                      </Label>\r\n                      <Input\r\n                        onChange={(e) => setBranch_code(e.target.value)}\r\n                        type=\"number\"\r\n                        placeholder=\"Branch Code\"\r\n                      />\r\n                    </Col>\r\n\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">Location</Label>\r\n                      <Input\r\n                        onChange={(e) => setLocation(e.target.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"Location\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Phone Number\r\n                      </Label>\r\n                      <Input\r\n                        onBlur={(e) => {\r\n                          const phoneValue = e.target.value;\r\n                          setPhone(phoneValue);\r\n                          if (!isPhoneValidAustralia(phoneValue)) {\r\n                            setPhoneError(true);\r\n                          } else {\r\n                            setPhoneError(false);\r\n                          }\r\n                        }}\r\n                        type=\"tel\"\r\n                        placeholder=\"Phone Number\"\r\n                      />\r\n                      {phoneError && (\r\n                        <div className=\"error_mssg\">Invalid phone number</div>\r\n                      )}\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">Status</Label>\r\n                      <Select\r\n                        onChange={(selectedOption) =>\r\n                          setStatus(selectedOption.value)\r\n                        }\r\n                        isClearable={false}\r\n                        classNamePrefix=\"select\"\r\n                        options={statuss}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <div className=\"mx-auto\">\r\n                    <Button\r\n                      onClick={postData}\r\n                      type=\"submit\"\r\n                      className=\"mt-2 default_btn\"\r\n                    >\r\n                      Add Branch\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              </ModalBody>\r\n            </Modal>\r\n\r\n            {/* edit modal */}\r\n\r\n            <Modal isOpen={branchEdit} toggle={editModalBranch} size=\"lg\">\r\n              <ModalHeader toggle={editModalBranch}></ModalHeader>\r\n              <ModalBody>\r\n                <div className=\"icon_div_main mb-2\">\r\n                  <img className=\"icon_sizee\" src={branches2} alt=\"\" />\r\n                </div>\r\n                <h5 className=\"modal_title\">Edit New Branch</h5>\r\n                <span className=\"modal_subtitle\">\r\n                  Enter the correct details of the branch which you want to\r\n                  edit.\r\n                </span>\r\n\r\n                <Form className=\"d-flex flex-column p-1\">\r\n                  <Row>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">Name</Label>\r\n                      <Input\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        defaultValue={defaultData_?.name}\r\n                        type=\"text\"\r\n                        placeholder=\"Name\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Branch Code\r\n                      </Label>\r\n                      <Input\r\n                        onChange={(e) => setBranch_code(e.target.value)}\r\n                        defaultValue={defaultData_?.branch_code}\r\n                        type=\"number\"\r\n                        placeholder=\"Branch Code\"\r\n                      />\r\n                    </Col>\r\n\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">Location</Label>\r\n                      <Input\r\n                        onChange={(e) => setLocation(e.target.value)}\r\n                        defaultValue={defaultData_?.location}\r\n                        type=\"text\"\r\n                        placeholder=\"Location\"\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">\r\n                        Phone Number\r\n                      </Label>\r\n                      <Input\r\n                        onBlur={(e) => {\r\n                          const phoneValue = e.target.value;\r\n                          setPhone(phoneValue);\r\n                          if (!isPhoneValidAustralia(phoneValue)) {\r\n                            setPhoneError(true);\r\n                          } else {\r\n                            setPhoneError(false);\r\n                          }\r\n                        }}\r\n                        defaultValue={defaultData_?.phone}\r\n                        type=\"tel\"\r\n                        placeholder=\"Phone Number\"\r\n                      />\r\n                      {phoneError && (\r\n                        <div className=\"error_mssg\">Invalid phone number</div>\r\n                      )}\r\n                    </Col>\r\n                    <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                      <Label className=\"value_font input_label\">Status</Label>\r\n                      <Select\r\n                        onChange={(selectedOption) =>\r\n                          setStatus(selectedOption.value)\r\n                        }\r\n                        value={statuss.find(\r\n                          (option) => option.value === status\r\n                        )}\r\n                        isClearable={false}\r\n                        classNamePrefix=\"select\"\r\n                        options={statuss}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <div className=\"mx-auto\">\r\n                    <Button\r\n                      onClick={updateData}\r\n                      type=\"submit\"\r\n                      className=\"mt-2 default_btn\"\r\n                    >\r\n                      Update\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              </ModalBody>\r\n            </Modal>\r\n\r\n            {/* delet modal */}\r\n\r\n            <Modal isOpen={isDeleteModalOpen}>\r\n              <ModalHeader>Delete Confirmation</ModalHeader>\r\n              <ModalBody>Are you sure you want to delete this item?</ModalBody>\r\n              <ModalFooter>\r\n                <Button\r\n                  color=\"danger\"\r\n                  onClick={() => handleDeleteConfirm(deleteItemId)}\r\n                >\r\n                  Yes\r\n                </Button>\r\n                <Button\r\n                  color=\"secondary\"\r\n                  onClick={() => setIsDeleteModalOpen(false)}\r\n                >\r\n                  No\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          </div>\r\n          <div className=\"ms-2\">\r\n            <UncontrolledButtonDropdown>\r\n              <DropdownToggle className=\"filter_btn\">\r\n                <img className=\"filter_img\" src=\"./icons/filter_icon.png\" />\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem\r\n                  href=\"/\"\r\n                  tag=\"a\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  All\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  href=\"/\"\r\n                  tag=\"a\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  New User\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  href=\"/\"\r\n                  tag=\"a\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  Active User\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  href=\"/\"\r\n                  tag=\"a\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  Blocked User\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledButtonDropdown>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* data satrt */}\r\n      <div>\r\n        {isLoading ? (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: \"100%\",\r\n            }}\r\n          >\r\n            <Spinerr />\r\n          </div>\r\n        ) : data.length === 0 ? (\r\n          <p>There is no data to show.</p>\r\n        ) : (\r\n          <ClientDataTable columns={columns} data={data} />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Branches;\r\n","D:\\Utecho\\Scaff-cert\\src\\Admin\\Pages\\Clients.js",["3865","3866","3867","3868","3869","3870"],"import \"@styles/react/apps/app-users.scss\";\r\nimport ClientDataTable from \"./table\";\r\n// import './client.css';\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./table.css\";\r\nimport Select from \"react-select\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport active from \"../../Admin/assests/icons/active.png\";\r\nimport block from \"../../Admin/assests/icons/block.png\";\r\nimport userIcon from \"../../Admin/assests/client_icon_modal.png\";\r\n// import AutoComplete from \"react-google-autocomplete\";\r\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\r\nimport {\r\n  UncontrolledButtonDropdown,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Form,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  InputGroup,\r\n} from \"reactstrap\";\r\nimport { MoreHorizontal } from \"react-feather\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n// for spinner\r\nimport Spinerr from \"../../views/components/spinners/SpinnerGrowing\";\r\nimport { log } from \"@craco/craco/lib/logger\";\r\n\r\nconst AutoFill = ({\r\n  setAddress,\r\n  setPhone,\r\n  setCity,\r\n  setState,\r\n  selectState,\r\n  setZip_code,\r\n  setStatus,\r\n  AutoComplete,\r\n  setCountry,\r\n  setEmail,\r\n  setEmailSecondary,\r\n  postData,\r\n  isLargeModalOpen,\r\n  toggleLargeModal,\r\n  GooglePlacesAutocomplete,\r\n  selectStaus,\r\n  setName,\r\n  iseditOpen,\r\n  editModal,\r\n  defaultData_,\r\n  state,\r\n  status,\r\n  updateData,\r\n  city,\r\n  address,\r\n  country,\r\n  zip_code,\r\n  isEmailValid,\r\n  setEmailError,\r\n  emailError,\r\n  isPhoneValidAustralia,\r\n  setPhoneError,\r\n  phoneError,\r\n  isSEmailValid,\r\n  setSEmailError,\r\n  sEmailError,\r\n  setJoining_date,\r\n  joining_date,\r\n}) => {\r\n  const [value, setValue] = useState(null);\r\n\r\n  return (\r\n    <>\r\n      {/* add client data modal */}\r\n      <Modal isOpen={isLargeModalOpen} toggle={toggleLargeModal} size=\"lg\">\r\n        <ModalHeader toggle={toggleLargeModal}></ModalHeader>\r\n        <ModalBody>\r\n          <div className=\"icon_div_main mb-2\">\r\n            <img className=\"icon_sizee\" src={userIcon} alt=\"\" />\r\n          </div>\r\n          <h5 className=\"modal_title\">Add New Client</h5>\r\n          <span className=\"modal_subtitle\">\r\n            Eneter the correct details of your client which you want to add.\r\n          </span>\r\n          <Form className=\"d-flex flex-column p-1\">\r\n            <Row>\r\n              <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                <Label className=\"value_font input_label\">Name</Label>\r\n                <Input\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"Name\"\r\n                />\r\n              </Col>\r\n              <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                <Label className=\"value_font input_label\">Email Address</Label>\r\n\r\n                <Input\r\n                  onBlur={(e) => {\r\n                    const emailValue = e.target.value;\r\n                    setEmail(emailValue);\r\n                    if (!isEmailValid(emailValue)) {\r\n                      setEmailError(true);\r\n                    } else {\r\n                      setEmailError(false);\r\n                    }\r\n                  }}\r\n                  type=\"email\"\r\n                  placeholder=\"Email Address\"\r\n                />\r\n                {emailError && (\r\n                  <div className=\"error_mssg\">Invalid email address</div>\r\n                )}\r\n              </Col>\r\n\r\n              <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                <Label className=\"value_font input_label\">\r\n                  Secondary Email Address\r\n                </Label>\r\n                <Input\r\n                  onChange={(e) => setEmailSecondary(e.target.value)}\r\n                  onBlur={(e) => {\r\n                    const emailValue = e.target.value;\r\n                    setEmailSecondary(emailValue);\r\n                    if (!isSEmailValid(emailValue)) {\r\n                      setSEmailError(true);\r\n                    } else {\r\n                      setSEmailError(false);\r\n                    }\r\n                  }}\r\n                  type=\"email\"\r\n                  placeholder=\"Secondary Email Address\"\r\n                />\r\n                {sEmailError && (\r\n                  <div className=\"error_mssg\">Invalid email address</div>\r\n                )}\r\n              </Col>\r\n              <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                <Label className=\"value_font input_label\">Joining Date</Label>\r\n                <Input\r\n                  onChange={(e) => setJoining_date(e.target.value)}\r\n                  type=\"date\"\r\n                />\r\n              </Col>\r\n              <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                <Label className=\"value_font input_label\">Phone Number</Label>\r\n                <Input\r\n                  onBlur={(e) => {\r\n                    const phoneValue = e.target.value;\r\n                    setPhone(phoneValue);\r\n                    if (!isPhoneValidAustralia(phoneValue)) {\r\n                      setPhoneError(true);\r\n                    } else {\r\n                      setPhoneError(false);\r\n                    }\r\n                  }}\r\n                  type=\"tel\"\r\n                  placeholder=\"Phone Number\"\r\n                />\r\n                {phoneError && (\r\n                  <div className=\"error_mssg\">Invalid phone number</div>\r\n                )}\r\n              </Col>\r\n              <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                <Label className=\"value_font input_label\">Address</Label>\r\n                <GooglePlacesAutocomplete\r\n                  className=\"form-control\"\r\n                  apiKey=\"AIzaSyBH0Ey-G2PbWkSCLyGG1A9TCg9LDPlzQpc\"\r\n                  onChange={(e) => setAddress(e.target.value)}\r\n                  selectProps={{\r\n                    value: address,\r\n                    onChange: (selectedPlace) => {\r\n                      const label = selectedPlace.label; // Extract the 'label' property\r\n                      setAddress(label); // Set the 'address' state with the extracted label\r\n                    },\r\n                  }}\r\n                  autocompletionRequest={{\r\n                    componentRestrictions: {\r\n                      country: \"AU\",\r\n                    },\r\n                  }}\r\n                />\r\n\r\n                {/* <AutoComplete\r\n                  onChange={(e) => setAddress(e.target.value)}\r\n                  className=\"form-control\"\r\n                  apiKey=\"AIzaSyBH0Ey-G2PbWkSCLyGG1A9TCg9LDPlzQpc\"\r\n                  onPlaceSelected={(place) => {\r\n                    const addressComponents = place.address_components;\r\n                    console.log(place.address_components);\r\n                    const city = addressComponents.find((component) =>\r\n                      component.types.includes(\"locality\")\r\n                    );\r\n\r\n                    const state = addressComponents.find((component) =>\r\n                      component.types.includes(\"administrative_area_level_1\")\r\n                    );\r\n\r\n                    const postalCode = addressComponents.find((component) =>\r\n                      component.types.includes(\"postal_code\")\r\n                    );\r\n\r\n                    const country = addressComponents.find((component) =>\r\n                      component.types.includes(\"country\")\r\n                    );\r\n\r\n                    if (city) {\r\n                      setCity(city.long_name);\r\n                    }\r\n                    if (state) {\r\n                      setState(state.short_name);\r\n                    }\r\n                    if (postalCode) {\r\n                      setZip_code(postalCode.long_name);\r\n                    }\r\n                    if (country) {\r\n                      setCountry(country.long_name);\r\n                    }\r\n\r\n                    setAddress(place.formatted_address);\r\n                  }}\r\n                  options={{\r\n                    types: [\"(regions)\"],\r\n                    componentRestrictions: { country: \"au\" },\r\n                  }}\r\n                /> */}\r\n              </Col>\r\n              <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                <Label className=\"value_font input_label\">City</Label>\r\n                <Input\r\n                  onChange={(e) => setCity(e.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"City\"\r\n                />\r\n              </Col>\r\n              <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                <Label className=\"value_font input_label\">State</Label>\r\n                <Select\r\n                  onChange={(selectedOption) => setState(selectedOption.value)}\r\n                  isClearable={false}\r\n                  classNamePrefix=\"select\"\r\n                  options={selectState}\r\n                />\r\n              </Col>\r\n              <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                <Label className=\"value_font input_label\">Zip Code</Label>\r\n                <Input\r\n                  onChange={(e) => setZip_code(e.target.value)}\r\n                  type=\"number\"\r\n                  placeholder=\"Zip Code\"\r\n                />\r\n              </Col>\r\n              <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                <Label className=\"value_font input_label\">Country</Label>\r\n                <Input\r\n                  onChange={(e) => setCountry(e.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"Country\"\r\n                />\r\n              </Col>\r\n              <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                <Label className=\"value_font input_label\">Status</Label>\r\n                <Select\r\n                  onChange={(selectedOption) => setStatus(selectedOption.value)}\r\n                  isClearable={false}\r\n                  classNamePrefix=\"select\"\r\n                  options={selectStaus}\r\n                />\r\n              </Col>\r\n              <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                <Label className=\"value_font input_label\">Password</Label>\r\n                <Input type=\"password\" placeholder=\"Password\" />\r\n              </Col>\r\n              <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                <Label className=\"value_font input_label\">Re Password</Label>\r\n                <Input type=\"password\" placeholder=\"Re Password\" />\r\n              </Col>\r\n            </Row>\r\n            <div className=\"mx-auto\">\r\n              <Button\r\n                onClick={postData}\r\n                type=\"submit\"\r\n                className=\"mt-2 default_btn\"\r\n              >\r\n                Add Client\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n\r\n      {/* edit client data modal  */}\r\n\r\n      <Modal isOpen={iseditOpen} toggle={editModal} size=\"lg\">\r\n        <ModalHeader toggle={editModal}></ModalHeader>\r\n        <ModalBody>\r\n          <div className=\"icon_div_main mb-2\">\r\n            <img className=\"icon_sizee\" src={userIcon} alt=\"\" />\r\n          </div>\r\n          <h5 className=\"modal_title\">Edit New Client</h5>\r\n          <span className=\"modal_subtitle\">\r\n            Eneter the correct details of your client which you want to edit.\r\n          </span>\r\n\r\n          <Form className=\"d-flex flex-column p-1\">\r\n            <Row>\r\n              <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                <Label className=\"value_font input_label\">Name</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder=\"Name\"\r\n                  defaultValue={defaultData_?.name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n              </Col>\r\n              <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                <Label className=\"value_font input_label\">Email Address</Label>\r\n                <Input\r\n                  onBlur={(e) => {\r\n                    const emailValue = e.target.value;\r\n                    setEmail(emailValue);\r\n                    if (!isEmailValid(emailValue)) {\r\n                      setEmailError(true);\r\n                    } else {\r\n                      setEmailError(false);\r\n                    }\r\n                  }}\r\n                  defaultValue={defaultData_?.email}\r\n                  type=\"email\"\r\n                  placeholder=\"Email Address\"\r\n                />\r\n                {emailError && (\r\n                  <div className=\"error_mssg\">Invalid email address</div>\r\n                )}\r\n              </Col>\r\n\r\n              <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                <Label className=\"value_font input_label\">\r\n                  Secondary Email Address\r\n                </Label>\r\n                <Input\r\n                  onChange={(e) => setEmailSecondary(e.target.value)}\r\n                  onBlur={(e) => {\r\n                    const emailValue = e.target.value;\r\n                    setEmailSecondary(emailValue);\r\n                    if (!isSEmailValid(emailValue)) {\r\n                      setSEmailError(true);\r\n                    } else {\r\n                      setSEmailError(false);\r\n                    }\r\n                  }}\r\n                  defaultValue={defaultData_?.emailSecondary}\r\n                  type=\"email\"\r\n                  placeholder=\"Secondary Email Address\"\r\n                />\r\n                {sEmailError && (\r\n                  <div className=\"error_mssg\">Invalid email address</div>\r\n                )}\r\n              </Col>\r\n              <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                <Label className=\"value_font input_label\">Joining Date</Label>\r\n                <Input\r\n                  onChange={(e) => setJoining_date(e.target.value)}\r\n                  defaultValue={defaultData_?.joining_date}\r\n                  type=\"date\"\r\n                />\r\n              </Col>\r\n              <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                <Label className=\"value_font input_label\">Phone Number</Label>\r\n                <Input\r\n                  onBlur={(e) => {\r\n                    const phoneValue = e.target.value;\r\n                    setPhone(phoneValue);\r\n                    if (!isPhoneValidAustralia(phoneValue)) {\r\n                      setPhoneError(true);\r\n                    } else {\r\n                      setPhoneError(false);\r\n                    }\r\n                  }}\r\n                  defaultValue={defaultData_?.phone}\r\n                  type=\"tel\"\r\n                  placeholder=\"Phone Number\"\r\n                />\r\n\r\n                {phoneError && (\r\n                  <div className=\"error_mssg\">Invalid phone number</div>\r\n                )}\r\n              </Col>\r\n              <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                <Label className=\"value_font input_label\">Address</Label>\r\n\r\n                <GooglePlacesAutocomplete\r\n                  className=\"form-control\"\r\n                  apiKey=\"AIzaSyBH0Ey-G2PbWkSCLyGG1A9TCg9LDPlzQpc\"\r\n                  onChange={(e) => setAddress(e.target.value)}\r\n                  defaultValue={defaultData_?.address}\r\n                  selectProps={{\r\n                    value: address,\r\n                    onChange: (selectedPlace) => {\r\n                      const label = selectedPlace.label;\r\n                      setAddress(label);\r\n                    },\r\n                  }}\r\n                  autocompletionRequest={{\r\n                    componentRestrictions: {\r\n                      country: \"AU\",\r\n                    },\r\n                  }}\r\n                />\r\n\r\n                {/* <AutoComplete\r\n                  onChange={(e) => setAddress(e.target.value)}\r\n                  defaultValue={defaultData_?.address}\r\n                  className=\"form-control\"\r\n                  apiKey=\"AIzaSyBH0Ey-G2PbWkSCLyGG1A9TCg9LDPlzQpc\"\r\n                  onPlaceSelected={(place) => {\r\n                    const addressComponents = place.address_components;\r\n                    console.log(place.address_components);\r\n\r\n                    const newCity = addressComponents.find((component) =>\r\n                      component.types.includes(\"locality\")\r\n                    );\r\n\r\n                    const newState = addressComponents.find((component) =>\r\n                      component.types.includes(\"administrative_area_level_1\")\r\n                    );\r\n\r\n                    const newPostalCode = addressComponents.find((component) =>\r\n                      component.types.includes(\"postal_code\")\r\n                    );\r\n\r\n                    const newCountry = addressComponents.find((component) =>\r\n                      component.types.includes(\"country\")\r\n                    );\r\n                      console.log(newCity);\r\n                    if (newCity) {\r\n                      setCity(newCity.long_name);\r\n                    }\r\n                    if (newState) {\r\n                      setState(newState.short_name);\r\n                    }\r\n                    if (newPostalCode) {\r\n                      setZip_code(newPostalCode.long_name);\r\n                    }\r\n                    if (newCountry) {\r\n                      setCountry(newCountry.long_name);\r\n                    }\r\n\r\n                    setAddress(place.formatted_address);\r\n                  }}\r\n                  options={{\r\n                    types: [\"(regions)\"],\r\n                    componentRestrictions: { country: \"au\" },\r\n                  }}\r\n                /> */}\r\n              </Col>\r\n              <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                <Label className=\"value_font input_label\">City</Label>\r\n                <Input\r\n                  onChange={(e) => setCity(e.target.value)}\r\n                  defaultValue={defaultData_?.city}\r\n                  type=\"text\"\r\n                  placeholder=\"City\"\r\n                />\r\n              </Col>\r\n              <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                <Label className=\"value_font input_label\">State</Label>\r\n                <Select\r\n                  onChange={(selectedOption) => setState(selectedOption.value)}\r\n                  value={selectState.find((option) => option.value === state)}\r\n                  isClearable={false}\r\n                  classNamePrefix=\"select\"\r\n                  options={selectState}\r\n                />\r\n              </Col>\r\n              <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                <Label className=\"value_font input_label\">Zip Code</Label>\r\n                <Input\r\n                  onChange={(e) => setZip_code(e.target.value)}\r\n                  defaultValue={defaultData_?.zip_code}\r\n                  type=\"number\"\r\n                  placeholder=\"Zip Code\"\r\n                />\r\n              </Col>\r\n              <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                <Label className=\"value_font input_label\">Country</Label>\r\n                <Input\r\n                  onChange={(e) => setCountry(e.target.value)}\r\n                  defaultValue={defaultData_?.country}\r\n                  type=\"text\"\r\n                  placeholder=\"Country\"\r\n                />\r\n              </Col>\r\n              <Col className=\"mb-2\" lg=\"6\" md=\"12\">\r\n                <Label className=\"value_font input_label\">Status</Label>\r\n                <Select\r\n                  onChange={(selectedOption) => setStatus(selectedOption.value)}\r\n                  value={selectStaus.find((option) => option.value === status)}\r\n                  isClearable={false}\r\n                  classNamePrefix=\"select\"\r\n                  options={selectStaus}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <div className=\"mx-auto\">\r\n              <Button\r\n                onClick={updateData}\r\n                type=\"submit\"\r\n                className=\"mt-2 default_btn\"\r\n              >\r\n                Update\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Clientpage = () => {\r\n  const [defaultData_, setDefaultData_] = useState(\"\");\r\n\r\n  // states for update and insert data\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailSecondary, setEmailSecondary] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [joining_date, setJoining_date] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n  const [zip_code, setZip_code] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n\r\n  // verror handle\r\n\r\n  // eror\r\n  useEffect(() => {\r\n    if (defaultData_) {\r\n      setName(defaultData_.name);\r\n      setEmail(defaultData_.email);\r\n      setEmailSecondary(defaultData_.emailSecondary);\r\n      setJoining_date(defaultData_.joining_date);\r\n      setPhone(defaultData_.phone);\r\n      setAddress(defaultData_.address);\r\n      setCity(defaultData_.city);\r\n      setState(defaultData_.state);\r\n      setZip_code(defaultData_.zip_code);\r\n      setCountry(defaultData_.country);\r\n      setStatus(defaultData_.status);\r\n    }\r\n  }, [defaultData_]);\r\n\r\n  // post data\r\n\r\n  // validatpn email and phone number\r\n  const [emailError, setEmailError] = useState(false);\r\n  const [sEmailError, setSEmailError] = useState(false);\r\n  const [phoneError, setPhoneError] = useState(false);\r\n\r\n  const isEmailValid = (email) => {\r\n    const emailRegex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\r\n    return emailRegex.test(email);\r\n  };\r\n  const isSEmailValid = (semail) => {\r\n    const emailRegex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\r\n    return emailRegex.test(semail);\r\n  };\r\n\r\n  const isPhoneValidAustralia = (phone) => {\r\n    // Regular expression for Australian phone numbers (example: +61 1234567890)\r\n    const phoneRegex = /(?:\\+?61)?(?:\\(0\\)[23478]|\\(?0?[23478]\\)?)\\d{8}/i;\r\n    return phoneRegex.test(phone);\r\n  };\r\n\r\n  // ended  validation\r\n\r\n  const postData = (e) => {\r\n    e.preventDefault();\r\n    // if (\r\n    //   !name ||\r\n    //   !email ||\r\n    //   !emailSecondary ||\r\n    //   !joining_date ||\r\n    //   !phone ||\r\n    //   !address ||\r\n    //   !city ||\r\n    //   !state ||\r\n    //   !zip_code ||\r\n    //   !country ||\r\n    //   !status\r\n    // ) {\r\n    //   toast.error(\"Please fill out all  fields.\");\r\n    //   return;\r\n    // }\r\n\r\n    // if (!isEmailValid(email)) {\r\n    //   toast.error(\"Enter valid email address.\");\r\n    //   return;\r\n    // }\r\n    // if (!isSEmailValid(email)) {\r\n    //   toast.error(\"Enter valid email address.\");\r\n    //   return;\r\n    // }\r\n    // if (!isPhoneValidAustralia(phone)) {\r\n    //   toast.error(\"Enter valid Phone address.\");\r\n    //   return;\r\n    // }\r\n\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setEmailSecondary(\"\");\r\n    setPhone(\"\");\r\n    setJoining_date(\"\");\r\n    setAddress(\"\");\r\n    setCity(\"\");\r\n    setState(\"\");\r\n    setZip_code(\"\");\r\n    setCountry(\"\");\r\n    setStatus(\"\");\r\n\r\n    axios\r\n      .post(`${global.BASEURL}createRecord/client`, {\r\n        name,\r\n        email,\r\n        joining_date,\r\n        emailSecondary,\r\n        phone,\r\n        address,\r\n        city,\r\n        state,\r\n        zip_code,\r\n        country,\r\n        status,\r\n      })\r\n      .then(() => {\r\n        toggleLargeModal();\r\n        getData();\r\n        toast.success(\"Data added successfully.\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error adding data: \", error);\r\n        toast.error(\"Failed to add data.\"); // Show error toast\r\n      });\r\n  };\r\n\r\n  // insert data end\r\n  // spinnere for get data\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // show data start code\r\n  const [data, setData] = useState([]);\r\n  const [selectedOption, setSelectedOption] = useState(\"All\");\r\n\r\n  function getData() {\r\n    setIsLoading(true);\r\n    axios\r\n      .post(`${global.BASEURL}getClients`)\r\n      .then((res) => {\r\n        const data = res.data.data;\r\n\r\n        if (selectedOption === \"New User\") {\r\n          const last5Records = data.slice(0, 3); // Get the last 5 records\r\n          setData(last5Records);\r\n        } else {\r\n          const filteredData = data.filter(\r\n            (item) => item.status === selectedOption || selectedOption === \"All\"\r\n          );\r\n          setData(filteredData);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data: \", error);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false); // Hide spinner after data is fetched\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [selectedOption]);\r\n\r\n  // delete api\r\n  // update data\r\n\r\n  const updateData = (e) => {\r\n    e.preventDefault();\r\n    const itemId = defaultData_?._id;\r\n    if (!isEmailValid(email)) {\r\n      toast.error(\"Enter valid email address.\");\r\n      return;\r\n    }\r\n    if (!isSEmailValid(email)) {\r\n      toast.error(\"Enter valid email address.\");\r\n      return;\r\n    }\r\n    if (!isPhoneValidAustralia(phone)) {\r\n      toast.error(\"Enter valid Phone address.\");\r\n      return;\r\n    }\r\n\r\n    axios\r\n      .post(`${global.BASEURL}updateRecord/client`, {\r\n        id: itemId,\r\n        name,\r\n        email,\r\n        emailSecondary,\r\n        joining_date,\r\n        phone,\r\n        address,\r\n        city,\r\n        state,\r\n        zip_code,\r\n        country,\r\n        status,\r\n      })\r\n      .then(() => {\r\n        editModal();\r\n        getData();\r\n        toast.success(\"Data updated successfully.\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error updating client:\", error);\r\n      });\r\n  };\r\n\r\n  // delet api start\r\n\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [deleteItemId, setDeleteItemId] = useState(null);\r\n\r\n  const handleDelete = (id) => {\r\n    setDeleteItemId(id);\r\n    setIsDeleteModalOpen(true);\r\n  };\r\n\r\n  const handleDeleteConfirm = () => {\r\n    // Close the delete confirmation modal\r\n    setIsDeleteModalOpen(false);\r\n\r\n    // Delete the item\r\n    if (deleteItemId) {\r\n      axios\r\n        .post(`${global.BASEURL}deleteClient`, {\r\n          id: deleteItemId,\r\n        })\r\n        .then(() => {\r\n          getData();\r\n          toast.success(\"Data deleted successfully.\"); // Show success toast\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error deleting data:\", error);\r\n          toast.error(\"Failed to delete data.\"); // Show error toast\r\n        });\r\n    }\r\n  };\r\n\r\n  // end delet api\r\n\r\n  let counter = 0;\r\n  const columns = [\r\n    {\r\n      name: \"Sr.no\",\r\n      selector: (row) => ++counter,\r\n      sortable: \"true\",\r\n      maxWidth: \"2rem\",\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: (row) => row.name,\r\n      sortable: \"true\",\r\n      maxWidth: \"3rem\",\r\n    },\r\n    {\r\n      name: \"Email\",\r\n      selector: (row) => row.email,\r\n      sortable: \"true\",\r\n      //   // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"Phone\",\r\n      selector: (row) => row.phone,\r\n      sortable: \"true\",\r\n      // maxWidth:\"4rem\"\r\n    },\r\n    {\r\n      name: \"Adress\",\r\n      selector: (row) => row.address,\r\n      sortable: \"true\",\r\n      // maxWidth:\"6rem\"\r\n    },\r\n    {\r\n      name: \"State\",\r\n      selector: (row) => row.state,\r\n      sortable: \"true\",\r\n      maxWidth: \"2rem\",\r\n    },\r\n    {\r\n      name: \"Joining Date\",\r\n      cell: (row) => row.joining_date,\r\n      sortable: \"true\",\r\n      maxWidth: \"4rem\",\r\n      width: \"10rem\",\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      cell: (row) => (\r\n        <div className=\"d-flex align-items-center\">\r\n          {row.status === \"Active\" ? (\r\n            <>\r\n              <img\r\n                src={active}\r\n                alt=\"active\"\r\n                width=\"11\"\r\n                height=\"11\"\r\n                className=\"me-1\"\r\n              />\r\n              <span>{row.status}</span>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <img\r\n                src={block}\r\n                alt=\"block\"\r\n                width=\"11\"\r\n                height=\"11\"\r\n                className=\"me-1\"\r\n              />\r\n              <span>{row.status}</span>\r\n            </>\r\n          )}\r\n        </div>\r\n      ),\r\n      sortable: true,\r\n      with: \"5rem\",\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      allowOverflow: true,\r\n      // maxWidth: \"7rem\",\r\n      // minWidth: \"2rem\",\r\n      cell: (row) => {\r\n        // modal edit\r\n\r\n        return (\r\n          <div className=\"d-flex  w-100\">\r\n            <UncontrolledDropdown className=\"\">\r\n              <DropdownToggle className=\"pe-1 \" tag=\"span\">\r\n                <MoreHorizontal size={15} />\r\n              </DropdownToggle>\r\n              <DropdownMenu end>\r\n                <DropdownItem>\r\n                  <div\r\n                    onClick={() => editModal(row)}\r\n                    outlinex\r\n                    className=\"btn btn-white w-100 p-0 m-0\"\r\n                  >\r\n                    <span className=\"align-middle ms-50\">Edit</span>\r\n                  </div>\r\n                </DropdownItem>\r\n\r\n                <DropdownItem>\r\n                  <div\r\n                    onClick={() => handleDelete(row._id)}\r\n                    className=\"btn btn-white w-100 p-0 m-0\"\r\n                  >\r\n                    <span className=\"align-middle ms-50\">Delete</span>\r\n                  </div>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  // sleect  option\r\n  const selectState = [\r\n    { label: \"NSW\", value: \"NSW\" },\r\n    { label: \"VIC\", value: \"VIC\" },\r\n    { label: \"QLD\", value: \"QLD\" },\r\n    { label: \"WA\", value: \"WA\" },\r\n    { label: \"SA\", value: \"SA\" },\r\n    { label: \"TAS\", value: \"TAS\" },\r\n  ];\r\n  const selectStaus = [\r\n    { label: \"Active\", value: \"Active\" },\r\n    { label: \"Block\", value: \"Block\" },\r\n  ];\r\n\r\n  // Step 2: Add state for managing modal visibility\r\n  const [iseditOpen, setiseditOpen] = useState(false);\r\n\r\n  const editModal = (result) => {\r\n    setDefaultData_(result);\r\n    setiseditOpen(!iseditOpen);\r\n  };\r\n\r\n  const [isLargeModalOpen, setIsLargeModalOpen] = useState(false);\r\n\r\n  const toggleLargeModal = () => {\r\n    setIsLargeModalOpen(!isLargeModalOpen);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* tostify  */}\r\n\r\n      <ToastContainer />\r\n\r\n      <div className=\"d-flex align-align-items-center justify-content-between mt-3 mb-3\">\r\n        <h5 className=\"head_title\"> Clients</h5>\r\n\r\n        <div className=\"d-flex align-items-center\">\r\n          <div>\r\n            <Button className=\"default_btn\" outline onClick={toggleLargeModal}>\r\n              Add Client\r\n            </Button>\r\n\r\n            {/* add client modal */}\r\n\r\n            <AutoFill\r\n              toggleLargeModal={toggleLargeModal}\r\n              isLargeModalOpen={isLargeModalOpen}\r\n              GooglePlacesAutocomplete={GooglePlacesAutocomplete}\r\n              setName={setName}\r\n              setEmail={setEmail}\r\n              setEmailSecondary={setEmailSecondary}\r\n              setPhone={setPhone}\r\n              setAddress={setAddress}\r\n              setCity={setCity}\r\n              setState={setState}\r\n              setZip_code={setZip_code}\r\n              setCountry={setCountry}\r\n              setStatus={setStatus}\r\n              selectState={selectState}\r\n              selectStaus={selectStaus}\r\n              postData={postData}\r\n              city={city}\r\n              country={country}\r\n              zip_code={zip_code}\r\n              state={state}\r\n              // validaion\r\n              emailError={emailError}\r\n              setEmailError={setEmailError}\r\n              isEmailValid={isEmailValid}\r\n              isPhoneValidAustralia={isPhoneValidAustralia}\r\n              setPhoneError={setPhoneError}\r\n              phoneError={phoneError}\r\n              setSEmailError={setSEmailError}\r\n              isSEmailValid={isSEmailValid}\r\n              sEmailError={sEmailError}\r\n              setJoining_date={setJoining_date}\r\n            />\r\n\r\n            {/* delete modal */}\r\n\r\n            <AutoFill\r\n              iseditOpen={iseditOpen}\r\n              editModal={editModal}\r\n              defaultData_={defaultData_}\r\n              state={state}\r\n              GooglePlacesAutocomplete={GooglePlacesAutocomplete}\r\n              selectState={selectState}\r\n              setName={setName}\r\n              setEmail={setEmail}\r\n              setEmailSecondary={setEmailSecondary}\r\n              setPhone={setPhone}\r\n              setAddress={setAddress}\r\n              setCity={setCity}\r\n              setState={setState}\r\n              setZip_code={setZip_code}\r\n              setCountry={setCountry}\r\n              setStatus={setStatus}\r\n              selectStaus={selectStaus}\r\n              status={status}\r\n              // AutoComplete={AutoComplete}\r\n              updateData={updateData}\r\n              // validation\r\n\r\n              emailError={emailError}\r\n              setEmailError={setEmailError}\r\n              isEmailValid={isEmailValid}\r\n              isPhoneValidAustralia={isPhoneValidAustralia}\r\n              setPhoneError={setPhoneError}\r\n              phoneError={phoneError}\r\n              setSEmailError={setSEmailError}\r\n              isSEmailValid={isSEmailValid}\r\n              sEmailError={sEmailError}\r\n              joining_date={joining_date}\r\n              setJoining_date={setJoining_date}\r\n            />\r\n\r\n            <Modal isOpen={isDeleteModalOpen}>\r\n              <ModalHeader>Delete Confirmation</ModalHeader>\r\n              <ModalBody>Are you sure you want to delete this item?</ModalBody>\r\n              <ModalFooter>\r\n                <Button\r\n                  color=\"danger\"\r\n                  onClick={() => handleDeleteConfirm(deleteItemId)}\r\n                >\r\n                  Yes\r\n                </Button>\r\n                <Button\r\n                  color=\"secondary\"\r\n                  onClick={() => setIsDeleteModalOpen(false)}\r\n                >\r\n                  No\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          </div>\r\n          <div className=\"ms-2\">\r\n            <UncontrolledButtonDropdown>\r\n              <DropdownToggle className=\"filter_btn\">\r\n                <img className=\"filter_img\" src=\"./icons/filter_icon.png\" />\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem\r\n                  tag=\"a\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    setSelectedOption(\"All\");\r\n                  }}\r\n                >\r\n                  All\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  tag=\"a\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    setSelectedOption(\"New User\");\r\n                  }}\r\n                >\r\n                  New User\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  tag=\"a\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    setSelectedOption(\"Active\");\r\n                  }}\r\n                >\r\n                  Active User\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  tag=\"a\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    setSelectedOption(\"Block\");\r\n                  }}\r\n                >\r\n                  Blocked User\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledButtonDropdown>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* table start */}\r\n      <div>\r\n        {isLoading ? (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: \"100%\",\r\n            }}\r\n          >\r\n            <Spinerr />\r\n          </div>\r\n        ) : data.length === 0 ? (\r\n          <p>There is no data to show.</p>\r\n        ) : (\r\n          <ClientDataTable columns={columns} data={data} />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Clientpage;\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\authentication\\ForgotPasswordCover.js",[],"D:\\Utecho\\Scaff-cert\\src\\navigation\\vertical\\charts.js",["3871","3872"],"// ** Icons Import\r\nimport { PieChart, Circle } from 'react-feather';\r\n\r\nconst navigationConfig = [\r\n  {\r\n    // header: 'Charts',\r\n  },\r\n  // {\r\n  //   id: 'charts',\r\n  //   title: 'Charts',\r\n  //   badge: 'light-danger',\r\n  //   badgeText: '3',\r\n  //   icon: <PieChart size={20} />,\r\n  //   // children: [\r\n  //   //   {\r\n  //   //     id: 'apex',\r\n  //   //     title: 'Apex',\r\n  //   //     icon: <Circle size={12} />,\r\n  //   //     navLink: '/charts/apex',\r\n  //   //   },\r\n  //   //   {\r\n  //   //     id: 'chartJs',\r\n  //   //     title: 'ChartJS',\r\n  //   //     icon: <Circle size={12} />,\r\n  //   //     navLink: '/charts/chartjs',\r\n  //   //   },\r\n  //   //   {\r\n  //   //     id: 'recharts',\r\n  //   //     title: 'Recharts',\r\n  //   //     icon: <Circle size={12} />,\r\n  //   //     navLink: '/charts/recharts',\r\n  //   //   },\r\n  //   // ],\r\n  // },\r\n];\r\n\r\nexport default navigationConfig;\r\n","D:\\Utecho\\Scaff-cert\\src\\navigation\\vertical\\others.js",["3873","3874","3875","3876","3877","3878","3879"],"// ** Icons Import\r\nimport { Menu, Circle, EyeOff, Folder, LifeBuoy, Shield } from 'react-feather'\r\n\r\nexport default []\r\n// {\r\n//   header: 'Misc'\r\n// },\r\n// {\r\n//   id: 'access-control',\r\n//   title: 'Access Control',\r\n//   icon: <Shield size={12} />,\r\n//   action: 'read',\r\n//   resource: 'ACL',\r\n//   navLink: '/access-control'\r\n// },\r\n// {\r\n//   id: 'menuLevels',\r\n//   title: 'Menu Levels',\r\n//   icon: <Menu size={20} />,\r\n//   children: [\r\n//     {\r\n//       id: 'secondLevel',\r\n//       title: 'Second Level 2.1',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: ''\r\n//     },\r\n//     {\r\n//       id: 'secondLevel1',\r\n//       title: 'Second Level 2.2',\r\n//       icon: <Circle size={12} />,\r\n//       children: [\r\n//         {\r\n//           id: 'ThirdLevel',\r\n//           title: 'Third Level 3.1',\r\n//           navLink: ''\r\n//         },\r\n//         {\r\n//           id: 'ThirdLevel1',\r\n//           title: 'Third Level 3.2',\r\n//           navLink: ''\r\n//         }\r\n//       ]\r\n//     }\r\n//   ]\r\n// },\r\n// {\r\n//   id: 'disabledMenu',\r\n//   title: 'Disabled Menu',\r\n//   icon: <EyeOff size={20} />,\r\n//   navLink: '#',\r\n//   disabled: true\r\n// },\r\n// {\r\n//   id: 'documentation',\r\n//   title: 'Documentation',\r\n//   icon: <Folder size={20} />,\r\n//   externalLink: true,\r\n//   newTab: true,\r\n//   navLink: 'https://pixinvent.com/demo/vuexy-react-admin-dashboard-template/documentation'\r\n// },\r\n// {\r\n//   id: 'raiseSupport',\r\n//   title: 'Raise Support',\r\n//   icon: <LifeBuoy size={20} />,\r\n//   externalLink: true,\r\n//   newTab: true,\r\n//   navLink: 'https://pixinvent.ticksy.com/'\r\n// }\r\n","D:\\Utecho\\Scaff-cert\\src\\navigation\\vertical\\tables.js",["3880","3881","3882","3883"],"// ** Icons Import\r\nimport { Server, Grid, Circle } from 'react-feather'\r\n\r\nexport default []\r\n// {\r\n//   id: 'tablesReactstrap',\r\n//   title: 'Table',\r\n//   icon: <Server size={20} />,\r\n//   navLink: '/tables/reactstrap'\r\n// },\r\n// {\r\n//   id: 'dataTable',\r\n//   title: 'DataTable',\r\n//   icon: <Grid size={20} />,\r\n//   children: [\r\n//     {\r\n//       id: 'dtBasic',\r\n//       title: 'Basic',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/datatables/basic'\r\n//     },\r\n//     {\r\n//       id: 'dtAdvance',\r\n//       title: 'Advanced',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/datatables/advance'\r\n//     }\r\n//   ]\r\n// }\r\n","D:\\Utecho\\Scaff-cert\\src\\navigation\\vertical\\forms.js",["3884","3885","3886","3887","3888","3889","3890"],"// ** Icons Import\r\nimport {\r\n  Copy,\r\n  Circle,\r\n  Box,\r\n  Package,\r\n  RotateCw,\r\n  AlertTriangle\r\n} from 'react-feather'\r\n\r\nexport default []\r\n\r\n// {\r\n//   header: 'Forms & Tables'\r\n// },\r\n// {\r\n//   id: 'formElements',\r\n//   title: 'Form Elements',\r\n//   icon: <Copy size={20} />,\r\n//   children: [\r\n//     {\r\n//       id: 'input',\r\n//       title: 'Input',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/forms/elements/input'\r\n//     },\r\n//     {\r\n//       id: 'inputGroup',\r\n//       title: 'Input Groups',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/forms/elements/input-group'\r\n//     },\r\n//     {\r\n//       id: 'inputMask',\r\n//       title: 'Input Mask',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/forms/elements/input-mask'\r\n//     },\r\n//     {\r\n//       id: 'textarea',\r\n//       title: 'Textarea',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/forms/elements/textarea'\r\n//     },\r\n//     {\r\n//       id: 'checkbox',\r\n//       title: 'Checkbox',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/forms/elements/checkbox'\r\n//     },\r\n//     {\r\n//       id: 'radio',\r\n//       title: 'Radio',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/forms/elements/radio'\r\n//     },\r\n//     {\r\n//       id: 'switch',\r\n//       title: 'Switch',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/forms/elements/switch'\r\n//     },\r\n//     {\r\n//       id: 'select',\r\n//       title: 'Select',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/forms/elements/select'\r\n//     },\r\n//     {\r\n//       id: 'numberInput',\r\n//       title: 'Number Input',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/forms/elements/number-input'\r\n//     },\r\n//     {\r\n//       id: 'fileUploader',\r\n//       title: 'File Uploader',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/forms/elements/file-uploader'\r\n//     },\r\n//     {\r\n//       id: 'quillEditor',\r\n//       title: 'Editor',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/forms/elements/editor'\r\n//     },\r\n//     {\r\n//       id: 'date_&_timePicker',\r\n//       title: 'Date & Time Picker',\r\n//       icon: <Circle size={12} />,\r\n//       navLink: '/forms/elements/pickers'\r\n//     }\r\n//   ]\r\n// },\r\n// {\r\n//   id: 'formLayouts',\r\n//   title: 'Form Layout',\r\n//   icon: <Box size={20} />,\r\n\r\n//   navLink: '/forms/layout/form-layout'\r\n// },\r\n// {\r\n//   id: 'wizard',\r\n//   title: 'Form Wizard',\r\n//   icon: <Package size={20} />,\r\n\r\n//   navLink: '/forms/wizard'\r\n// },\r\n// {\r\n//   id: 'formValidation',\r\n//   title: 'Form Validation',\r\n//   icon: <AlertTriangle size={12} />,\r\n//   navLink: '/forms/form-validation'\r\n// },\r\n// {\r\n//   id: 'formRepeater',\r\n//   title: 'Form Repeater',\r\n//   icon: <RotateCw size={20} />,\r\n//   navLink: '/forms/form-repeater'\r\n// }\r\n","D:\\Utecho\\Scaff-cert\\src\\navigation\\vertical\\pages.js",["3891","3892","3893","3894","3895"],"// ** Icons Import\r\nimport { FileText, Circle, Square, UserCheck } from 'react-feather'\r\n\r\nexport default []\r\n// {\r\n//   id: 'pages',\r\n//   title: 'Pages',\r\n//   icon: <FileText size={20} />,\r\n//   children: [\r\n//     {\r\n//       id: 'accountSettings',\r\n//       title: 'Account Settings',\r\n//       icon: <Circle size={12} />,\r\n//       permissions: ['admin', 'editor'],\r\n//       navLink: '/pages/account-settings'\r\n//     },\r\n//     {\r\n//       id: 'profile',\r\n//       title: 'Profile',\r\n//       icon: <Circle size={12} />,\r\n//       permissions: ['admin', 'editor'],\r\n//       navLink: '/pages/profile',\r\n//       collapsed: true\r\n//     },\r\n//     {\r\n//       id: 'faq',\r\n//       title: 'FAQ',\r\n//       icon: <Circle size={12} />,\r\n//       permissions: ['admin', 'editor'],\r\n//       navLink: '/pages/faq'\r\n//     },\r\n//     {\r\n//       id: 'knowledgeBase',\r\n//       title: 'Knowledge Base',\r\n//       icon: <Circle size={12} />,\r\n//       permissions: ['admin', 'editor'],\r\n//       navLink: '/pages/knowledge-base',\r\n//       parentOf: [\r\n//         '/pages/knowledge-base/category/questions',\r\n//         '/pages/knowledge-base/category'\r\n//       ]\r\n//     },\r\n//     {\r\n//       id: 'pricing',\r\n//       title: 'Pricing',\r\n//       icon: <Circle size={12} />,\r\n//       permissions: ['admin', 'editor'],\r\n//       navLink: '/pages/pricing'\r\n//     },\r\n//     {\r\n//       id: 'license',\r\n//       title: 'License',\r\n//       icon: <Circle size={12} />,\r\n//       permissions: ['admin', 'editor'],\r\n//       navLink: '/pages/license'\r\n//     },\r\n//     {\r\n//       id: 'api-key',\r\n//       title: 'API Key',\r\n//       icon: <Circle size={12} />,\r\n//       permissions: ['admin', 'editor'],\r\n//       navLink: '/pages/api-key'\r\n//     },\r\n//     {\r\n//       id: 'blog',\r\n//       title: 'Blog',\r\n//       icon: <Circle size={12} />,\r\n//       children: [\r\n//         {\r\n//           id: 'blogList',\r\n//           title: 'List',\r\n//           permissions: ['admin', 'editor'],\r\n//           navLink: '/pages/blog/list'\r\n//         },\r\n//         {\r\n//           id: 'blogDetail',\r\n//           title: 'Detail',\r\n//           permissions: ['admin', 'editor'],\r\n//           navLink: '/pages/blog/detail'\r\n//         },\r\n//         {\r\n//           id: 'blogEdit',\r\n//           title: 'Edit',\r\n//           permissions: ['admin', 'editor'],\r\n//           navLink: '/pages/blog/edit'\r\n//         }\r\n//       ]\r\n//     },\r\n//     {\r\n//       id: 'mailTemplate',\r\n//       title: 'Mail Template',\r\n//       icon: <Circle size={12} />,\r\n//       children: [\r\n//         {\r\n//           id: 'welcomeTemp',\r\n//           title: 'Welcome',\r\n//           permissions: ['admin', 'editor'],\r\n//           navLink:\r\n//             'https://pixinvent.com/demo/vuexy-mail-template/mail-welcome.html',\r\n//           newTab: true,\r\n//           externalLink: true\r\n//         },\r\n//         {\r\n//           id: 'resetPassTemp',\r\n//           title: 'Reset Password',\r\n//           permissions: ['admin', 'editor'],\r\n//           navLink:\r\n//             'https://pixinvent.com/demo/vuexy-mail-template/mail-reset-password.html',\r\n//           newTab: true,\r\n//           externalLink: true\r\n//         },\r\n//         {\r\n//           id: 'verifyEmailTemp',\r\n//           title: 'Verify Email',\r\n//           permissions: ['admin', 'editor'],\r\n//           navLink:\r\n//             'https://pixinvent.com/demo/vuexy-mail-template/mail-verify-email.html',\r\n//           newTab: true,\r\n//           externalLink: true\r\n//         },\r\n//         {\r\n//           id: 'deactivateAccountTemp',\r\n//           title: 'Deactivate Account',\r\n//           permissions: ['admin', 'editor'],\r\n//           navLink:\r\n//             'https://pixinvent.com/demo/vuexy-mail-template/mail-deactivate-account.html',\r\n//           newTab: true,\r\n//           externalLink: true\r\n//         },\r\n//         {\r\n//           id: 'invoiceMailTemp',\r\n//           title: 'Invoice',\r\n//           permissions: ['admin', 'editor'],\r\n//           navLink:\r\n//             'https://pixinvent.com/demo/vuexy-mail-template/mail-invoice.html',\r\n//           newTab: true,\r\n//           externalLink: true\r\n//         },\r\n//         {\r\n//           id: 'promotionalMailTemp',\r\n//           title: 'Promotional',\r\n//           permissions: ['admin', 'editor'],\r\n//           navLink:\r\n//             'https://pixinvent.com/demo/vuexy-mail-template/mail-promotional.html',\r\n//           newTab: true,\r\n//           externalLink: true\r\n//         }\r\n//       ]\r\n//     },\r\n//     {\r\n//       id: 'miscellaneous',\r\n//       title: 'Miscellaneous',\r\n//       icon: <Circle size={12} />,\r\n//       children: [\r\n//         {\r\n//           id: 'comingSoon',\r\n//           title: 'Coming Soon',\r\n//           permissions: ['admin', 'editor'],\r\n//           navLink: '/misc/coming-soon',\r\n//           newTab: true\r\n//         },\r\n//         {\r\n//           id: 'notAuthorized',\r\n//           title: 'Not Authorized',\r\n//           permissions: ['admin', 'editor'],\r\n//           navLink: '/misc/not-authorized',\r\n//           newTab: true\r\n//         },\r\n//         {\r\n//           id: 'maintenance',\r\n//           title: 'Maintenance',\r\n//           permissions: ['admin', 'editor'],\r\n//           navLink: '/misc/maintenance',\r\n//           newTab: true\r\n//         },\r\n//         {\r\n//           id: 'error',\r\n//           title: 'Error',\r\n//           permissions: ['admin', 'editor'],\r\n//           navLink: '/misc/error',\r\n//           newTab: true\r\n//         }\r\n//       ]\r\n//     }\r\n//   ]\r\n// },\r\n// {\r\n//   id: 'authentication',\r\n//   title: 'Authentication',\r\n//   icon: <UserCheck size={20} />,\r\n//   children: [\r\n//     {\r\n//       id: 'login',\r\n//       title: 'Login',\r\n//       icon: <Circle size={12} />,\r\n//       children: [\r\n//         {\r\n//           id: 'login-basic',\r\n//           title: 'Basic',\r\n//           permissions: ['admin', 'editor'],\r\n//           navLink: '/pages/login-basic',\r\n//           newTab: true\r\n//         },\r\n//         {\r\n//           id: 'login-cover',\r\n//           title: 'Cover',\r\n//           permissions: ['admin', 'editor'],\r\n//           navLink: '/pages/login-cover',\r\n//           newTab: true\r\n//         }\r\n//       ]\r\n//     },\r\n//     {\r\n//       id: 'register',\r\n//       title: 'Register',\r\n//       icon: <Circle size={12} />,\r\n//       children: [\r\n//         {\r\n//           id: 'register-basic',\r\n//           title: 'Basic',\r\n//           permissions: ['admin', 'editor'],\r\n//           navLink: '/pages/register-basic',\r\n//           newTab: true\r\n//         },\r\n//         {\r\n//           id: 'register-cover',\r\n//           title: 'Cover',\r\n//           permissions: ['admin', 'editor'],\r\n//           navLink: '/pages/register-cover',\r\n//           newTab: true\r\n//         }\r\n//       ]\r\n//     },\r\n//     {\r\n//       id: 'forgot-password',\r\n//       title: 'Forgot Password',\r\n//       icon: <Circle size={12} />,\r\n//       children: [\r\n//         {\r\n//           id: 'forgotPassword-basic',\r\n//           title: 'Basic',\r\n//           permissions: ['admin', 'editor'],\r\n//           navLink: '/pages/forgot-password-basic',\r\n//           newTab: true\r\n//         },\r\n//         {\r\n//           id: 'forgotPassword-cover',\r\n//           title: 'Cover',\r\n//           permissions: ['admin', 'editor'],\r\n//           navLink: '/pages/forgot-password-cover',\r\n//           newTab: true\r\n//         }\r\n//       ]\r\n//     },\r\n//     {\r\n//       id: 'resetPassword',\r\n//       title: 'Reset Password',\r\n//       icon: <Circle size={12} />,\r\n//       children: [\r\n//         {\r\n//           id: 'resetPassword-basic',\r\n//           title: 'Basic',\r\n//           permissions: ['admin', 'editor'],\r\n//           navLink: '/pages/reset-password-basic',\r\n//           newTab: true\r\n//         },\r\n//         {\r\n//           id: 'resetPassword-cover',\r\n//           title: 'Cover',\r\n//           permissions: ['admin', 'editor'],\r\n//           navLink: '/pages/reset-password-cover',\r\n//           newTab: true\r\n//         }\r\n//       ]\r\n//     },\r\n//     {\r\n//       id: 'verify-email',\r\n//       title: 'Verify Email',\r\n//       icon: <Circle size={12} />,\r\n//       children: [\r\n//         {\r\n//           id: 'verify-email-basic',\r\n//           title: 'Basic',\r\n//           permissions: ['admin', 'editor'],\r\n//           navLink: '/pages/verify-email-basic',\r\n//           newTab: true\r\n//         },\r\n//         {\r\n//           id: 'verify-email-cover',\r\n//           title: 'Cover',\r\n//           permissions: ['admin', 'editor'],\r\n//           navLink: '/pages/verify-email-cover',\r\n//           newTab: true\r\n//         }\r\n//       ]\r\n//     },\r\n//     {\r\n//       id: 'two-step',\r\n//       title: 'Two Steps',\r\n//       icon: <Circle size={12} />,\r\n//       children: [\r\n//         {\r\n//           id: 'two-steps-basic',\r\n//           title: 'Basic',\r\n//           permissions: ['admin', 'editor'],\r\n//           navLink: '/pages/two-steps-basic',\r\n//           newTab: true\r\n//         },\r\n//         {\r\n//           id: 'two-steps-cover',\r\n//           title: 'Cover',\r\n//           permissions: ['admin', 'editor'],\r\n//           navLink: '/pages/two-steps-cover',\r\n//           newTab: true\r\n//         }\r\n//       ]\r\n//     }\r\n//   ]\r\n// },\r\n// {\r\n//   id: 'modal-examples',\r\n//   title: 'Modal Examples',\r\n//   icon: <Square size={12} />,\r\n//   permissions: ['admin', 'editor'],\r\n//   navLink: '/pages/modal-examples'\r\n// }\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\todo\\index.js",["3896"],"// ** React Imports\r\nimport { Fragment, useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\n\r\n// ** Todo App Components\r\nimport Tasks from './Tasks'\r\nimport Sidebar from './Sidebar'\r\nimport TaskSidebar from './TaskSidebar'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getTasks, updateTask, selectTask, addTask, deleteTask, reOrderTasks } from './store'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-todo.scss'\r\n\r\nconst TODO = () => {\r\n  // ** States\r\n  const [sort, setSort] = useState('')\r\n  const [query, setQuery] = useState('')\r\n  const [mainSidebar, setMainSidebar] = useState(false)\r\n  const [openTaskSidebar, setOpenTaskSidebar] = useState(false)\r\n\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.todo)\r\n\r\n  // ** URL Params\r\n  const paramsURL = useParams()\r\n  const params = {\r\n    filter: paramsURL.filter || '',\r\n    q: query || '',\r\n    sortBy: sort || '',\r\n    tag: paramsURL.tag || ''\r\n  }\r\n\r\n  // ** Function to handle Left sidebar & Task sidebar\r\n  const handleMainSidebar = () => setMainSidebar(!mainSidebar)\r\n  const handleTaskSidebar = () => setOpenTaskSidebar(!openTaskSidebar)\r\n\r\n  // ** Get Tasks on mount & based on dependency change\r\n  useEffect(() => {\r\n    dispatch(\r\n      getTasks({\r\n        filter: paramsURL.filter || '',\r\n        q: query || '',\r\n        sortBy: sort || '',\r\n        tag: paramsURL.tag || ''\r\n      })\r\n    )\r\n  }, [store.tasks.length, paramsURL.filter, paramsURL.tag, query, sort])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Sidebar\r\n        store={store}\r\n        params={params}\r\n        getTasks={getTasks}\r\n        dispatch={dispatch}\r\n        mainSidebar={mainSidebar}\r\n        urlFilter={paramsURL.filter}\r\n        setMainSidebar={setMainSidebar}\r\n        handleTaskSidebar={handleTaskSidebar}\r\n      />\r\n      <div className='content-right'>\r\n        <div className='content-wrapper'>\r\n          <div className='content-body'>\r\n            <div\r\n              className={classnames('body-content-overlay', {\r\n                show: mainSidebar === true\r\n              })}\r\n              onClick={handleMainSidebar}\r\n            ></div>\r\n\r\n            {store ? (\r\n              <Tasks\r\n                store={store}\r\n                tasks={store.tasks}\r\n                sort={sort}\r\n                query={query}\r\n                params={params}\r\n                setSort={setSort}\r\n                setQuery={setQuery}\r\n                dispatch={dispatch}\r\n                getTasks={getTasks}\r\n                paramsURL={paramsURL}\r\n                updateTask={updateTask}\r\n                selectTask={selectTask}\r\n                reOrderTasks={reOrderTasks}\r\n                handleMainSidebar={handleMainSidebar}\r\n                handleTaskSidebar={handleTaskSidebar}\r\n              />\r\n            ) : null}\r\n\r\n            <TaskSidebar\r\n              store={store}\r\n              params={params}\r\n              addTask={addTask}\r\n              dispatch={dispatch}\r\n              open={openTaskSidebar}\r\n              updateTask={updateTask}\r\n              selectTask={selectTask}\r\n              deleteTask={deleteTask}\r\n              handleTaskSidebar={handleTaskSidebar}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default TODO\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\email\\index.js",["3897"],"// ** React Imports\r\nimport { useParams } from 'react-router-dom'\r\nimport { Fragment, useEffect, useState } from 'react'\r\n\r\n// ** Email App Component Imports\r\nimport Mails from './Mails'\r\nimport Sidebar from './Sidebar'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  getMails,\r\n  selectMail,\r\n  updateMails,\r\n  paginateMail,\r\n  selectAllMail,\r\n  updateMailLabel,\r\n  resetSelectedMail,\r\n  selectCurrentMail\r\n} from './store'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-email.scss'\r\n\r\nconst EmailApp = () => {\r\n  // ** States\r\n  const [query, setQuery] = useState('')\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [composeOpen, setComposeOpen] = useState(false)\r\n\r\n  // ** Toggle Compose Function\r\n  const toggleCompose = () => setComposeOpen(!composeOpen)\r\n\r\n  // ** Store Variables\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.email)\r\n\r\n  // ** Vars\r\n  const params = useParams()\r\n\r\n  // ** UseEffect: GET initial data on Mount\r\n  useEffect(() => {\r\n    dispatch(getMails({ q: query || '', folder: params.folder || 'inbox', label: params.label || '' }))\r\n  }, [query, params.folder, params.label])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Sidebar\r\n        store={store}\r\n        dispatch={dispatch}\r\n        getMails={getMails}\r\n        sidebarOpen={sidebarOpen}\r\n        toggleCompose={toggleCompose}\r\n        setSidebarOpen={setSidebarOpen}\r\n        resetSelectedMail={resetSelectedMail}\r\n      />\r\n      <div className='content-right'>\r\n        <div className='content-body'>\r\n          <div\r\n            className={classnames('body-content-overlay', {\r\n              show: sidebarOpen\r\n            })}\r\n            onClick={() => setSidebarOpen(false)}\r\n          ></div>\r\n          <Mails\r\n            store={store}\r\n            query={query}\r\n            setQuery={setQuery}\r\n            dispatch={dispatch}\r\n            getMails={getMails}\r\n            selectMail={selectMail}\r\n            updateMails={updateMails}\r\n            composeOpen={composeOpen}\r\n            paginateMail={paginateMail}\r\n            selectAllMail={selectAllMail}\r\n            toggleCompose={toggleCompose}\r\n            setSidebarOpen={setSidebarOpen}\r\n            updateMailLabel={updateMailLabel}\r\n            selectCurrentMail={selectCurrentMail}\r\n            resetSelectedMail={resetSelectedMail}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default EmailApp\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\calendar\\index.js",["3898"],"// ** React Imports\r\nimport { Fragment, useState, useEffect } from 'react'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Calendar App Component Imports\r\nimport Calendar from './Calendar'\r\nimport SidebarLeft from './SidebarLeft'\r\nimport AddEventSidebar from './AddEventSidebar'\r\n\r\n// ** Custom Hooks\r\nimport { useRTL } from '@hooks/useRTL'\r\n\r\n// ** Store & Actions\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { fetchEvents, selectEvent, updateEvent, updateFilter, updateAllFilters, addEvent, removeEvent } from './store'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-calendar.scss'\r\n\r\n// ** CalendarColors\r\nconst calendarsColor = {\r\n  Business: 'primary',\r\n  Holiday: 'success',\r\n  Personal: 'danger',\r\n  Family: 'warning',\r\n  ETC: 'info'\r\n}\r\n\r\nconst CalendarComponent = () => {\r\n  // ** Variables\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.calendar)\r\n\r\n  // ** states\r\n  const [calendarApi, setCalendarApi] = useState(null)\r\n  const [addSidebarOpen, setAddSidebarOpen] = useState(false)\r\n  const [leftSidebarOpen, setLeftSidebarOpen] = useState(false)\r\n\r\n  // ** Hooks\r\n  const [isRtl] = useRTL()\r\n\r\n  // ** AddEventSidebar Toggle Function\r\n  const handleAddEventSidebar = () => setAddSidebarOpen(!addSidebarOpen)\r\n\r\n  // ** LeftSidebar Toggle Function\r\n  const toggleSidebar = val => setLeftSidebarOpen(val)\r\n\r\n  // ** Blank Event Object\r\n  const blankEvent = {\r\n    title: '',\r\n    start: '',\r\n    end: '',\r\n    allDay: false,\r\n    url: '',\r\n    extendedProps: {\r\n      calendar: '',\r\n      guests: [],\r\n      location: '',\r\n      description: ''\r\n    }\r\n  }\r\n\r\n  // ** refetchEvents\r\n  const refetchEvents = () => {\r\n    if (calendarApi !== null) {\r\n      calendarApi.refetchEvents()\r\n    }\r\n  }\r\n\r\n  // ** Fetch Events On Mount\r\n  useEffect(() => {\r\n    dispatch(fetchEvents(store.selectedCalendars))\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='app-calendar overflow-hidden border'>\r\n        <Row className='g-0'>\r\n          <Col\r\n            id='app-calendar-sidebar'\r\n            className={classnames('col app-calendar-sidebar flex-grow-0 overflow-hidden d-flex flex-column', {\r\n              show: leftSidebarOpen\r\n            })}\r\n          >\r\n            <SidebarLeft\r\n              store={store}\r\n              dispatch={dispatch}\r\n              updateFilter={updateFilter}\r\n              toggleSidebar={toggleSidebar}\r\n              updateAllFilters={updateAllFilters}\r\n              handleAddEventSidebar={handleAddEventSidebar}\r\n            />\r\n          </Col>\r\n          <Col className='position-relative'>\r\n            <Calendar\r\n              isRtl={isRtl}\r\n              store={store}\r\n              dispatch={dispatch}\r\n              blankEvent={blankEvent}\r\n              calendarApi={calendarApi}\r\n              selectEvent={selectEvent}\r\n              updateEvent={updateEvent}\r\n              toggleSidebar={toggleSidebar}\r\n              calendarsColor={calendarsColor}\r\n              setCalendarApi={setCalendarApi}\r\n              handleAddEventSidebar={handleAddEventSidebar}\r\n            />\r\n          </Col>\r\n          <div\r\n            className={classnames('body-content-overlay', {\r\n              show: leftSidebarOpen === true\r\n            })}\r\n            onClick={() => toggleSidebar(false)}\r\n          ></div>\r\n        </Row>\r\n      </div>\r\n      <AddEventSidebar\r\n        store={store}\r\n        dispatch={dispatch}\r\n        addEvent={addEvent}\r\n        open={addSidebarOpen}\r\n        selectEvent={selectEvent}\r\n        updateEvent={updateEvent}\r\n        removeEvent={removeEvent}\r\n        calendarApi={calendarApi}\r\n        refetchEvents={refetchEvents}\r\n        calendarsColor={calendarsColor}\r\n        handleAddEventSidebar={handleAddEventSidebar}\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default CalendarComponent\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\chat\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\navigation\\vertical\\apps.js",[],"D:\\Utecho\\Scaff-cert\\src\\Admin\\dashboard\\dashboard.js",["3899"],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\invoice\\preview\\index.js",["3900"],"// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\nimport { useParams, Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, Alert } from 'reactstrap'\r\n\r\n// ** Invoice Preview Components\r\nimport PreviewCard from './PreviewCard'\r\nimport PreviewActions from './PreviewActions'\r\nimport AddPaymentSidebar from '../shared-sidebar/SidebarAddPayment'\r\nimport SendInvoiceSidebar from '../shared-sidebar/SidebarSendInvoice'\r\n\r\n// ** Styles\r\nimport '@styles/base/pages/app-invoice.scss'\r\n\r\nconst InvoicePreview = () => {\r\n  // ** HooksVars\r\n  const { id } = useParams()\r\n\r\n  // ** States\r\n  const [data, setData] = useState(null)\r\n  const [sendSidebarOpen, setSendSidebarOpen] = useState(false)\r\n  const [addPaymentOpen, setAddPaymentOpen] = useState(false)\r\n\r\n  // ** Functions to toggle add & send sidebar\r\n  const toggleSendSidebar = () => setSendSidebarOpen(!sendSidebarOpen)\r\n  const toggleAddSidebar = () => setAddPaymentOpen(!addPaymentOpen)\r\n\r\n  // ** Get invoice on mount based on id\r\n  useEffect(() => {\r\n    axios.get(`/api/invoice/invoices/${id}`).then(response => {\r\n      setData(response.data)\r\n    })\r\n  }, [])\r\n\r\n  return data !== null && data.invoice !== undefined ? (\r\n    <div className='invoice-preview-wrapper'>\r\n      <Row className='invoice-preview'>\r\n        <Col xl={9} md={8} sm={12}>\r\n          <PreviewCard data={data} />\r\n        </Col>\r\n        <Col xl={3} md={4} sm={12}>\r\n          <PreviewActions id={id} setSendSidebarOpen={setSendSidebarOpen} setAddPaymentOpen={setAddPaymentOpen} />\r\n        </Col>\r\n      </Row>\r\n      <SendInvoiceSidebar toggleSidebar={toggleSendSidebar} open={sendSidebarOpen} />\r\n      <AddPaymentSidebar toggleSidebar={toggleAddSidebar} open={addPaymentOpen} />\r\n    </div>\r\n  ) : (\r\n    <Alert color='danger'>\r\n      <h4 className='alert-heading'>Invoice not found</h4>\r\n      <div className='alert-body'>\r\n        Invoice with id: {id} doesn't exist. Check list of all invoices:{' '}\r\n        <Link to='/apps/invoice/list'>Invoice List</Link>\r\n      </div>\r\n    </Alert>\r\n  )\r\n}\r\n\r\nexport default InvoicePreview\r\n","D:\\Utecho\\Scaff-cert\\src\\navigation\\horizontal\\charts.js",["3901"],"// ** Icons Import\r\nimport { BarChart2, Circle } from 'react-feather'\r\n\r\nexport default [\r\n  {\r\n    id: 'chartsGroup',\r\n    title: 'Charts',\r\n    icon: <BarChart2 />,\r\n    children: [\r\n      {\r\n        id: 'apex',\r\n        title: 'Apex',\r\n        icon: <Circle />,\r\n        navLink: '/charts/apex'\r\n      },\r\n      {\r\n        id: 'chartJs',\r\n        title: 'ChartJS',\r\n        icon: <Circle />,\r\n        navLink: '/charts/chartjs'\r\n      },\r\n      {\r\n        id: 'recharts',\r\n        title: 'Recharts',\r\n        icon: <Circle />,\r\n        navLink: '/charts/recharts'\r\n      }\r\n    ]\r\n  }\r\n]\r\n","D:\\Utecho\\Scaff-cert\\src\\navigation\\horizontal\\dashboards.js",["3902"],"// ** Icons Import\r\nimport { Home, Activity, ShoppingCart } from 'react-feather'\r\n\r\nexport default [\r\n  {\r\n    id: 'dashboards',\r\n    title: 'Dashboards',\r\n    icon: <Home />,\r\n    children: [\r\n      {\r\n        id: 'analyticsDash',\r\n        title: 'Analytics',\r\n        icon: <Activity />,\r\n        navLink: '/dashboard/analytics'\r\n      },\r\n      {\r\n        id: 'eCommerceDash',\r\n        title: 'eCommerce',\r\n        icon: <ShoppingCart />,\r\n        navLink: '/dashboard/ecommerce'\r\n      }\r\n    ]\r\n  }\r\n]\r\n","D:\\Utecho\\Scaff-cert\\src\\navigation\\horizontal\\others.js",["3903"],"// ** Icons Import\r\nimport { Box, Menu, Circle, EyeOff, Folder, LifeBuoy, Shield } from 'react-feather'\r\n\r\nexport default [\r\n  {\r\n    id: 'misc',\r\n    title: 'Misc',\r\n    icon: <Box />,\r\n    children: [\r\n      {\r\n        id: 'access-control',\r\n        title: 'Access Control',\r\n        icon: <Shield size={20} />,\r\n        action: 'read',\r\n        resource: 'ACL',\r\n        navLink: '/access-control'\r\n      },\r\n      {\r\n        id: 'menuLevels',\r\n        title: 'Menu Levels',\r\n        icon: <Menu />,\r\n        children: [\r\n          {\r\n            id: 'secondLevel',\r\n            title: 'Second Level 2.1',\r\n            icon: <Circle />,\r\n            navLink: '#'\r\n          },\r\n          {\r\n            id: 'secondLevel1',\r\n            title: 'Second Level 2.2',\r\n            icon: <Circle />,\r\n            children: [\r\n              {\r\n                id: 'ThirdLevel',\r\n                title: 'Third Level 3.1',\r\n                icon: <Circle />,\r\n                navLink: '#'\r\n              },\r\n              {\r\n                id: 'ThirdLevel1',\r\n                title: 'Third Level 3.2',\r\n                icon: <Circle />,\r\n                navLink: '#'\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 'disabledMenu',\r\n        title: 'Disabled Menu',\r\n        icon: <EyeOff />,\r\n        navLink: '#',\r\n        disabled: true\r\n      },\r\n      {\r\n        id: 'documentation',\r\n        title: 'Documentation',\r\n        icon: <Folder />,\r\n        externalLink: true,\r\n        newTab: true,\r\n        navLink: 'https://pixinvent.com/demo/vuexy-react-admin-dashboard-template/documentation'\r\n      },\r\n      {\r\n        id: 'raiseSupport',\r\n        title: 'Raise Support',\r\n        icon: <LifeBuoy />,\r\n        externalLink: true,\r\n        newTab: true,\r\n        navLink: 'https://pixinvent.ticksy.com/'\r\n      }\r\n    ]\r\n  }\r\n]\r\n","D:\\Utecho\\Scaff-cert\\src\\navigation\\horizontal\\pages.js",["3904"],"// ** Icons Import\r\nimport {\r\n  Key,\r\n  User,\r\n  Info,\r\n  Mail,\r\n  File,\r\n  Unlock,\r\n  Circle,\r\n  Square,\r\n  FileText,\r\n  Settings,\r\n  Clipboard,\r\n  DollarSign,\r\n  HelpCircle\r\n} from 'react-feather'\r\n\r\nexport default [\r\n  {\r\n    id: 'pages',\r\n    title: 'Pages',\r\n    icon: <FileText />,\r\n    children: [\r\n      {\r\n        id: 'authentication',\r\n        title: 'Authentication',\r\n        icon: <Unlock />,\r\n        children: [\r\n          {\r\n            id: 'login',\r\n            title: 'Login',\r\n            icon: <Circle size={12} />,\r\n            children: [\r\n              {\r\n                id: 'login-basic',\r\n                title: 'Basic',\r\n                permissions: ['admin', 'editor'],\r\n                navLink: '/pages/login-basic',\r\n                newTab: true\r\n              },\r\n              {\r\n                id: 'login-cover',\r\n                title: 'Cover',\r\n                permissions: ['admin', 'editor'],\r\n                navLink: '/pages/login-cover',\r\n                newTab: true\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            id: 'register',\r\n            title: 'Register',\r\n            icon: <Circle size={12} />,\r\n            children: [\r\n              {\r\n                id: 'register-basic',\r\n                title: 'Basic',\r\n                permissions: ['admin', 'editor'],\r\n                navLink: '/pages/register-basic',\r\n                newTab: true\r\n              },\r\n              {\r\n                id: 'register-cover',\r\n                title: 'Cover',\r\n                permissions: ['admin', 'editor'],\r\n                navLink: '/pages/register-cover',\r\n                newTab: true\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            id: 'forgot-password',\r\n            title: 'Forgot Password',\r\n            icon: <Circle size={12} />,\r\n            children: [\r\n              {\r\n                id: 'forgotPassword-basic',\r\n                title: 'Basic',\r\n                permissions: ['admin', 'editor'],\r\n                navLink: '/pages/forgot-password-basic',\r\n                newTab: true\r\n              },\r\n              {\r\n                id: 'forgotPassword-cover',\r\n                title: 'Cover',\r\n                permissions: ['admin', 'editor'],\r\n                navLink: '/pages/forgot-password-cover',\r\n                newTab: true\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            id: 'resetPassword',\r\n            title: 'Reset Password',\r\n            icon: <Circle size={12} />,\r\n            children: [\r\n              {\r\n                id: 'resetPassword-basic',\r\n                title: 'Basic',\r\n                permissions: ['admin', 'editor'],\r\n                navLink: '/pages/reset-password-basic',\r\n                newTab: true\r\n              },\r\n              {\r\n                id: 'resetPassword-cover',\r\n                title: 'Cover',\r\n                permissions: ['admin', 'editor'],\r\n                navLink: '/pages/reset-password-cover',\r\n                newTab: true\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            id: 'verify-email',\r\n            title: 'Reset Password',\r\n            icon: <Circle size={12} />,\r\n            children: [\r\n              {\r\n                id: 'verify-email-basic',\r\n                title: 'Basic',\r\n                permissions: ['admin', 'editor'],\r\n                navLink: '/pages/verify-email-basic',\r\n                newTab: true\r\n              },\r\n              {\r\n                id: 'verify-email-cover',\r\n                title: 'Cover',\r\n                permissions: ['admin', 'editor'],\r\n                navLink: '/pages/verify-email-cover',\r\n                newTab: true\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            id: 'two-step',\r\n            title: 'Two Steps',\r\n            icon: <Circle size={12} />,\r\n            children: [\r\n              {\r\n                id: 'two-steps-basic',\r\n                title: 'Basic',\r\n                permissions: ['admin', 'editor'],\r\n                navLink: '/pages/two-steps-basic',\r\n                newTab: true\r\n              },\r\n              {\r\n                id: 'two-steps-cover',\r\n                title: 'Cover',\r\n                permissions: ['admin', 'editor'],\r\n                navLink: '/pages/two-steps-cover',\r\n                newTab: true\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 'accountSettings',\r\n        title: 'Account Settings',\r\n        icon: <Settings />,\r\n        navLink: '/pages/account-settings'\r\n      },\r\n      {\r\n        id: 'profile',\r\n        title: 'Profile',\r\n        icon: <User />,\r\n        navLink: '/pages/profile',\r\n        collapsed: true\r\n      },\r\n      {\r\n        id: 'faq',\r\n        title: 'FAQ',\r\n        icon: <HelpCircle />,\r\n        navLink: '/pages/faq'\r\n      },\r\n      {\r\n        id: 'knowledgeBase',\r\n        title: 'Knowledge Base',\r\n        icon: <Info />,\r\n        navLink: '/pages/knowledge-base',\r\n        parentOf: ['/pages/knowledge-base/category/questions', '/pages/knowledge-base/category']\r\n      },\r\n\r\n      {\r\n        id: 'pricing',\r\n        title: 'Pricing',\r\n        icon: <DollarSign />,\r\n        navLink: '/pages/pricing'\r\n      },\r\n      {\r\n        id: 'license',\r\n        title: 'License',\r\n        icon: <FileText />,\r\n        permissions: ['admin', 'editor'],\r\n        navLink: '/pages/license'\r\n      },\r\n      {\r\n        id: 'api-key',\r\n        title: 'API Key',\r\n        icon: <Key />,\r\n        permissions: ['admin', 'editor'],\r\n        navLink: '/pages/api-key'\r\n      },\r\n      {\r\n        id: 'blog',\r\n        title: 'Blog',\r\n        icon: <Clipboard />,\r\n        children: [\r\n          {\r\n            id: 'blogList',\r\n            title: 'List',\r\n            icon: <Circle />,\r\n            navLink: '/pages/blog/list'\r\n          },\r\n          {\r\n            id: 'blogDetail',\r\n            title: 'Detail',\r\n            icon: <Circle />,\r\n            navLink: '/pages/blog/detail'\r\n          },\r\n          {\r\n            id: 'blogEdit',\r\n            title: 'Edit',\r\n            icon: <Circle />,\r\n            navLink: '/pages/blog/edit'\r\n          }\r\n        ]\r\n      },\r\n\r\n      {\r\n        id: 'mailTemplate',\r\n        title: 'Mail Template',\r\n        icon: <Mail />,\r\n        children: [\r\n          {\r\n            id: 'welcomeTemp',\r\n            title: 'Welcome',\r\n            navLink: 'https://pixinvent.com/demo/vuexy-mail-template/mail-welcome.html',\r\n            externalLink: true\r\n          },\r\n          {\r\n            id: 'resetPassTemp',\r\n            title: 'Reset Password',\r\n            navLink: 'https://pixinvent.com/demo/vuexy-mail-template/mail-reset-password.html',\r\n            externalLink: true\r\n          },\r\n          {\r\n            id: 'verifyEmailTemp',\r\n            title: 'Verify Email',\r\n            navLink: 'https://pixinvent.com/demo/vuexy-mail-template/mail-verify-email.html',\r\n            externalLink: true\r\n          },\r\n          {\r\n            id: 'deactivateAccountTemp',\r\n            title: 'Deactivate Account',\r\n            navLink: 'https://pixinvent.com/demo/vuexy-mail-template/mail-deactivate-account.html',\r\n            externalLink: true\r\n          },\r\n          {\r\n            id: 'invoiceMailTemp',\r\n            title: 'Invoice',\r\n            navLink: 'https://pixinvent.com/demo/vuexy-mail-template/mail-invoice.html',\r\n            externalLink: true\r\n          },\r\n          {\r\n            id: 'promotionalMailTemp',\r\n            title: 'Promotional',\r\n            navLink: 'https://pixinvent.com/demo/vuexy-mail-template/mail-promotional.html',\r\n            externalLink: true\r\n          }\r\n        ]\r\n      },\r\n\r\n      {\r\n        id: 'miscellaneous',\r\n        title: 'Miscellaneous',\r\n        icon: <File />,\r\n        children: [\r\n          {\r\n            id: 'comingSoon',\r\n            title: 'Coming Soon',\r\n            icon: <Circle />,\r\n            navLink: '/misc/coming-soon',\r\n            newTab: true\r\n          },\r\n\r\n          {\r\n            id: 'notAuthorized',\r\n            title: 'Not Authorized',\r\n            icon: <Circle />,\r\n            navLink: '/misc/not-authorized',\r\n            newTab: true\r\n          },\r\n          {\r\n            id: 'maintenance',\r\n            title: 'Maintenance',\r\n            icon: <Circle />,\r\n            navLink: '/misc/maintenance',\r\n            newTab: true\r\n          },\r\n          {\r\n            id: 'error',\r\n            title: 'Error',\r\n            icon: <Circle />,\r\n            navLink: '/misc/error',\r\n            newTab: true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 'modal-examples',\r\n        title: 'Modal Examples',\r\n        icon: <Square size={12} />,\r\n        permissions: ['admin', 'editor'],\r\n        navLink: '/pages/modal-examples'\r\n      }\r\n    ]\r\n  }\r\n]\r\n","D:\\Utecho\\Scaff-cert\\src\\navigation\\horizontal\\apps.js",["3905"],"// ** Icons Import\r\nimport {\r\n  Box,\r\n  Mail,\r\n  User,\r\n  Circle,\r\n  Shield,\r\n  Calendar,\r\n  FileText,\r\n  CheckSquare,\r\n  ShoppingCart,\r\n  MessageSquare\r\n} from 'react-feather'\r\n\r\nexport default [\r\n  {\r\n    id: 'apps',\r\n    title: 'Apps',\r\n    icon: <Box />,\r\n    children: [\r\n      {\r\n        id: 'email',\r\n        title: 'Email',\r\n        icon: <Mail />,\r\n        navLink: '/apps/email'\r\n      },\r\n      {\r\n        id: 'chat',\r\n        title: 'Chat',\r\n        icon: <MessageSquare />,\r\n        navLink: '/apps/chat'\r\n      },\r\n      {\r\n        id: 'todo',\r\n        title: 'Todo',\r\n        icon: <CheckSquare />,\r\n        navLink: '/apps/todo'\r\n      },\r\n      {\r\n        id: 'calendar',\r\n        title: 'Calendar',\r\n        icon: <Calendar />,\r\n        navLink: '/apps/calendar'\r\n      },\r\n      {\r\n        id: 'invoiceApp',\r\n        title: 'Invoice',\r\n        icon: <FileText />,\r\n        children: [\r\n          {\r\n            id: 'invoiceList',\r\n            title: 'List',\r\n            icon: <Circle />,\r\n            navLink: '/apps/invoice/list'\r\n          },\r\n          {\r\n            id: 'invoicePreview',\r\n            title: 'Preview',\r\n            icon: <Circle />,\r\n            navLink: '/apps/invoice/preview'\r\n          },\r\n          {\r\n            id: 'invoiceEdit',\r\n            title: 'Edit',\r\n            icon: <Circle />,\r\n            navLink: '/apps/invoice/edit'\r\n          },\r\n          {\r\n            id: 'invoiceAdd',\r\n            title: 'Add',\r\n            icon: <Circle />,\r\n            navLink: '/apps/invoice/add'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 'roles-permissions',\r\n        title: 'Roles & Permissions',\r\n        icon: <Shield size={20} />,\r\n        children: [\r\n          {\r\n            id: 'roles',\r\n            title: 'Roles',\r\n            icon: <Circle size={12} />,\r\n            navLink: '/apps/roles'\r\n          },\r\n          {\r\n            id: 'permissions',\r\n            title: 'Permissions',\r\n            icon: <Circle size={12} />,\r\n            navLink: '/apps/permissions'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 'eCommerce',\r\n        title: 'eCommerce',\r\n        icon: <ShoppingCart />,\r\n        children: [\r\n          {\r\n            id: 'shop',\r\n            title: 'Shop',\r\n            icon: <Circle />,\r\n            navLink: '/apps/ecommerce/shop'\r\n          },\r\n          {\r\n            id: 'detail',\r\n            title: 'Details',\r\n            icon: <Circle />,\r\n            navLink: '/apps/ecommerce/product-detail'\r\n          },\r\n          {\r\n            id: 'wishList',\r\n            title: 'Wish List',\r\n            icon: <Circle />,\r\n            navLink: '/apps/ecommerce/wishlist'\r\n          },\r\n          {\r\n            id: 'checkout',\r\n            title: 'Checkout',\r\n            icon: <Circle />,\r\n            navLink: '/apps/ecommerce/checkout'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 'users',\r\n        title: 'User',\r\n        icon: <User />,\r\n        children: [\r\n          {\r\n            id: 'list',\r\n            title: 'List',\r\n            icon: <Circle />,\r\n            navLink: '/apps/user/list'\r\n          },\r\n          {\r\n            id: 'view',\r\n            title: 'View',\r\n            icon: <Circle />,\r\n            navLink: '/apps/user/view'\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n]\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\authentication\\VerifyEmailCover.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\authentication\\TwoStepsCover.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\authentication\\VerifyEmailBasic.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\authentication\\ForgotPasswordBasic.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\authentication\\TwoStepsBasic.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\authentication\\ForgotPassword.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\authentication\\Register.js",["3906","3907","3908","3909","3910","3911"],"// ** React Imports\r\nimport { useContext } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\n// ** Custom Hooks\r\nimport { useSkin } from '@hooks/useSkin'\r\nimport useJwt from '@src/auth/jwt/useJwt'\r\nimport logo from \"../../../Admin/assests/logo.png\";\r\nimport googleicon from '../../../Admin/assests/icons/google.svg';\r\n\r\n\r\n// ** Store & Actions\r\nimport { useDispatch } from 'react-redux'\r\nimport { handleLogin } from '@store/authentication'\r\n\r\n// ** Third Party Components\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport { Facebook, Twitter, Mail, GitHub } from 'react-feather'\r\n\r\n// ** Context\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\n\r\n// ** Custom Components\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, CardTitle, CardText, Label, Button, Form, Input, FormFeedback } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/pages/page-authentication.scss'\r\n\r\nconst defaultValues = {\r\n  email: '',\r\n  terms: false,\r\n  username: '',\r\n  password: ''\r\n}\r\n\r\nconst Register = () => {\r\n  // ** Hooks\r\n  const ability = useContext(AbilityContext)\r\n  const { skin } = useSkin()\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const {\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({ defaultValues })\r\n\r\n  const illustration = skin === 'dark' ? 'register-v2-dark.svg' : 'register-v2.svg',\r\n    source = require(`@src/assets/images/pages/${illustration}`).default\r\n\r\n  const onSubmit = data => {\r\n    const tempData = { ...data }\r\n    delete tempData.terms\r\n    if (Object.values(tempData).every(field => field.length > 0) && data.terms === true) {\r\n      const { username, email, password } = data\r\n      useJwt\r\n        .register({ username, email, password })\r\n        .then(res => {\r\n          if (res.data.error) {\r\n            for (const property in res.data.error) {\r\n              if (res.data.error[property] !== null) {\r\n                setError(property, {\r\n                  type: 'manual',\r\n                  message: res.data.error[property]\r\n                })\r\n              }\r\n            }\r\n          } else {\r\n            const data = { ...res.data.user, accessToken: res.data.accessToken }\r\n            ability.update(res.data.user.ability)\r\n            dispatch(handleLogin(data))\r\n            history.push('/')\r\n          }\r\n        })\r\n        .catch(err => console.log(err))\r\n    } else {\r\n      for (const key in data) {\r\n        if (data[key].length === 0) {\r\n          setError(key, {\r\n            type: 'manual',\r\n            message: `Please enter a valid ${key}`\r\n          })\r\n        }\r\n        if (key === 'terms' && data.terms === false) {\r\n          setError('terms', {\r\n            type: 'manual'\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='auth-wrapper auth-cover'>\r\n      <Row className='auth-inner m-0'>\r\n         <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\r\n         {/* <svg viewBox='0 0 139 95' version='1.1' height='28'>\r\n            <defs>\r\n              <linearGradient x1='100%' y1='10.5120544%' x2='50%' y2='89.4879456%' id='linearGradient-1'>\r\n                <stop stopColor='#000000' offset='0%'></stop>\r\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\r\n              </linearGradient>\r\n              <linearGradient x1='64.0437835%' y1='46.3276743%' x2='37.373316%' y2='100%' id='linearGradient-2'>\r\n                <stop stopColor='#EEEEEE' stopOpacity='0' offset='0%'></stop>\r\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\r\n              </linearGradient>\r\n            </defs>\r\n            <g id='Page-1' stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\r\n              <g id='Artboard' transform='translate(-400.000000, -178.000000)'>\r\n                <g id='Group' transform='translate(400.000000, 178.000000)'>\r\n                  <path\r\n                    d='M-5.68434189e-14,2.84217094e-14 L39.1816085,2.84217094e-14 L69.3453773,32.2519224 L101.428699,2.84217094e-14 L138.784583,2.84217094e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L6.71554594,44.4188507 C2.46876683,39.9813776 0.345377275,35.1089553 0.345377275,29.8015838 C0.345377275,24.4942122 0.230251516,14.560351 -5.68434189e-14,2.84217094e-14 Z'\r\n                    id='Path'\r\n                    className='text-primary'\r\n                    style={{ fill: 'currentColor' }}\r\n                  ></path>\r\n                  <path\r\n                    d='M69.3453773,32.2519224 L101.428699,1.42108547e-14 L138.784583,1.42108547e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L32.8435758,70.5039241 L69.3453773,32.2519224 Z'\r\n                    id='Path'\r\n                    fill='url(#linearGradient-1)'\r\n                    opacity='0.2'\r\n                  ></path>\r\n                  <polygon\r\n                    id='Path-2'\r\n                    fill='#000000'\r\n                    opacity='0.049999997'\r\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 54.0490008 16.1851325'\r\n                  ></polygon>\r\n                  <polygon\r\n                    id='Path-2'\r\n                    fill='#000000'\r\n                    opacity='0.099999994'\r\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 58.3683556 20.7402338'\r\n                  ></polygon>\r\n                  <polygon\r\n                    id='Path-3'\r\n                    fill='url(#linearGradient-2)'\r\n                    opacity='0.099999994'\r\n                    points='101.428699 0 83.0667527 94.1480575 130.378721 47.0740288'\r\n                  ></polygon>\r\n                </g>\r\n              </g>\r\n            </g>\r\n          </svg>\r\n          <h2 className='brand-text text-primary ms-1'>Vuexy</h2> */}\r\n          <img src={logo} style={{width:'8rem'}} />\r\n        </Link>\r\n        <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\r\n          <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\r\n            <img className='img-fluid' src={source} alt='Login Cover' />\r\n          </div>\r\n        </Col>\r\n        <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\r\n          <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\r\n            <CardTitle tag='h2' className='fw-bold mb-1'>\r\n              Adventure starts here 🚀\r\n            </CardTitle>\r\n            <CardText className='mb-2'>Make your app management easy and fun!</CardText>\r\n\r\n            <Form action='/' className='auth-register-form mt-2' onSubmit={handleSubmit(onSubmit)}>\r\n              <div className='mb-1'>\r\n                <Label className='form-label' for='register-username'>\r\n                  Username\r\n                </Label>\r\n                <Controller\r\n                  id='username'\r\n                  name='username'\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <Input autoFocus placeholder='johndoe' invalid={errors.username && true} {...field} />\r\n                  )}\r\n                />\r\n                {errors.username ? <FormFeedback>{errors.username.message}</FormFeedback> : null}\r\n              </div>\r\n              <div className='mb-1'>\r\n                <Label className='form-label' for='register-email'>\r\n                  Email\r\n                </Label>\r\n                <Controller\r\n                  id='email'\r\n                  name='email'\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <Input type='email' placeholder='john@example.com' invalid={errors.email && true} {...field} />\r\n                  )}\r\n                />\r\n                {errors.email ? <FormFeedback>{errors.email.message}</FormFeedback> : null}\r\n              </div>\r\n              <div className='mb-1'>\r\n                <Label className='form-label' for='register-password'>\r\n                  Password\r\n                </Label>\r\n                <Controller\r\n                  id='password'\r\n                  name='password'\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <InputPasswordToggle className='input-group-merge' invalid={errors.password && true} {...field} />\r\n                  )}\r\n                />\r\n              </div>\r\n              <div className='form-check mb-1'>\r\n                <Controller\r\n                  name='terms'\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <Input {...field} id='terms' type='checkbox' checked={field.value} invalid={errors.terms && true} />\r\n                  )}\r\n                />\r\n                <Label className='form-check-label' for='terms'>\r\n                  I agree to\r\n                  <a className='ms-25' href='/' onClick={e => e.preventDefault()}>\r\n                    privacy policy & terms\r\n                  </a>\r\n                </Label>\r\n              </div>\r\n              <Button type='submit' block color='primary'>\r\n                Sign up\r\n              </Button>\r\n            </Form>\r\n            <p className='text-center mt-2'>\r\n              <span className='me-25'>Already have an account?</span>\r\n              <Link to='/login'>\r\n                <span>Sign in instead</span>\r\n              </Link>\r\n            </p>\r\n            <div className='divider my-2'>\r\n              <div className='divider-text'>or</div>\r\n            </div>\r\n            <div className='auth-footer-btn d-flex justify-content-center'>\r\n              {/* <Button color='facebook'>\r\n                <Facebook size={14} />\r\n              </Button>\r\n              <Button color='twitter'>\r\n                <Twitter size={14} />\r\n              </Button> */}\r\n               <Button color='white' className='w-100 d-flex align-items-center border justify-content-center shadow-sm '  >\r\n                <img src={googleicon} sizes={12} className='me-1' ></img>\r\n                Sign up with Google\r\n              </Button>\r\n              {/* <Button className='me-0' color='github'>\r\n                <GitHub size={14} />\r\n              </Button> */}\r\n            </div>\r\n          </Col>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\authentication\\ResetPasswordBasic.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\authentication\\ResetPasswordCover.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\authentication\\RegisterBasic.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\authentication\\RegisterCover.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\authentication\\LoginCover.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\knowledge-base\\KnowledgeBaseCategoryQuestion.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\knowledge-base\\KnowledgeBaseCategory.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\knowledge-base\\KnowledgeBase.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\authentication\\LoginBasic.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\validation\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-layouts\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\wizard\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\pricing\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\modal-examples\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\account-settings\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\license\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\api-key\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\faq\\index.js",["3912"],"// ** Reactstrap Imports\r\nimport { Fragment, useState, useEffect } from 'react'\r\n\r\n// ** Third Party Imports\r\nimport axios from 'axios'\r\n\r\n// ** Demo Components\r\nimport Faqs from './Faqs'\r\nimport FaqFilter from './FaqFilter'\r\nimport FaqContact from './FaqContact'\r\n\r\n// ** Custom Component\r\nimport Breadcrumbs from '@components/breadcrumbs'\r\n\r\n// ** Styles\r\nimport '@styles/base/pages/page-faq.scss'\r\n\r\nconst Faq = () => {\r\n  // ** States\r\n  const [data, setData] = useState(null),\r\n    [searchTerm, setSearchTerm] = useState('')\r\n\r\n  const getFAQData = query => {\r\n    return axios.get('/faq/data', { params: { q: query } }).then(response => {\r\n      setData(response.data)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getFAQData(searchTerm)\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs breadCrumbTitle='FAQ' breadCrumbParent='Pages' breadCrumbActive='FAQ' />\r\n      <FaqFilter searchTerm={searchTerm} setSearchTerm={setSearchTerm} getFAQData={getFAQData} />\r\n      {data !== null ? <Faqs data={data} searchTerm={searchTerm} setSearchTerm={setSearchTerm} /> : null}\r\n      <FaqContact />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Faq\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\profile\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\file-uploader\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\select\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\editor\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\number-input\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\switch\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\checkboxes\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\textarea\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\radio\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input-groups\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\blog\\edit\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\blog\\details\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input-mask\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\datepicker\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\blog\\list\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\charts\\chart-js\\ChartjsLineChart.js",["3913"],"// ** Third Party Components\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { Calendar } from \"react-feather\";\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardBody,\r\n  CardSubtitle,\r\n} from \"reactstrap\";\r\n\r\nconst ChartjsLineChart = ({\r\n  labelColor,\r\n  gridLineColor,\r\n  warningColorShade,\r\n  lineChartDanger,\r\n  lineChartPrimary,\r\n}) => {\r\n  // ** Chart Options\r\n  const options = {\r\n    responsive: true,\r\n    backgroundColor: false,\r\n    maintainAspectRatio: false,\r\n    scales: {\r\n      x: {\r\n        ticks: { color: labelColor },\r\n        grid: {\r\n          borderColor: gridLineColor,\r\n          color: gridLineColor,\r\n        },\r\n      },\r\n      y: {\r\n        min: 0,\r\n        max: 400,\r\n        scaleLabel: { display: true },\r\n        ticks: {\r\n          stepSize: 100,\r\n          color: labelColor,\r\n        },\r\n        grid: {\r\n          borderColor: gridLineColor,\r\n          color: gridLineColor,\r\n        },\r\n      },\r\n    },\r\n    plugins: {\r\n      legend: {\r\n        align: \"start\",\r\n        position: \"top\",\r\n        labels: {\r\n          boxWidth: 10,\r\n          marginBottom: 25,\r\n          color: labelColor,\r\n          usePointStyle: true,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  // ** Chart Data\r\n  const data = {\r\n    labels: [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140],\r\n    datasets: [\r\n      {\r\n        data: [\r\n          80, 150, 180, 270, 210, 160, 160, 202, 265, 210, 270, 255, 290, 360,\r\n          375,\r\n        ],\r\n        fill: false,\r\n        tension: 0.5,\r\n        pointRadius: 1,\r\n        label: \"Signed\",\r\n        pointHoverRadius: 5,\r\n        pointStyle: \"circle\",\r\n        pointHoverBorderWidth: 5,\r\n        borderColor: lineChartDanger,\r\n        pointBorderColor: \"transparent\",\r\n        backgroundColor: \"#37C39E\",\r\n        pointHoverBackgroundColor: lineChartDanger,\r\n      },\r\n      {\r\n        data: [\r\n          80, 125, 105, 130, 215, 195, 140, 160, 230, 300, 220, 170, 210, 200,\r\n          280,\r\n        ],\r\n        fill: false,\r\n        tension: 0.5,\r\n        label: \"Signed\",\r\n        pointRadius: 1,\r\n        pointHoverRadius: 5,\r\n        pointStyle: \"circle\",\r\n        pointHoverBorderWidth: 5,\r\n        borderColor: lineChartPrimary,\r\n        pointBorderColor: \"transparent\",\r\n        backgroundColor: \"#EE658E\",\r\n        pointHoverBackgroundColor: lineChartPrimary,\r\n      },\r\n    ],\r\n  };\r\n\r\n  //** To add spacing between legends and chart\r\n  const plugins = [\r\n    {\r\n      beforeInit(chart) {\r\n        chart.legend.afterFit = function () {\r\n          this.height += 20;\r\n        };\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader className='className=\"d-flex justify-content-between align-items-sm-center align-items-start flex-sm-row flex-column\"'>\r\n        <CardTitle className=\"mb-75 card_title\" tag=\"h4\">\r\n          Inspection Signed Status\r\n        </CardTitle>\r\n        <div>\r\n          <div\r\n            style={{\r\n              border: \"1px solid #BFC5D0\",\r\n              padding: \"7px\",\r\n              borderRadius: \"5px\",\r\n            }}\r\n          >\r\n            <Calendar size={14} /> This Week\r\n          </div>\r\n        </div>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div style={{ height: \"450px\" }}>\r\n          <Line data={data} options={options} height={450} plugins={plugins} />\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ChartjsLineChart;\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\charts\\chart-js\\ChartjsBarChart.js",["3914"],"// ** Third Party Components\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport { Calendar } from \"react-feather\";\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\";\r\n\r\nconst ChartjsBarChart = ({\r\n  success,\r\n  gridLineColors,\r\n  labelColors,\r\n  labels,\r\n  Ctitle,\r\n}) => {\r\n  // ** Chart Options\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    animation: { duration: 500 },\r\n    scales: {\r\n      x: {\r\n        grid: {\r\n          color: gridLineColors,\r\n          borderColor: gridLineColors,\r\n        },\r\n        ticks: { color: labelColors },\r\n      },\r\n      y: {\r\n        min: 0,\r\n        max: 400,\r\n        grid: {\r\n          color: gridLineColors,\r\n          borderColor: gridLineColors,\r\n        },\r\n        ticks: {\r\n          stepSize: 100,\r\n          color: labelColors,\r\n        },\r\n      },\r\n    },\r\n    plugins: {\r\n      legend: { display: false },\r\n    },\r\n  };\r\n\r\n  // ** Chart data\r\n  const data = {\r\n    // labels: [\"Dry Hire job\", \"Good Inspection complete\", \"Inspection Overdue\", \"Unsinged job\"],\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        maxBarThickness: 15,\r\n        backgroundColor: \" #2873B9\",\r\n        borderColor: \"transparent\",\r\n        borderRadius: { topRight: 15, topLeft: 15 },\r\n        data: [275, 90, 190, 205, 125, 85, 55, 87, 127, 150, 230, 280, 190],\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Card className=\"h-100 mb-0\">\r\n      <CardHeader className=\"d-flex justify-content-between align-items-sm-center align-items-start flex-sm-row flex-column\">\r\n        {/* <CardTitle className=\"card_title\" tag=\"h4\">Total Number of Payments</CardTitle> */}\r\n        <CardTitle className=\"card_title\" tag=\"h4\">\r\n          {Ctitle} {/* Assuming the prop name is 'title' */}\r\n        </CardTitle>\r\n        <div>\r\n          <div\r\n            style={{\r\n              border: \"1px solid #BFC5D0\",\r\n              padding: \"7px\",\r\n              borderRadius: \"5px\",\r\n            }}\r\n          >\r\n            <Calendar size={14} /> This Week\r\n          </div>\r\n        </div>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div style={{ height: \"250px\" }}>\r\n          <Bar data={data} options={options} height={400} />\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\nexport default ChartjsBarChart;\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\invoice\\preview\\PreviewActions.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\invoice\\preview\\PreviewCard.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\knowledge-base\\KnowledgeBaseHeader.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\chat\\SidebarLeft.js",["3915"],"// ** React Imports\r\nimport { useState, useEffect } from 'react'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Store & Actions\r\nimport { selectChat } from './store'\r\nimport { useDispatch } from 'react-redux'\r\n\r\n// ** Utils\r\nimport { formatDateToMonthShort, isObjEmpty } from '@utils'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { X, Search, CheckSquare, Bell, User, Trash } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { CardText, InputGroup, InputGroupText, Badge, Input, Button, Label } from 'reactstrap'\r\n\r\nconst SidebarLeft = props => {\r\n  // ** Props & Store\r\n  const { store, sidebar, handleSidebar, userSidebarLeft, handleUserSidebarLeft } = props\r\n  const { chats, contacts, userProfile } = store\r\n\r\n  // ** Dispatch\r\n  const dispatch = useDispatch()\r\n\r\n  // ** State\r\n  const [query, setQuery] = useState('')\r\n  const [about, setAbout] = useState('')\r\n  const [active, setActive] = useState(0)\r\n  const [status, setStatus] = useState('online')\r\n  const [filteredChat, setFilteredChat] = useState([])\r\n  const [filteredContacts, setFilteredContacts] = useState([])\r\n\r\n  // ** Handles User Chat Click\r\n  const handleUserClick = id => {\r\n    dispatch(selectChat(id))\r\n    setActive(id)\r\n    if (sidebar === true) {\r\n      handleSidebar()\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!isObjEmpty(store.selectedUser)) {\r\n      if (store.selectedUser.chat) {\r\n        setActive(store.selectedUser.chat.id)\r\n      } else {\r\n        setActive(store.selectedUser.contact.id)\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  // ** Renders Chat\r\n  const renderChats = () => {\r\n    if (chats && chats.length) {\r\n      if (query.length && !filteredChat.length) {\r\n        return (\r\n          <li className='no-results show'>\r\n            <h6 className='mb-0'>No Chats Found</h6>\r\n          </li>\r\n        )\r\n      } else {\r\n        const arrToMap = query.length && filteredChat.length ? filteredChat : chats\r\n\r\n        return arrToMap.map(item => {\r\n          const time = formatDateToMonthShort(item.chat.lastMessage ? item.chat.lastMessage.time : new Date())\r\n\r\n          return (\r\n            <li\r\n              key={item.id}\r\n              onClick={() => handleUserClick(item.id)}\r\n              className={classnames({\r\n                active: active === item.id\r\n              })}\r\n            >\r\n              <Avatar img={item.avatar} imgHeight='42' imgWidth='42' status={item.status} />\r\n              <div className='chat-info flex-grow-1'>\r\n                <h5 className='mb-0'>{item.fullName}</h5>\r\n                <CardText className='text-truncate'>\r\n                  {item.chat.lastMessage ? item.chat.lastMessage.message : chats[chats.length - 1].message}\r\n                </CardText>\r\n              </div>\r\n              <div className='chat-meta text-nowrap'>\r\n                <small className='float-end mb-25 chat-time ms-25'>{time}</small>\r\n                {item.chat.unseenMsgs >= 1 ? (\r\n                  <Badge className='float-end' color='danger' pill>\r\n                    {item.chat.unseenMsgs}\r\n                  </Badge>\r\n                ) : null}\r\n              </div>\r\n            </li>\r\n          )\r\n        })\r\n      }\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  // ** Renders Contact\r\n  const renderContacts = () => {\r\n    if (contacts && contacts.length) {\r\n      if (query.length && !filteredContacts.length) {\r\n        return (\r\n          <li className='no-results show'>\r\n            <h6 className='mb-0'>No Chats Found</h6>\r\n          </li>\r\n        )\r\n      } else {\r\n        const arrToMap = query.length && filteredContacts.length ? filteredContacts : contacts\r\n        return arrToMap.map(item => {\r\n          return (\r\n            <li key={item.fullName} onClick={() => handleUserClick(item.id)}>\r\n              <Avatar img={item.avatar} imgHeight='42' imgWidth='42' />\r\n              <div className='chat-info flex-grow-1'>\r\n                <h5 className='mb-0'>{item.fullName}</h5>\r\n                <CardText className='text-truncate'>{item.about}</CardText>\r\n              </div>\r\n            </li>\r\n          )\r\n        })\r\n      }\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  // ** Handles Filter\r\n  const handleFilter = e => {\r\n    setQuery(e.target.value)\r\n    const searchFilterFunction = contact => contact.fullName.toLowerCase().includes(e.target.value.toLowerCase())\r\n    const filteredChatsArr = chats.filter(searchFilterFunction)\r\n    const filteredContactssArr = contacts.filter(searchFilterFunction)\r\n    setFilteredChat([...filteredChatsArr])\r\n    setFilteredContacts([...filteredContactssArr])\r\n  }\r\n\r\n  const renderAboutCount = () => {\r\n    if (userProfile && userProfile.about && userProfile.about.length && about.length === 0) {\r\n      return userProfile.about.length\r\n    } else {\r\n      return about.length\r\n    }\r\n  }\r\n\r\n  return store ? (\r\n    <div className='sidebar-left'>\r\n      <div className='sidebar'>\r\n        <div\r\n          className={classnames('chat-profile-sidebar', {\r\n            show: userSidebarLeft\r\n          })}\r\n        >\r\n          <header className='chat-profile-header'>\r\n            <div className='close-icon' onClick={handleUserSidebarLeft}>\r\n              <X size={14} />\r\n            </div>\r\n            <div className='header-profile-sidebar'>\r\n              <Avatar className='box-shadow-1 avatar-border' img={userProfile.avatar} status={status} size='xl' />\r\n              <h4 className='chat-user-name'>{userProfile.fullName}</h4>\r\n              <span className='user-post'>{userProfile.role}</span>\r\n            </div>\r\n          </header>\r\n          <PerfectScrollbar className='profile-sidebar-area' options={{ wheelPropagation: false }}>\r\n            <h6 className='section-label mb-1'>About</h6>\r\n            <div className='about-user'>\r\n              <Input\r\n                rows='5'\r\n                type='textarea'\r\n                defaultValue={userProfile.about}\r\n                onChange={e => setAbout(e.target.value)}\r\n                className={classnames('char-textarea', {\r\n                  'text-danger': about && about.length > 120\r\n                })}\r\n              />\r\n              <small className='counter-value float-end'>\r\n                <span className='char-count'>{renderAboutCount()}</span> / 120\r\n              </small>\r\n            </div>\r\n            <h6 className='section-label mb-1 mt-3'>Status</h6>\r\n            <ul className='list-unstyled user-status'>\r\n              <li className='pb-1'>\r\n                <div className='form-check form-check-success'>\r\n                  <Input\r\n                    type='radio'\r\n                    label='Online'\r\n                    id='user-online'\r\n                    checked={status === 'online'}\r\n                    onChange={() => setStatus('online')}\r\n                  />\r\n                  <Label className='form-check-label' for='user-online'>\r\n                    Online\r\n                  </Label>\r\n                </div>\r\n              </li>\r\n              <li className='pb-1'>\r\n                <div className='form-check form-check-danger'>\r\n                  <Input\r\n                    type='radio'\r\n                    id='user-busy'\r\n                    label='Do Not Disturb'\r\n                    checked={status === 'busy'}\r\n                    onChange={() => setStatus('busy')}\r\n                  />\r\n                  <Label className='form-check-label' for='user-busy'>\r\n                    Busy\r\n                  </Label>\r\n                </div>\r\n              </li>\r\n              <li className='pb-1'>\r\n                <div className='form-check form-check-warning'>\r\n                  <Input\r\n                    type='radio'\r\n                    label='Away'\r\n                    id='user-away'\r\n                    checked={status === 'away'}\r\n                    onChange={() => setStatus('away')}\r\n                  />\r\n                  <Label className='form-check-label' for='user-away'>\r\n                    Away\r\n                  </Label>\r\n                </div>\r\n              </li>\r\n              <li className='pb-1'>\r\n                <div className='form-check form-check-secondary'>\r\n                  <Input\r\n                    type='radio'\r\n                    label='Offline'\r\n                    id='user-offline'\r\n                    checked={status === 'offline'}\r\n                    onChange={() => setStatus('offline')}\r\n                  />\r\n                  <Label className='form-check-label' for='user-offline'>\r\n                    Offline\r\n                  </Label>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n            <h6 className='section-label mb-1 mt-2'>Settings</h6>\r\n            <ul className='list-unstyled'>\r\n              <li className='d-flex justify-content-between align-items-center mb-1'>\r\n                <div className='d-flex align-items-center'>\r\n                  <CheckSquare className='me-75' size='18' />\r\n                  <span className='align-middle'>Two-step Verification</span>\r\n                </div>\r\n                <div className='form-switch'>\r\n                  <Input type='switch' id='verification' name='verification' defaultChecked />\r\n                </div>\r\n              </li>\r\n              <li className='d-flex justify-content-between align-items-center mb-1'>\r\n                <div className='d-flex align-items-center'>\r\n                  <Bell className='me-75' size='18' />\r\n                  <span className='align-middle'>Notification</span>\r\n                </div>\r\n                <div className='form-switch'>\r\n                  <Input type='switch' id='notifications' name='notifications' />\r\n                </div>\r\n              </li>\r\n              <li className='d-flex align-items-center cursor-pointer mb-1'>\r\n                <User className='me-75' size='18' />\r\n                <span className='align-middle'>Invite Friends</span>\r\n              </li>\r\n              <li className='d-flex align-items-center cursor-pointer'>\r\n                <Trash className='me-75' size='18' />\r\n                <span className='align-middle'>Delete Account</span>\r\n              </li>\r\n            </ul>\r\n            <div className='mt-3'>\r\n              <Button color='primary'>Logout</Button>\r\n            </div>\r\n          </PerfectScrollbar>\r\n        </div>\r\n        <div\r\n          className={classnames('sidebar-content', {\r\n            show: sidebar === true\r\n          })}\r\n        >\r\n          <div className='sidebar-close-icon' onClick={handleSidebar}>\r\n            <X size={14} />\r\n          </div>\r\n          <div className='chat-fixed-search'>\r\n            <div className='d-flex align-items-center w-100'>\r\n              <div className='sidebar-profile-toggle' onClick={handleUserSidebarLeft}>\r\n                {Object.keys(userProfile).length ? (\r\n                  <Avatar\r\n                    className='avatar-border'\r\n                    img={userProfile.avatar}\r\n                    status={status}\r\n                    imgHeight='42'\r\n                    imgWidth='42'\r\n                  />\r\n                ) : null}\r\n              </div>\r\n              <InputGroup className='input-group-merge ms-1 w-100'>\r\n                <InputGroupText className='round'>\r\n                  <Search className='text-muted' size={14} />\r\n                </InputGroupText>\r\n                <Input\r\n                  value={query}\r\n                  className='round'\r\n                  placeholder='Search or start a new chat'\r\n                  onChange={handleFilter}\r\n                />\r\n              </InputGroup>\r\n            </div>\r\n          </div>\r\n          <PerfectScrollbar className='chat-user-list-wrapper list-group' options={{ wheelPropagation: false }}>\r\n            <h4 className='chat-list-title'>Chats</h4>\r\n            <ul className='chat-users-list chat-list media-list'>{renderChats()}</ul>\r\n            <h4 className='chat-list-title'>Contacts</h4>\r\n            <ul className='chat-users-list contact-list media-list'>{renderContacts()}</ul>\r\n          </PerfectScrollbar>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : null\r\n}\r\n\r\nexport default SidebarLeft\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\chat\\UserProfileSidebar.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\chat\\Chat.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\calendar\\Calendar.js",["3916"],"// ** React Import\r\nimport { useEffect, useRef, memo, Fragment } from 'react'\r\n\r\n// ** Full Calendar & it's Plugins\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport listPlugin from '@fullcalendar/list'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport timeGridPlugin from '@fullcalendar/timegrid'\r\nimport interactionPlugin from '@fullcalendar/interaction'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Third Party Components\r\nimport { toast } from 'react-toastify'\r\nimport { Card, CardBody } from 'reactstrap'\r\nimport { Menu, Check } from 'react-feather'\r\n\r\n// ** Toast Component\r\nconst ToastComponent = ({ title, icon, color }) => (\r\n  <Fragment>\r\n    <div className='toastify-header pb-0'>\r\n      <div className='title-wrapper'>\r\n        <Avatar size='sm' color={color} icon={icon} />\r\n        <h6 className='toast-title'>{title}</h6>\r\n      </div>\r\n    </div>\r\n  </Fragment>\r\n)\r\n\r\nconst Calendar = props => {\r\n  // ** Refs\r\n  const calendarRef = useRef(null)\r\n\r\n  // ** Props\r\n  const {\r\n    store,\r\n    isRtl,\r\n    dispatch,\r\n    calendarsColor,\r\n    calendarApi,\r\n    setCalendarApi,\r\n    handleAddEventSidebar,\r\n    blankEvent,\r\n    toggleSidebar,\r\n    selectEvent,\r\n    updateEvent\r\n  } = props\r\n\r\n  // ** UseEffect checks for CalendarAPI Update\r\n  useEffect(() => {\r\n    if (calendarApi === null) {\r\n      setCalendarApi(calendarRef.current.getApi())\r\n    }\r\n  }, [calendarApi])\r\n\r\n  // ** calendarOptions(Props)\r\n  const calendarOptions = {\r\n    events: store.events.length ? store.events : [],\r\n    plugins: [interactionPlugin, dayGridPlugin, timeGridPlugin, listPlugin],\r\n    initialView: 'dayGridMonth',\r\n    headerToolbar: {\r\n      start: 'sidebarToggle, prev,next, title',\r\n      end: 'dayGridMonth,timeGridWeek,timeGridDay,listMonth'\r\n    },\r\n    /*\r\n      Enable dragging and resizing event\r\n      ? Docs: https://fullcalendar.io/docs/editable\r\n    */\r\n    editable: true,\r\n\r\n    /*\r\n      Enable resizing event from start\r\n      ? Docs: https://fullcalendar.io/docs/eventResizableFromStart\r\n    */\r\n    eventResizableFromStart: true,\r\n\r\n    /*\r\n      Automatically scroll the scroll-containers during event drag-and-drop and date selecting\r\n      ? Docs: https://fullcalendar.io/docs/dragScroll\r\n    */\r\n    dragScroll: true,\r\n\r\n    /*\r\n      Max number of events within a given day\r\n      ? Docs: https://fullcalendar.io/docs/dayMaxEvents\r\n    */\r\n    dayMaxEvents: 2,\r\n\r\n    /*\r\n      Determines if day names and week names are clickable\r\n      ? Docs: https://fullcalendar.io/docs/navLinks\r\n    */\r\n    navLinks: true,\r\n\r\n    eventClassNames({ event: calendarEvent }) {\r\n      // eslint-disable-next-line no-underscore-dangle\r\n      const colorName = calendarsColor[calendarEvent._def.extendedProps.calendar]\r\n\r\n      return [\r\n        // Background Color\r\n        `bg-light-${colorName}`\r\n      ]\r\n    },\r\n\r\n    eventClick({ event: clickedEvent }) {\r\n      dispatch(selectEvent(clickedEvent))\r\n      handleAddEventSidebar()\r\n\r\n      // * Only grab required field otherwise it goes in infinity loop\r\n      // ! Always grab all fields rendered by form (even if it get `undefined`) otherwise due to Vue3/Composition API you might get: \"object is not extensible\"\r\n      // event.value = grabEventDataFromEventApi(clickedEvent)\r\n\r\n      // eslint-disable-next-line no-use-before-define\r\n      // isAddNewEventSidebarActive.value = true\r\n    },\r\n\r\n    customButtons: {\r\n      sidebarToggle: {\r\n        text: <Menu className='d-xl-none d-block' />,\r\n        click() {\r\n          toggleSidebar(true)\r\n        }\r\n      }\r\n    },\r\n\r\n    dateClick(info) {\r\n      const ev = blankEvent\r\n      ev.start = info.date\r\n      ev.end = info.date\r\n      dispatch(selectEvent(ev))\r\n      handleAddEventSidebar()\r\n    },\r\n\r\n    /*\r\n      Handle event drop (Also include dragged event)\r\n      ? Docs: https://fullcalendar.io/docs/eventDrop\r\n      ? We can use `eventDragStop` but it doesn't return updated event so we have to use `eventDrop` which returns updated event\r\n    */\r\n    eventDrop({ event: droppedEvent }) {\r\n      dispatch(updateEvent(droppedEvent))\r\n      toast.success(<ToastComponent title='Event Updated' color='success' icon={<Check />} />, {\r\n        icon: false,\r\n        autoClose: 2000,\r\n        hideProgressBar: true,\r\n        closeButton: false\r\n      })\r\n    },\r\n\r\n    /*\r\n      Handle event resize\r\n      ? Docs: https://fullcalendar.io/docs/eventResize\r\n    */\r\n    eventResize({ event: resizedEvent }) {\r\n      dispatch(updateEvent(resizedEvent))\r\n      toast.success(<ToastComponent title='Event Updated' color='success' icon={<Check />} />, {\r\n        icon: false,\r\n        autoClose: 2000,\r\n        hideProgressBar: true,\r\n        closeButton: false\r\n      })\r\n    },\r\n\r\n    ref: calendarRef,\r\n\r\n    // Get direction from app state (store)\r\n    direction: isRtl ? 'rtl' : 'ltr'\r\n  }\r\n\r\n  return (\r\n    <Card className='shadow-none border-0 mb-0 rounded-0'>\r\n      <CardBody className='pb-0'>\r\n        <FullCalendar {...calendarOptions} />{' '}\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default memo(Calendar)\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\email\\Sidebar.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\calendar\\AddEventSidebar.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\calendar\\SidebarLeft.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\email\\Mails.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\todo\\TaskSidebar.js",["3917","3918"],"// ** React Imports\r\nimport { useState, Fragment } from 'react'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport Flatpickr from 'react-flatpickr'\r\nimport { Editor } from 'react-draft-wysiwyg'\r\nimport { X, Star, Trash } from 'react-feather'\r\nimport Select, { components } from 'react-select'\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport { EditorState, ContentState } from 'draft-js'\r\n\r\n// ** Reactstrap Imports\r\nimport { Modal, ModalBody, Button, Form, Input, Label, FormFeedback } from 'reactstrap'\r\n\r\n// ** Utils\r\nimport { isObjEmpty, selectThemeColors } from '@utils'\r\n\r\n// ** Assignee Avatars\r\nimport img1 from '@src/assets/images/portrait/small/avatar-s-3.jpg'\r\nimport img2 from '@src/assets/images/portrait/small/avatar-s-1.jpg'\r\nimport img3 from '@src/assets/images/portrait/small/avatar-s-4.jpg'\r\nimport img4 from '@src/assets/images/portrait/small/avatar-s-6.jpg'\r\nimport img5 from '@src/assets/images/portrait/small/avatar-s-2.jpg'\r\nimport img6 from '@src/assets/images/portrait/small/avatar-s-11.jpg'\r\n\r\n// ** Styles Imports\r\nimport '@styles/react/libs/editor/editor.scss'\r\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\n\r\n// ** Function to capitalize the first letter of string\r\nconst capitalize = string => string.charAt(0).toUpperCase() + string.slice(1)\r\n\r\n// ** Modal Header\r\nconst ModalHeader = props => {\r\n  // ** Props\r\n  const { children, store, handleTaskSidebar, setDeleted, deleted, important, setImportant, deleteTask, dispatch } =\r\n    props\r\n\r\n  // ** Function to delete task\r\n  const handleDeleteTask = () => {\r\n    setDeleted(!deleted)\r\n    dispatch(deleteTask(store.selectedTask.id))\r\n    handleTaskSidebar()\r\n  }\r\n\r\n  return (\r\n    <div className='modal-header d-flex align-items-center justify-content-between mb-1'>\r\n      <h5 className='modal-title'>{children}</h5>\r\n      <div className='todo-item-action d-flex align-items-center'>\r\n        {store && !isObjEmpty(store.selectedTask) ? (\r\n          <Trash className='cursor-pointer mt-25' size={16} onClick={() => handleDeleteTask()} />\r\n        ) : null}\r\n        <span className='todo-item-favorite cursor-pointer mx-75'>\r\n          <Star\r\n            size={16}\r\n            onClick={() => setImportant(!important)}\r\n            className={classnames({\r\n              'text-warning': important === true\r\n            })}\r\n          />\r\n        </span>\r\n        <X className='fw-normal mt-25' size={16} onClick={handleTaskSidebar} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst TaskSidebar = props => {\r\n  // ** Props\r\n  const { open, handleTaskSidebar, store, dispatch, updateTask, selectTask, addTask, deleteTask } = props\r\n\r\n  // ** States\r\n  const [assignee, setAssignee] = useState({ value: 'pheobe', label: 'Pheobe Buffay', img: img1 })\r\n  const [tags, setTags] = useState([])\r\n  const [desc, setDesc] = useState(EditorState.createEmpty())\r\n  const [completed, setCompleted] = useState(false)\r\n  const [important, setImportant] = useState(false)\r\n  const [deleted, setDeleted] = useState(false)\r\n  const [dueDate, setDueDate] = useState(new Date())\r\n\r\n  const {\r\n    control,\r\n    setError,\r\n    setValue,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({\r\n    defaultValues: { title: '' }\r\n  })\r\n\r\n  // ** Assignee Select Options\r\n  const assigneeOptions = [\r\n    { value: 'pheobe', label: 'Pheobe Buffay', img: img1 },\r\n    { value: 'chandler', label: 'Chandler Bing', img: img2 },\r\n    { value: 'ross', label: 'Ross Geller', img: img3 },\r\n    { value: 'monica', label: 'Monica Geller', img: img4 },\r\n    { value: 'joey', label: 'Joey Tribbiani', img: img5 },\r\n    { value: 'Rachel', label: 'Rachel Green', img: img6 }\r\n  ]\r\n\r\n  // ** Tag Select Options\r\n  const tagOptions = [\r\n    { value: 'team', label: 'Team' },\r\n    { value: 'low', label: 'Low' },\r\n    { value: 'medium', label: 'Medium' },\r\n    { value: 'high', label: 'High' },\r\n    { value: 'update', label: 'Update' }\r\n  ]\r\n\r\n  // ** Custom Assignee Component\r\n  const AssigneeComponent = ({ data, ...props }) => {\r\n    return (\r\n      <components.Option {...props}>\r\n        <div className='d-flex align-items-center'>\r\n          <img className='d-block rounded-circle me-50' src={data.img} height='26' width='26' alt={data.label} />\r\n          <p className='mb-0'>{data.label}</p>\r\n        </div>\r\n      </components.Option>\r\n    )\r\n  }\r\n\r\n  // ** Returns sidebar title\r\n  const handleSidebarTitle = () => {\r\n    if (store && !isObjEmpty(store.selectedTask)) {\r\n      return (\r\n        <Button\r\n          outline\r\n          size='sm'\r\n          onClick={() => setCompleted(!completed)}\r\n          color={completed === true ? 'success' : 'secondary'}\r\n        >\r\n          {completed === true ? 'Completed' : 'Mark Complete'}\r\n        </Button>\r\n      )\r\n    } else {\r\n      return 'Add Task'\r\n    }\r\n  }\r\n\r\n  // ** Function to run when sidebar opens\r\n  const handleSidebarOpened = () => {\r\n    const { selectedTask } = store\r\n    if (!isObjEmpty(selectedTask)) {\r\n      setValue('title', selectedTask.title)\r\n      setCompleted(selectedTask.isCompleted)\r\n      setImportant(selectedTask.isImportant)\r\n      setAssignee([\r\n        {\r\n          value: selectedTask.assignee.fullName,\r\n          label: selectedTask.assignee.fullName,\r\n          img: selectedTask.assignee.avatar\r\n        }\r\n      ])\r\n      setDueDate(selectedTask.dueDate)\r\n      if (typeof selectedTask.description === 'string') {\r\n        setDesc(EditorState.createWithContent(ContentState.createFromText(selectedTask.description)))\r\n      } else {\r\n        const obj = selectedTask.description._immutable.currentContent.blockMap\r\n        const property = Object.keys(obj).map(val => val)\r\n\r\n        setDesc(EditorState.createWithContent(ContentState.createFromText(obj[property].text)))\r\n      }\r\n\r\n      if (selectedTask.tags.length) {\r\n        const tags = []\r\n        selectedTask.tags.map(tag => {\r\n          tags.push({ value: tag, label: capitalize(tag) })\r\n        })\r\n        setTags(tags)\r\n      }\r\n    }\r\n  }\r\n\r\n  // ** Function to run when sidebar closes\r\n  const handleSidebarClosed = () => {\r\n    setTags([])\r\n    setDesc('')\r\n    setValue('title', '')\r\n    setAssignee({ value: 'pheobe', label: 'Pheobe Buffay', img: img1 })\r\n    setCompleted(false)\r\n    setImportant(false)\r\n    setDueDate(new Date())\r\n    dispatch(selectTask({}))\r\n  }\r\n\r\n  // ** Function to reset fileds\r\n  const handleResetFields = () => {\r\n    const descValue = EditorState.createWithContent(ContentState.createFromText(store.selectedTask.description))\r\n\r\n    setValue('title', store.selectedTask.title)\r\n    setDesc(descValue)\r\n    setCompleted(store.selectedTask.isCompleted)\r\n    setImportant(store.selectedTask.isImportant)\r\n    setDeleted(store.selectedTask.isDeleted)\r\n    setDueDate(store.selectedTask.dueDate)\r\n    if (store.selectedTask.assignee.fullName !== assignee.label) {\r\n      setAssignee({\r\n        value: store.selectedTask.assignee.fullName,\r\n        label: store.selectedTask.assignee.fullName,\r\n        img: store.selectedTask.assignee.avatar\r\n      })\r\n    }\r\n    if (store.selectedTask.tags.length) {\r\n      const tags = []\r\n      store.selectedTask.tags.map(tag => {\r\n        tags.push({ value: tag, label: capitalize(tag) })\r\n      })\r\n      setTags(tags)\r\n    }\r\n  }\r\n\r\n  // ** Renders Footer Buttons\r\n  const renderFooterButtons = () => {\r\n    if (store && !isObjEmpty(store.selectedTask)) {\r\n      return (\r\n        <Fragment>\r\n          <Button color='primary' className='update-btn update-todo-item me-1'>\r\n            Update\r\n          </Button>\r\n          <Button color='secondary' onClick={handleResetFields} outline>\r\n            Reset\r\n          </Button>\r\n        </Fragment>\r\n      )\r\n    } else {\r\n      return (\r\n        <Fragment>\r\n          <Button color='primary' className='add-todo-item me-1'>\r\n            Add\r\n          </Button>\r\n          <Button color='secondary' onClick={handleTaskSidebar} outline>\r\n            Cancel\r\n          </Button>\r\n        </Fragment>\r\n      )\r\n    }\r\n  }\r\n\r\n  const onSubmit = data => {\r\n    const newTaskTag = []\r\n\r\n    const doesInclude = !isObjEmpty(store.selectedTask) && assignee.label === store.selectedTask.assignee.fullName\r\n\r\n    if (tags.length) {\r\n      tags.map(tag => newTaskTag.push(tag.value))\r\n    }\r\n\r\n    const newAssignee = {\r\n      fullName: assignee.label,\r\n      avatar: assignee.img\r\n    }\r\n    const state = {\r\n      dueDate,\r\n      title: data.title,\r\n      tags: newTaskTag,\r\n      description: desc,\r\n      isCompleted: completed,\r\n      isDeleted: deleted,\r\n      isImportant: important,\r\n      assignee: doesInclude || assignee.label === undefined ? store.selectedTask.assignee : newAssignee\r\n    }\r\n\r\n    if (data.title.length) {\r\n      if (isObjEmpty(errors)) {\r\n        if (isObjEmpty(store.selectedTask) || (!isObjEmpty(store.selectedTask) && !store.selectedTask.title.length)) {\r\n          dispatch(addTask(state))\r\n        } else {\r\n          dispatch(updateTask({ ...state, id: store.selectedTask.id }))\r\n        }\r\n        handleTaskSidebar()\r\n      }\r\n    } else {\r\n      setError('title', {\r\n        type: 'manual'\r\n      })\r\n    }\r\n  }\r\n  return (\r\n    <Modal\r\n      isOpen={open}\r\n      toggle={handleTaskSidebar}\r\n      className='sidebar-lg'\r\n      contentClassName='p-0'\r\n      onOpened={handleSidebarOpened}\r\n      onClosed={handleSidebarClosed}\r\n      modalClassName='modal-slide-in sidebar-todo-modal'\r\n    >\r\n      <Form id='form-modal-todo' className='todo-modal' onSubmit={handleSubmit(onSubmit)}>\r\n        <ModalHeader\r\n          store={store}\r\n          deleted={deleted}\r\n          dispatch={dispatch}\r\n          important={important}\r\n          deleteTask={deleteTask}\r\n          setDeleted={setDeleted}\r\n          setImportant={setImportant}\r\n          handleTaskSidebar={handleTaskSidebar}\r\n        >\r\n          {handleSidebarTitle()}\r\n        </ModalHeader>\r\n        <ModalBody className='flex-grow-1 pb-sm-0 pb-3'>\r\n          <div className='mb-1'>\r\n            <Label className='form-label' for='task-title'>\r\n              Title <span className='text-danger'>*</span>\r\n            </Label>\r\n            <Controller\r\n              name='title'\r\n              control={control}\r\n              render={({ field }) => (\r\n                <Input\r\n                  id='task-title'\r\n                  placeholder='Title'\r\n                  className='new-todo-item-title'\r\n                  invalid={errors.title && true}\r\n                  {...field}\r\n                />\r\n              )}\r\n            />\r\n            {errors.title && <FormFeedback>Please enter a valid task title</FormFeedback>}\r\n          </div>\r\n          <div className='mb-1'>\r\n            <Label className='form-label' for='task-assignee'>\r\n              Assignee\r\n            </Label>\r\n            <Select\r\n              id='task-assignee'\r\n              className='react-select'\r\n              classNamePrefix='select'\r\n              isClearable={false}\r\n              options={assigneeOptions}\r\n              theme={selectThemeColors}\r\n              value={assignee}\r\n              onChange={data => setAssignee(data)}\r\n              components={{ Option: AssigneeComponent }}\r\n            />\r\n          </div>\r\n          <div className='mb-1'>\r\n            <Label className='form-label' for='due-date'>\r\n              Due Date\r\n            </Label>\r\n            <Flatpickr\r\n              id='due-date'\r\n              name='due-date'\r\n              className='form-control'\r\n              onChange={date => setDueDate(date[0])}\r\n              value={dueDate}\r\n              options={{ dateFormat: 'Y-m-d' }}\r\n            />\r\n          </div>\r\n          <div className='mb-1'>\r\n            <Label className='form-label' for='task-tags'>\r\n              Tags\r\n            </Label>\r\n            <Select\r\n              isMulti\r\n              id='task-tags'\r\n              className='react-select'\r\n              classNamePrefix='select'\r\n              isClearable={false}\r\n              options={tagOptions}\r\n              theme={selectThemeColors}\r\n              value={tags}\r\n              onChange={data => {\r\n                setTags(data !== null ? [...data] : [])\r\n              }}\r\n            />\r\n          </div>\r\n          <div className='mb-1'>\r\n            <Label for='task-desc' className='form-label'>\r\n              Description\r\n            </Label>\r\n            <Editor\r\n              editorState={desc}\r\n              wrapperClassName='toolbar-bottom'\r\n              toolbar={{\r\n                options: ['inline', 'textAlign'],\r\n                inline: {\r\n                  inDropdown: false,\r\n                  options: ['bold', 'italic', 'underline']\r\n                }\r\n              }}\r\n              onEditorStateChange={data => setDesc(data)}\r\n            />\r\n          </div>\r\n          <div>{renderFooterButtons()}</div>\r\n        </ModalBody>\r\n      </Form>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default TaskSidebar\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\apps\\todo\\Sidebar.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\todo\\Tasks.js",[],"D:\\Utecho\\Scaff-cert\\src\\Admin\\user\\UserDataTable.js",["3919","3920","3921","3922"],"// ** React Imports\r\nimport React, { Fragment, useState, useMemo } from 'react'\r\n// ** Table Columns\r\nimport axios from 'axios'\r\n\r\n// ** Third Party Components\r\nimport ReactPaginate from 'react-paginate'\r\nimport { ChevronDown } from 'react-feather'\r\nimport { useTranslation } from 'react-i18next'\r\nimport DataTable from 'react-data-table-component'\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { Card, CardHeader, CardTitle, Input, Label, Row, Col } from 'reactstrap'\r\n// import { UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\r\n// import { MoreVertical, FileText, Trash, Edit2 } from 'react-feather'\r\n\r\nconst UserDataTable = ({ data, columns }) => {\r\n    // ** State    \r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const [searchValue, setSearchValue] = useState('')\r\n    const [filteredData, setFilteredData] = useState([])\r\n    const history = useHistory()\r\n\r\n    // ** Hooks\r\n    const { t } = useTranslation()\r\n\r\n    // ** Function to handle pagination\r\n    const handlePagination = page => {\r\n        setCurrentPage(page.selected)\r\n    }\r\n\r\n    // ** Function to handle filter\r\n    const handleFilter = e => {\r\n        const value = e.target.value\r\n        let updatedData = []\r\n        setSearchValue(value)\r\n        if (value.length) {\r\n            updatedData = data.filter(item => {\r\n                const startsWith =\r\n                    item.name.toLowerCase().startsWith(value.toLowerCase()) ||\r\n                    item.firstname.toLowerCase().startsWith(value.toLowerCase()) ||\r\n                    item.email.toLowerCase().startsWith(value.toLowerCase()) ||\r\n                    item.phoneNumber.toLowerCase().startsWith(value.toLowerCase())\r\n                const includes =\r\n                    item.name.toLowerCase().includes(value.toLowerCase()) ||\r\n                    item.firstname.toLowerCase().includes(value.toLowerCase()) ||\r\n                    item.email.toLowerCase().includes(value.toLowerCase()) ||\r\n                    item.phoneNumber.toLowerCase().includes(value.toLowerCase())\r\n                if (startsWith) {\r\n                    return startsWith\r\n                } else if (!startsWith && includes) {\r\n                    return includes\r\n                } else return null\r\n            })\r\n            setFilteredData(updatedData)\r\n            setSearchValue(value)\r\n        }\r\n    }\r\n\r\n    // ** Pagination Previous Component\r\n    const Previous = () => {\r\n        return (\r\n            <Fragment>\r\n                <span className='align-middle d-none d-md-inline-block'>{t('Prev')}</span>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    // ** Pagination Next Component\r\n    const Next = () => {\r\n        return (\r\n            <Fragment>\r\n                <span className='align-middle d-none d-md-inline-block'>{t('Next')}</span>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    // ** Custom Pagination Component\r\n    const CustomPagination = () => (\r\n        <ReactPaginate\r\n            previousLabel={<Previous size={15} />}\r\n            nextLabel={<Next size={15} />}\r\n            forcePage={currentPage}\r\n            onPageChange={page => handlePagination(page)}\r\n            pageCount={searchValue.length ? Math.ceil(filteredData.length / 7) : Math.ceil(data.length / 7) || 1}\r\n            breakLabel={'...'}\r\n            pageRangeDisplayed={2}\r\n            marginPagesDisplayed={2}\r\n            activeClassName={'active rounded-circle'}\r\n            pageClassName={'page-item'}\r\n            nextLinkClassName={'page-link'}\r\n            nextClassName={'page-item next ms-auto pe-1'}\r\n            previousClassName={'page-item prev me-auto ps-2'}\r\n            previousLinkClassName={'page-link '}\r\n            pageLinkClassName={'page-link rounded-circle'}\r\n            breakClassName='page-item rounded-circle'\r\n            breakLinkClassName='page-link rounded-circle'\r\n            containerClassName={'pagination react-paginate pagination-sm d-flex paginat justify-content-center pe-1 mt-1'}\r\n        />\r\n    )\r\n    return (\r\n        <Card>\r\n            <CardHeader className='border-bottom'>\r\n                <CardTitle tag='h4'>Users</CardTitle>\r\n            </CardHeader>\r\n            <Row className='justify-content-end mx-0'>\r\n                <Col className='d-flex align-items-center justify-content-end mt-1' md='6' sm='12'>\r\n                    <Label className='me-1' for='search-input-1'>\r\n                        {t('Search')}\r\n                    </Label>\r\n                    <Input\r\n                        className='dataTable-filter mb-50 w-100'\r\n                        type='text'\r\n                        bsSize='sm'\r\n                        id='search-input-1'\r\n                        value={searchValue}\r\n                        onChange={handleFilter}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <div className='react-dataTable mb-2'>\r\n                <DataTable\r\n                    onRowClicked={() => history.push('./')}\r\n                    noHeader\r\n                    responsive\r\n                    pagination\r\n                    selectableRowsNoSelectAll\r\n                    columns={React.useMemo(() => columns)}\r\n                    className='react-dataTable'\r\n                    paginationPerPage={7}\r\n                    sortIcon={<ChevronDown size={10} />}\r\n                    paginationDefaultPage={currentPage + 1}\r\n                    paginationComponent={CustomPagination}\r\n                    data={searchValue.length ? filteredData : data}\r\n                />\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default UserDataTable\r\n","D:\\Utecho\\Scaff-cert\\src\\Admin\\orders\\orderModal.js",[],"D:\\Utecho\\Scaff-cert\\src\\Admin\\orders\\orderDataTable.js",[],"D:\\Utecho\\Scaff-cert\\src\\api\\apirequest.js",[],"D:\\Utecho\\Scaff-cert\\src\\Admin\\services\\ServiceTable.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\profile\\ProfileSuggestedPages.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\profile\\ProfileLatestPhotos.js",["3923"],"// ** Reactstrap Imports\r\nimport { Card, CardBody, Row, Col } from 'reactstrap'\r\n\r\nconst ProfileLatestPhotos = ({ data }) => {\r\n  const renderPhotos = () => {\r\n    return data.map((item, index) => {\r\n      return (\r\n        <Col key={index} md='4' xs='6' className='profile-latest-img'>\r\n          <a href='/' onClick={e => e.preventDefault()}>\r\n            <img className='img-fluid rounded' src={item.img} alt='latest-photo' />\r\n          </a>\r\n        </Col>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <h5 className='mb-0'>Latest Photos</h5>\r\n        <Row>{renderPhotos()}</Row>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ProfileLatestPhotos\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\profile\\ProfileFriendsSuggestions.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\profile\\ProfileHeader.js",["3924"],"// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Icons Imports\r\nimport { AlignJustify, Rss, Info, Image, Users, Edit } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardImg, Collapse, Navbar, Nav, NavItem, NavLink, Button } from 'reactstrap'\r\n\r\nconst ProfileHeader = ({ data }) => {\r\n  // ** States\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  const toggle = () => setIsOpen(!isOpen)\r\n\r\n  return (\r\n    <Card className='profile-header mb-2'>\r\n      <CardImg src={data.coverImg} alt='User Profile Image' top />\r\n      <div className='position-relative'>\r\n        <div className='profile-img-container d-flex align-items-center'>\r\n          <div className='profile-img'>\r\n            <img className='rounded img-fluid' src={data.avatar} alt='Card image' />\r\n          </div>\r\n          <div className='profile-title ms-3'>\r\n            <h2 className='text-white'>{data.username}</h2>\r\n            <p className='text-white'>{data.designation}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='profile-header-nav'>\r\n        <Navbar container={false} className='justify-content-end justify-content-md-between w-100' expand='md' light>\r\n          <Button color='' className='btn-icon navbar-toggler' onClick={toggle}>\r\n            <AlignJustify size={21} />\r\n          </Button>\r\n          <Collapse isOpen={isOpen} navbar>\r\n            <div className='profile-tabs d-flex justify-content-between flex-wrap mt-1 mt-md-0'>\r\n              <Nav className='mb-0' pills>\r\n                <NavItem>\r\n                  <NavLink className='fw-bold' active>\r\n                    <span className='d-none d-md-block'>Feed</span>\r\n                    <Rss className='d-block d-md-none' size={14} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className='fw-bold'>\r\n                    <span className='d-none d-md-block'>About</span>\r\n                    <Info className='d-block d-md-none' size={14} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className='fw-bold'>\r\n                    <span className='d-none d-md-block'>Photos</span>\r\n                    <Image className='d-block d-md-none' size={14} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className='fw-bold'>\r\n                    <span className='d-none d-md-block'>Friends</span>\r\n                    <Users className='d-block d-md-none' size={14} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n              <Button color='primary'>\r\n                <Edit className='d-block d-md-none' size={14} />\r\n                <span className='fw-bold d-none d-md-block'>Edit</span>\r\n              </Button>\r\n            </div>\r\n          </Collapse>\r\n        </Navbar>\r\n      </div>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ProfileHeader\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\profile\\ProfileTwitterFeeds.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\profile\\ProfileAbout.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\profile\\ProfilePolls.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\profile\\ProfilePosts.js",["3925"],"// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { Heart, MessageSquare, Share2 } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody, CardText, Row, Col, UncontrolledTooltip, Input, Label, Button } from 'reactstrap'\r\n\r\nconst ProfilePosts = ({ data }) => {\r\n  const renderPosts = () => {\r\n    return data.map(post => {\r\n      return (\r\n        <Card className='post' key={post.username}>\r\n          <CardBody>\r\n            <div className='d-flex justify-content-start align-items-center mb-1'>\r\n              <Avatar className='me-1' img={post.avatar} imgHeight='50' imgWidth='50' />\r\n              <div className='profile-user-info'>\r\n                <h6 className='mb-0'>{post.username}</h6>\r\n                <small className='text-muted'>{post.postTime}</small>\r\n              </div>\r\n            </div>\r\n            <CardText>{post.postText}</CardText>\r\n            {post.postImg ? (\r\n              <img src={post.postImg} alt={post.username} className='img-fluid rounded mb-75' />\r\n            ) : post.postVid ? (\r\n              <iframe\r\n                src='https://www.youtube.com/embed/6stlCkUDG_s'\r\n                className='w-100 rounded height-250 mb-50 border-0'\r\n              ></iframe>\r\n            ) : null}\r\n            <Row className='d-flex justify-content-start align-items-center flex-wrap pb-50 post-actions'>\r\n              <Col className='d-flex justify-content-between justify-content-sm-start mb-2' sm='6'>\r\n                <div className='d-flex align-items-center text-muted text-nowrap cursor-pointer'>\r\n                  <Heart\r\n                    size={18}\r\n                    className={classnames('me-50', {\r\n                      'profile-likes': post.youLiked === true\r\n                    })}\r\n                  />\r\n                  <span>{post.likes}</span>\r\n                </div>\r\n                <div className='d-flex align-items-center'>\r\n                  <div className='avatar-group ms-1'>\r\n                    {post.likedUsers.map(user => {\r\n                      return (\r\n                        <Fragment key={user.username}>\r\n                          <Avatar\r\n                            className='pull-up'\r\n                            img={user.avatar}\r\n                            id={user.username.toLowerCase().split(' ').join('-')}\r\n                            imgHeight='26'\r\n                            imgWidth='26'\r\n                          />\r\n                          <UncontrolledTooltip\r\n                            target={user.username.toLowerCase().split(' ').join('-')}\r\n                            placement='top'\r\n                          >\r\n                            {user.username}\r\n                          </UncontrolledTooltip>\r\n                        </Fragment>\r\n                      )\r\n                    })}\r\n                  </div>\r\n                  <a href='/' className='text-muted text-nowrap ms-50' onClick={e => e.preventDefault()}>\r\n                    +{post.likedCount} more\r\n                  </a>\r\n                </div>\r\n              </Col>\r\n              <Col className='d-flex justify-content-between justify-content-sm-end align-items-center mb-2' sm='6'>\r\n                <a href='/' className='text-nowrap' onClick={e => e.preventDefault()}>\r\n                  <MessageSquare size={18} className='text-body me-50'></MessageSquare>\r\n                  <span className='text-muted me-1'>{post.comments}</span>\r\n                </a>\r\n                <a href='/' className='text-nowrap share-post' onClick={e => e.preventDefault()}>\r\n                  <Share2 size={18} className='text-body mx-50'></Share2>\r\n                  <span className='text-muted me-1'>{post.share}</span>\r\n                </a>\r\n              </Col>\r\n            </Row>\r\n            {post.detailedComments.map(comment => (\r\n              <div key={comment.username} className='d-flex align-items-start mb-1'>\r\n                <Avatar img={comment.avatar} className='mt-25 me-75' imgHeight='34' imgWidth='34' />\r\n                <div className='profile-user-info w-100'>\r\n                  <div className='d-flex align-items-center justify-content-between'>\r\n                    <h6 className='mb-0'>{comment.username}</h6>\r\n                    <a href='/' onClick={e => e.preventDefault()}>\r\n                      <Heart\r\n                        size={18}\r\n                        className={classnames('text-body', {\r\n                          'profile-likes': comment.youLiked === true\r\n                        })}\r\n                      />\r\n                      <span className='align-middle ms-25 text-muted'>{comment.commentsLikes}</span>\r\n                    </a>\r\n                  </div>\r\n                  <small>{comment.comment}</small>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            <fieldset className='form-label-group mb-50'>\r\n              <Label className='form-check-label' for={`add-comment-${post.username}`}>\r\n                Add Comment\r\n              </Label>\r\n              <Input id={`add-comment-${post.username}`} type='textarea' rows='3' placeholder='Add Comment' />\r\n            </fieldset>\r\n            <Button color='primary' size='sm'>\r\n              Post Comment\r\n            </Button>\r\n          </CardBody>\r\n        </Card>\r\n      )\r\n    })\r\n  }\r\n  return renderPosts()\r\n}\r\nexport default ProfilePosts\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\faq\\FaqContact.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\blog\\BlogSidebar.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\datepicker\\PickerDisabledRange.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\datepicker\\PickerMultipleDates.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\datepicker\\PickerHumanFriendly.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\datepicker\\PickerDateTime.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\datepicker\\PickerInline.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\datepicker\\PickerTime.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\datepicker\\PickerDefault.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\datepicker\\PickerRange.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input-mask\\CustomDelimitersMask.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input-mask\\NumeralFormattingMask.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input-mask\\DelimitersMask.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input-mask\\PrefixMask.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input-mask\\CreditCardMask.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input-mask\\BlocksMask.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input-mask\\TimeMask.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input-mask\\DateMask.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input-mask\\PhoneMask.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input\\InputHorizontalSize.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input\\InputFloating.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input\\InputStates.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input\\InputBasic.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input-groups\\InputGroupSourceCode.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input\\InputSizes.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input\\InputFile.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input-groups\\InputGroupDropdown.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input-groups\\InputGroupCbAndRadio.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input-groups\\InputGroupButtons.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input-groups\\InputGroupBasic.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input-groups\\InputGroupMerged.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\input-groups\\InputGroupSizes.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\radio\\RadioBasic.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\radio\\RadioColors.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\textarea\\TextareaFloatingLabel.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\textarea\\TextareaCounter.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\checkboxes\\CheckboxColors.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\checkboxes\\CheckboxBasic.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\switch\\SwitchBasic.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\switch\\SwitchColors.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\textarea\\TextareaDefault.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\number-input\\NumberInputControlled.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\switch\\SwitchIcons.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\number-input\\NumberInputFormat.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\number-input\\NumberInputDecimal.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\number-input\\NumberInputBasic.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\number-input\\NumberInputColors.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\number-input\\NumberInputMinMax.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\number-input\\NumberInputSize.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\editor\\EditorUncontrolled.js",[],"D:\\Utecho\\Scaff-cert\\src\\@core\\components\\ui-loader\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\email\\ComposePopup.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\email\\MailDetails.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\apps\\email\\MailCard.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\editor\\EditorControlled.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\select\\SelectReactstrap.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\select\\SelectOptions.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\select\\SelectSizing.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\file-uploader\\FileUploaderRestrictions.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\select\\SelectReact.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\file-uploader\\FileUploaderMultiple.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\faq\\FaqFilter.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-elements\\file-uploader\\FileUploaderSingle.js",["3926","3927"],"// ** React Imports\r\nimport { useState, Fragment } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardBody,\r\n  Button,\r\n  ListGroup,\r\n  ListGroupItem\r\n} from 'reactstrap'\r\n\r\n// ** Third Party Imports\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { FileText, X, DownloadCloud } from 'react-feather'\r\n\r\nconst FileUploaderSingle = () => {\r\n  // ** State\r\n  const [files, setFiles] = useState([])\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    multiple: false,\r\n    onDrop: (acceptedFiles) => {\r\n      setFiles([...files, ...acceptedFiles.map((file) => Object.assign(file))])\r\n    }\r\n  })\r\n\r\n  const renderFilePreview = (file) => {\r\n    if (file.type.startsWith('image')) {\r\n      return (\r\n        <img\r\n          className='rounded'\r\n          alt={file.name}\r\n          src={URL.createObjectURL(file)}\r\n          height='28'\r\n          width='28'\r\n        />\r\n      )\r\n    } else {\r\n      return <FileText size='28' />\r\n    }\r\n  }\r\n\r\n  const handleRemoveFile = (file) => {\r\n    const uploadedFiles = files\r\n    const filtered = uploadedFiles.filter((i) => i.name !== file.name)\r\n    setFiles([...filtered])\r\n  }\r\n\r\n  const renderFileSize = (size) => {\r\n    if (Math.round(size / 100) / 10 > 1000) {\r\n      return `${(Math.round(size / 100) / 10000).toFixed(1)} mb`\r\n    } else {\r\n      return `${(Math.round(size / 100) / 10).toFixed(1)} kb`\r\n    }\r\n  }\r\n\r\n  const fileList = files.map((file, index) => (\r\n    <ListGroupItem\r\n      key={`${file.name}-${index}`}\r\n      className='d-flex align-items-center justify-content-between'\r\n    >\r\n      <div className='file-details d-flex align-items-center'>\r\n        <div className='file-preview me-1'>{renderFilePreview(file)}</div>\r\n        <div>\r\n          <p className='file-name mb-0'>{file.name}</p>\r\n          <p className='file-size mb-0'>{renderFileSize(file.size)}</p>\r\n        </div>\r\n      </div>\r\n      <Button\r\n        color='danger'\r\n        outline\r\n        size='sm'\r\n        className='btn-icon'\r\n        onClick={() => handleRemoveFile(file)}\r\n      >\r\n        <X size={14} />\r\n      </Button>\r\n    </ListGroupItem>\r\n  ))\r\n\r\n  const handleRemoveAllFiles = () => {\r\n    setFiles([])\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      {/* <CardHeader>\r\n        <CardTitle tag='h4'>Single</CardTitle>\r\n      </CardHeader> */}\r\n      <CardBody>\r\n        <div {...getRootProps({ className: 'dropzone' })}>\r\n          <input {...getInputProps()} />\r\n          <div className='d-flex align-items-center justify-content-center flex-column'>\r\n            <DownloadCloud size={64} />\r\n            <h5>Drop Files here or click to upload</h5>\r\n            <p className='text-secondary'>\r\n              Drop files here or click{' '}\r\n              <a href='/' onClick={(e) => e.preventDefault()}>\r\n                browse\r\n              </a>{' '}\r\n              thorough your machine\r\n            </p>\r\n          </div>\r\n        </div>\r\n        {files.length ? (\r\n          <Fragment>\r\n            <ListGroup className='my-2'>{fileList}</ListGroup>\r\n            <div className='d-flex justify-content-end'>\r\n              <Button\r\n                className='me-1'\r\n                color='danger'\r\n                outline\r\n                onClick={handleRemoveAllFiles}\r\n              >\r\n                Remove All\r\n              </Button>\r\n              <Button color='primary'>Upload Files</Button>\r\n            </div>\r\n          </Fragment>\r\n        ) : null}\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default FileUploaderSingle\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\faq\\Faqs.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\account-settings\\NotificationsTabContent.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\account-settings\\ConnectionsTabContent.js",["3928"],"// ** Reactstrap Imports\r\nimport { Row, Col, Card, CardHeader, CardBody, CardTitle, Input, Label, Button } from 'reactstrap'\r\n\r\n// ** Icons Imports\r\nimport { Check, X, Link } from 'react-feather'\r\n\r\nconst connectedAccounts = [\r\n  {\r\n    checked: true,\r\n    title: 'Google',\r\n    subtitle: 'Calendar and contacts',\r\n    logo: require('@src/assets/images/icons/social/google.png').default\r\n  },\r\n  {\r\n    checked: false,\r\n    title: 'Slack',\r\n    subtitle: 'Communication',\r\n    logo: require('@src/assets/images/icons/social/slack.png').default\r\n  },\r\n  {\r\n    checked: true,\r\n    title: 'Github',\r\n    subtitle: 'Git repositories',\r\n    logo: require('@src/assets/images/icons/social/github.png').default\r\n  },\r\n  {\r\n    checked: false,\r\n    title: 'Mailchimp',\r\n    subtitle: 'Email marketing service',\r\n    logo: require('@src/assets/images/icons/social/mailchimp.png').default\r\n  },\r\n  {\r\n    checked: false,\r\n    title: 'Asana',\r\n    subtitle: 'Communication',\r\n    logo: require('@src/assets/images/icons/social/asana.png').default\r\n  }\r\n]\r\n\r\nconst socialAccounts = [\r\n  {\r\n    linked: false,\r\n    title: 'Facebook',\r\n    logo: require('@src/assets/images/icons/social/facebook.png').default\r\n  },\r\n  {\r\n    linked: true,\r\n    title: 'Twitter',\r\n    url: 'https://twitter.com/pixinvent',\r\n    logo: require('@src/assets/images/icons/social/twitter.png').default\r\n  },\r\n  {\r\n    linked: true,\r\n    title: 'Linkedin',\r\n    url: 'https://www.linkedin.com/company/pixinvent/',\r\n    logo: require('@src/assets/images/icons/social/linkedin.png').default\r\n  },\r\n  {\r\n    linked: false,\r\n    title: 'Dribbble',\r\n    logo: require('@src/assets/images/icons/social/dribbble.png').default\r\n  },\r\n  {\r\n    linked: false,\r\n    title: 'Behance',\r\n    logo: require('@src/assets/images/icons/social/behance.png').default\r\n  }\r\n]\r\n\r\nconst ConnectionsTabContent = () => {\r\n  return (\r\n    <Row>\r\n      <Col md='6'>\r\n        <Card>\r\n          <CardHeader className='border-bottom'>\r\n            <CardTitle tag='h4'>Connected accounts</CardTitle>\r\n          </CardHeader>\r\n          <CardBody className='pt-2'>\r\n            <p>Display content from your connected accounts on your site</p>\r\n            {connectedAccounts.map((item, index) => {\r\n              return (\r\n                <div className='d-flex mt-2' key={index}>\r\n                  <div className='flex-shrink-0'>\r\n                    <img className='me-1' src={item.logo} alt={item.title} height='38' width='38' />\r\n                  </div>\r\n                  <div className='d-flex align-item-center justify-content-between flex-grow-1'>\r\n                    <div className='me-1'>\r\n                      <p className='fw-bolder mb-0'>{item.title}</p>\r\n                      <span>{item.subtitle}</span>\r\n                    </div>\r\n                    <div className='mt-50 mt-sm-0'>\r\n                      <div className='form-switch'>\r\n                        <Input type='switch' defaultChecked={item.checked} id={`account-${item.title}`} />\r\n                        <Label className='form-check-label' for={`account-${item.title}`}>\r\n                          <span className='switch-icon-left'>\r\n                            <Check size={14} />\r\n                          </span>\r\n                          <span className='switch-icon-right'>\r\n                            <X size={14} />\r\n                          </span>\r\n                        </Label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )\r\n            })}\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n      <Col md='6'>\r\n        <Card>\r\n          <CardHeader className='border-bottom'>\r\n            <CardTitle tag='h4'>Social accounts</CardTitle>\r\n          </CardHeader>\r\n          <CardBody className='pt-2'>\r\n            <p>Display content from social accounts on your site</p>\r\n            {socialAccounts.map((item, index) => {\r\n              return (\r\n                <div className='d-flex mt-2' key={index}>\r\n                  <div className='flex-shrink-0'>\r\n                    <img className='me-1' src={item.logo} alt={item.title} height='38' width='38' />\r\n                  </div>\r\n                  <div className='d-flex align-item-center justify-content-between flex-grow-1'>\r\n                    <div className='me-1'>\r\n                      <p className='fw-bolder mb-0'>{item.title}</p>\r\n                      {item.linked ? (\r\n                        <a href={item.url} target='_blank'>\r\n                          @pixinvent\r\n                        </a>\r\n                      ) : (\r\n                        <span>Not Connected</span>\r\n                      )}\r\n                    </div>\r\n                    <div className='mt-50 mt-sm-0'>\r\n                      <Button outline className='btn-icon'>\r\n                        {item.linked ? <X className='font-medium-3' /> : <Link className='font-medium-3' />}\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )\r\n            })}\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ConnectionsTabContent\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\account-settings\\SecurityTabContent.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\account-settings\\AccountTabContent.js",["3929"],"// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Select from 'react-select'\r\nimport Cleave from 'cleave.js/react'\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport 'cleave.js/dist/addons/cleave-phone.us'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Card,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CardBody,\r\n  CardTitle,\r\n  CardHeader,\r\n  FormFeedback\r\n} from 'reactstrap'\r\n\r\n// ** Utils\r\nimport { selectThemeColors } from '@utils'\r\n\r\n// ** Demo Components\r\nimport DeleteAccount from './DeleteAccount'\r\n\r\nconst countryOptions = [\r\n  { value: 'uk', label: 'UK' },\r\n  { value: 'usa', label: 'USA' },\r\n  { value: 'france', label: 'France' },\r\n  { value: 'russia', label: 'Russia' },\r\n  { value: 'canada', label: 'Canada' }\r\n]\r\n\r\nconst languageOptions = [\r\n  { value: 'english', label: 'English' },\r\n  { value: 'spanish', label: 'Spanish' },\r\n  { value: 'french', label: 'French' },\r\n  { value: 'german', label: 'German' },\r\n  { value: 'dutch', label: 'Dutch' }\r\n]\r\n\r\nconst currencyOptions = [\r\n  { value: 'usd', label: 'USD' },\r\n  { value: 'euro', label: 'Euro' },\r\n  { value: 'pound', label: 'Pound' },\r\n  { value: 'bitcoin', label: 'Bitcoin' }\r\n]\r\n\r\nconst timeZoneOptions = [\r\n  {\r\n    value: '(GMT-12:00) International Date Line West',\r\n    label: '(GMT-12:00) International Date Line West'\r\n  },\r\n  {\r\n    value: '(GMT-11:00) Midway Island, Samoa',\r\n    label: '(GMT-11:00) Midway Island, Samoa'\r\n  },\r\n  { value: '(GMT-10:00) Hawaii', label: '(GMT-10:00) Hawaii' },\r\n  { value: '(GMT-09:00) Alaska', label: '(GMT-09:00) Alaska' },\r\n  {\r\n    value: '(GMT-08:00) Pacific Time (US & Canada)',\r\n    label: '(GMT-08:00) Pacific Time (US & Canada)'\r\n  },\r\n  {\r\n    value: '(GMT-08:00) Tijuana, Baja California',\r\n    label: '(GMT-08:00) Tijuana, Baja California'\r\n  },\r\n  { value: '(GMT-07:00) Arizona', label: '(GMT-07:00) Arizona' },\r\n  {\r\n    value: '(GMT-07:00) Chihuahua, La Paz, Mazatlan',\r\n    label: '(GMT-07:00) Chihuahua, La Paz, Mazatlan'\r\n  },\r\n  {\r\n    value: '(GMT-07:00) Mountain Time (US & Canada)',\r\n    label: '(GMT-07:00) Mountain Time (US & Canada)'\r\n  },\r\n  {\r\n    value: '(GMT-06:00) Central America',\r\n    label: '(GMT-06:00) Central America'\r\n  },\r\n  {\r\n    value: '(GMT-06:00) Central Time (US & Canada)',\r\n    label: '(GMT-06:00) Central Time (US & Canada)'\r\n  },\r\n  {\r\n    value: '(GMT-06:00) Guadalajara, Mexico City, Monterrey',\r\n    label: '(GMT-06:00) Guadalajara, Mexico City, Monterrey'\r\n  },\r\n  { value: '(GMT-06:00) Saskatchewan', label: '(GMT-06:00) Saskatchewan' },\r\n  {\r\n    value: '(GMT-05:00) Bogota, Lima, Quito, Rio Branco',\r\n    label: '(GMT-05:00) Bogota, Lima, Quito, Rio Branco'\r\n  },\r\n  {\r\n    value: '(GMT-05:00) Eastern Time (US & Canada)',\r\n    label: '(GMT-05:00) Eastern Time (US & Canada)'\r\n  },\r\n  { value: '(GMT-05:00) Indiana (East)', label: '(GMT-05:00) Indiana (East)' },\r\n  {\r\n    value: '(GMT-04:00) Atlantic Time (Canada)',\r\n    label: '(GMT-04:00) Atlantic Time (Canada)'\r\n  },\r\n  {\r\n    value: '(GMT-04:00) Caracas, La Paz',\r\n    label: '(GMT-04:00) Caracas, La Paz'\r\n  },\r\n  { value: '(GMT-04:00) Manaus', label: '(GMT-04:00) Manaus' },\r\n  { value: '(GMT-04:00) Santiago', label: '(GMT-04:00) Santiago' },\r\n  { value: '(GMT-03:30) Newfoundland', label: '(GMT-03:30) Newfoundland' }\r\n]\r\n\r\nconst AccountTabs = ({ data }) => {\r\n  // ** Hooks\r\n  const defaultValues = {\r\n    lastName: '',\r\n    firstName: data.fullName.split(' ')[0]\r\n  }\r\n  const {\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({ defaultValues })\r\n\r\n  // ** States\r\n  const [avatar, setAvatar] = useState(data.avatar ? data.avatar : '')\r\n\r\n  const onChange = (e) => {\r\n    const reader = new FileReader(),\r\n      files = e.target.files\r\n    reader.onload = function () {\r\n      setAvatar(reader.result)\r\n    }\r\n    reader.readAsDataURL(files[0])\r\n  }\r\n\r\n  const onSubmit = (data) => {\r\n    if (Object.values(data).every((field) => field.length > 0)) {\r\n      return null\r\n    } else {\r\n      for (const key in data) {\r\n        if (data[key].length === 0) {\r\n          setError(key, {\r\n            type: 'manual'\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleImgReset = () => {\r\n    setAvatar(require('@src/assets/images/avatars/avatar-blank.png').default)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <CardHeader className='border-bottom'>\r\n          <CardTitle tag='h4'>Profile Details</CardTitle>\r\n        </CardHeader>\r\n        <CardBody className='py-2 my-25'>\r\n          <div className='d-flex'>\r\n            <div className='me-25'>\r\n              <img\r\n                className='rounded me-50'\r\n                src={avatar}\r\n                alt='Generic placeholder image'\r\n                height='100'\r\n                width='100'\r\n              />\r\n            </div>\r\n            <div className='d-flex align-items-end mt-75 ms-1'>\r\n              <div>\r\n                <Button\r\n                  tag={Label}\r\n                  className='mb-75 me-75'\r\n                  size='sm'\r\n                  color='primary'\r\n                >\r\n                  Upload\r\n                  <Input\r\n                    type='file'\r\n                    onChange={onChange}\r\n                    hidden\r\n                    accept='image/*'\r\n                  />\r\n                </Button>\r\n                <Button\r\n                  className='mb-75'\r\n                  color='secondary'\r\n                  size='sm'\r\n                  outline\r\n                  onClick={handleImgReset}\r\n                >\r\n                  Reset\r\n                </Button>\r\n                <p className='mb-0'>\r\n                  Allowed JPG, GIF or PNG. Max size of 800kB\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Form className='mt-2 pt-50' onSubmit={handleSubmit(onSubmit)}>\r\n            <Row>\r\n              <Col sm='6' className='mb-1'>\r\n                <Label className='form-label' for='firstName'>\r\n                  First Name\r\n                </Label>\r\n                <Controller\r\n                  name='firstName'\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <Input\r\n                      id='firstName'\r\n                      placeholder='John'\r\n                      invalid={errors.firstName && true}\r\n                      {...field}\r\n                    />\r\n                  )}\r\n                />\r\n                {errors && errors.firstName && (\r\n                  <FormFeedback>Please enter a valid First Name</FormFeedback>\r\n                )}\r\n              </Col>\r\n              <Col sm='6' className='mb-1'>\r\n                <Label className='form-label' for='lastName'>\r\n                  Last Name\r\n                </Label>\r\n                <Controller\r\n                  name='lastName'\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <Input\r\n                      id='lastName'\r\n                      placeholder='Doe'\r\n                      invalid={errors.lastName && true}\r\n                      {...field}\r\n                    />\r\n                  )}\r\n                />\r\n                {errors.lastName && (\r\n                  <FormFeedback>Please enter a valid Last Name</FormFeedback>\r\n                )}\r\n              </Col>\r\n              <Col sm='6' className='mb-1'>\r\n                <Label className='form-label' for='emailInput'>\r\n                  E-mail\r\n                </Label>\r\n                <Input\r\n                  id='emailInput'\r\n                  type='email'\r\n                  name='email'\r\n                  placeholder='Email'\r\n                  defaultValue={data.email}\r\n                />\r\n              </Col>\r\n              <Col sm='6' className='mb-1'>\r\n                <Label className='form-label' for='company'>\r\n                  Company\r\n                </Label>\r\n                <Input\r\n                  defaultValue={data.company}\r\n                  id='company'\r\n                  name='company'\r\n                  placeholder='Company Name'\r\n                />\r\n              </Col>\r\n              <Col sm='6' className='mb-1'>\r\n                <Label className='form-label' for='phNumber'>\r\n                  Phone Number\r\n                </Label>\r\n                <Cleave\r\n                  id='phNumber'\r\n                  name='phNumber'\r\n                  className='form-control'\r\n                  placeholder='1 234 567 8900'\r\n                  options={{ phone: true, phoneRegionCode: 'US' }}\r\n                />\r\n              </Col>\r\n              <Col sm='6' className='mb-1'>\r\n                <Label className='form-label' for='address'>\r\n                  Address\r\n                </Label>\r\n                <Input\r\n                  id='address'\r\n                  name='address'\r\n                  placeholder='12, Business Park'\r\n                />\r\n              </Col>\r\n              <Col sm='6' className='mb-1'>\r\n                <Label className='form-label' for='accountState'>\r\n                  State\r\n                </Label>\r\n                <Input\r\n                  id='accountState'\r\n                  name='state'\r\n                  placeholder='California'\r\n                />\r\n              </Col>\r\n              <Col sm='6' className='mb-1'>\r\n                <Label className='form-label' for='zipCode'>\r\n                  Zip Code\r\n                </Label>\r\n                <Input\r\n                  id='zipCode'\r\n                  name='zipCode'\r\n                  placeholder='123456'\r\n                  maxLength='6'\r\n                />\r\n              </Col>\r\n              <Col sm='6' className='mb-1'>\r\n                <Label className='form-label' for='country'>\r\n                  Country\r\n                </Label>\r\n                <Select\r\n                  id='country'\r\n                  isClearable={false}\r\n                  className='react-select'\r\n                  classNamePrefix='select'\r\n                  options={countryOptions}\r\n                  theme={selectThemeColors}\r\n                  defaultValue={countryOptions[0]}\r\n                />\r\n              </Col>\r\n              <Col sm='6' className='mb-1'>\r\n                <Label className='form-label' for='language'>\r\n                  Language\r\n                </Label>\r\n                <Select\r\n                  id='language'\r\n                  isClearable={false}\r\n                  className='react-select'\r\n                  classNamePrefix='select'\r\n                  options={languageOptions}\r\n                  theme={selectThemeColors}\r\n                  defaultValue={languageOptions[0]}\r\n                />\r\n              </Col>\r\n              <Col sm='6' className='mb-1'>\r\n                <Label className='form-label' for='timeZone'>\r\n                  Timezone\r\n                </Label>\r\n                <Select\r\n                  id='timeZone'\r\n                  isClearable={false}\r\n                  className='react-select'\r\n                  classNamePrefix='select'\r\n                  options={timeZoneOptions}\r\n                  theme={selectThemeColors}\r\n                  defaultValue={timeZoneOptions[0]}\r\n                />\r\n              </Col>\r\n              <Col sm='6' className='mb-1'>\r\n                <Label className='form-label' for='currency'>\r\n                  Currency\r\n                </Label>\r\n                <Select\r\n                  id='currency'\r\n                  isClearable={false}\r\n                  className='react-select'\r\n                  classNamePrefix='select'\r\n                  options={currencyOptions}\r\n                  theme={selectThemeColors}\r\n                  defaultValue={currencyOptions[0]}\r\n                />\r\n              </Col>\r\n              <Col className='mt-2' sm='12'>\r\n                <Button type='submit' className='me-1' color='primary'>\r\n                  Save changes\r\n                </Button>\r\n                <Button color='secondary' outline>\r\n                  Discard\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n      <DeleteAccount />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AccountTabs\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\account-settings\\BillingTabContent.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\account-settings\\Tabs.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\modal-examples\\Authentication.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\modal-examples\\AddNewAddress.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\modal-examples\\ShareProject.js",["3930"],"// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Card,\r\n  Button,\r\n  Label,\r\n  Modal,\r\n  CardBody,\r\n  CardText,\r\n  CardTitle,\r\n  ListGroup,\r\n  ModalBody,\r\n  ModalHeader,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  ListGroupItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown\r\n} from 'reactstrap'\r\n\r\n// ** Third Party Components\r\nimport Select, { components } from 'react-select'\r\nimport { FileText, Users, Link } from 'react-feather'\r\n\r\n// ** Utils\r\nimport { selectThemeColors } from '@utils'\r\n\r\n// ** Avatars\r\nimport avatar1 from '@src/assets/images/avatars/1-small.png'\r\nimport avatar2 from '@src/assets/images/avatars/3-small.png'\r\nimport avatar3 from '@src/assets/images/avatars/5-small.png'\r\nimport avatar4 from '@src/assets/images/avatars/7-small.png'\r\nimport avatar5 from '@src/assets/images/avatars/9-small.png'\r\nimport avatar6 from '@src/assets/images/avatars/11-small.png'\r\n\r\n// ** Portraits\r\nimport portrait1 from '@src/assets/images/portrait/small/avatar-s-9.jpg'\r\nimport portrait2 from '@src/assets/images/portrait/small/avatar-s-3.jpg'\r\nimport portrait3 from '@src/assets/images/portrait/small/avatar-s-5.jpg'\r\nimport portrait4 from '@src/assets/images/portrait/small/avatar-s-7.jpg'\r\nimport portrait5 from '@src/assets/images/portrait/small/avatar-s-11.jpg'\r\nimport portrait6 from '@src/assets/images/portrait/small/avatar-s-10.jpg'\r\nimport portrait7 from '@src/assets/images/portrait/small/avatar-s-8.jpg'\r\nimport portrait8 from '@src/assets/images/portrait/small/avatar-s-6.jpg'\r\n\r\nconst options = [\r\n  { value: 'Donna Frank', label: 'Donna Frank', avatar: avatar1 },\r\n  { value: 'Jane Foster', label: 'Jane Foster', avatar: avatar2 },\r\n  { value: 'Gabrielle Robertson', label: 'Gabrielle Robertson', avatar: avatar3 },\r\n  { value: 'Lori Spears', label: 'Lori Spears', avatar: avatar4 },\r\n  { value: 'Sandy Vega', label: 'Sandy Vega', avatar: avatar5 },\r\n  { value: 'Cheryl May', label: 'Cheryl May', avatar: avatar6 }\r\n]\r\n\r\nconst data = [\r\n  {\r\n    img: portrait1,\r\n    type: 'Can Edit',\r\n    name: 'Lester Palmer',\r\n    username: 'pe@vogeiz.net'\r\n  },\r\n  {\r\n    img: portrait2,\r\n    type: 'Owner',\r\n    name: 'Mittie Blair',\r\n    username: 'peromak@zukedohik.gov'\r\n  },\r\n  {\r\n    img: portrait3,\r\n    type: 'Can Comment',\r\n    name: 'Marvin Wheeler',\r\n    username: 'rumet@jujpejah.net'\r\n  },\r\n  {\r\n    img: portrait4,\r\n    type: 'Can View',\r\n    name: 'Nannie Ford',\r\n    username: 'negza@nuv.io'\r\n  },\r\n  {\r\n    img: portrait5,\r\n    type: 'Can Edit',\r\n    name: 'Julian Murphy',\r\n    username: 'lunebame@umdomgu.net'\r\n  },\r\n  {\r\n    img: portrait6,\r\n    type: 'Can View',\r\n    name: 'Sophie Gilbert',\r\n    username: 'ha@sugit.gov'\r\n  },\r\n  {\r\n    img: portrait7,\r\n    type: 'Can Comment',\r\n    name: 'Chris Watkins',\r\n    username: 'zokap@mak.org'\r\n  },\r\n  {\r\n    img: portrait8,\r\n    type: 'Can Edit',\r\n    name: 'Adelaide Nichols',\r\n    username: 'ujinomu@jigo.com'\r\n  }\r\n]\r\n\r\nconst OptionComponent = ({ data, ...props }) => {\r\n  return (\r\n    <components.Option {...props}>\r\n      <div className='d-flex flex-wrap align-items-center'>\r\n        <Avatar className='my-0 me-1' size='sm' img={data.avatar} />\r\n        <div>{data.label}</div>\r\n      </div>\r\n    </components.Option>\r\n  )\r\n}\r\n\r\nconst ShareProjectExample = () => {\r\n  const [show, setShow] = useState(false)\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <CardBody className='text-center'>\r\n          <FileText className='font-large-2 mb-1' />\r\n          <CardTitle tag='h5'>Share Project</CardTitle>\r\n          <CardText>Elegant Share Project options modal popup example, easy to use in any page.</CardText>\r\n          <Button color='primary' onClick={() => setShow(true)}>\r\n            Show\r\n          </Button>\r\n        </CardBody>\r\n      </Card>\r\n      <Modal isOpen={show} toggle={() => setShow(!show)} className='modal-dialog-centered modal-lg'>\r\n        <ModalHeader className='bg-transparent' toggle={() => setShow(!show)}></ModalHeader>\r\n        <ModalBody className='px-sm-5 mx-50 pb-4'>\r\n          <h1 className='text-center mb-1'>Share Project</h1>\r\n          <p className='text-center'>Share project with a team members</p>\r\n          <Label for='addMemberSelect' className='form-label fw-bolder font-size font-small-4 mb-50'>\r\n            Add Members\r\n          </Label>\r\n          <Select\r\n            options={options}\r\n            isClearable={false}\r\n            id='addMemberSelect'\r\n            theme={selectThemeColors}\r\n            className='react-select'\r\n            classNamePrefix='select'\r\n            components={{\r\n              Option: OptionComponent\r\n            }}\r\n          />\r\n          <p className='fw-bolder pt-50 mt-2'>12 Members</p>\r\n          <ListGroup flush className='mb-2'>\r\n            {data.map(item => {\r\n              return (\r\n                <ListGroupItem key={item.name} className='d-flex align-items-start border-0 px-0'>\r\n                  <Avatar className='me-75' img={item.img} imgHeight={38} imgWidth={38} />\r\n                  <div className='d-flex align-items-center justify-content-between w-100'>\r\n                    <div className='me-1'>\r\n                      <h5 className='mb-25'>{item.name}</h5>\r\n                      <span>{item.username}</span>\r\n                    </div>\r\n                    <UncontrolledDropdown>\r\n                      <DropdownToggle color='flat-secondary' caret>\r\n                        <span className='d-lg-inline-block d-none'>{item.type}</span>\r\n                      </DropdownToggle>\r\n                      <DropdownMenu>\r\n                        <DropdownItem className='w-100'>Owner</DropdownItem>\r\n                        <DropdownItem className='w-100'>Can Edit</DropdownItem>\r\n                        <DropdownItem className='w-100'>Can Comment</DropdownItem>\r\n                        <DropdownItem className='w-100'>Can View</DropdownItem>\r\n                      </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n                  </div>\r\n                </ListGroupItem>\r\n              )\r\n            })}\r\n          </ListGroup>\r\n          <div className='d-flex align-content-center justify-content-between flex-wrap'>\r\n            <div className='d-flex align-items-center me-2'>\r\n              <Users className='font-medium-2 me-50' />\r\n              <p className='fw-bolder mb-0'>Public to Vuexy - Pixinvent</p>\r\n            </div>\r\n            <a className='fw-bolder' href='#' onClick={e => e.preventDefault()}>\r\n              <Link className='font-medium-2 me-50' />\r\n              <span>Copy project link</span>\r\n            </a>\r\n          </div>\r\n        </ModalBody>\r\n      </Modal>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ShareProjectExample\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\modal-examples\\PricingModal.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\modal-examples\\CreateApp.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\modal-examples\\ReferEarn.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\pricing\\PricingHeader.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\modal-examples\\EditUser.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\modal-examples\\AddCard.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\pricing\\PricingCards.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\pricing\\PricingTrial.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\pricing\\PricingFaqs.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\wizard\\WizardModernVertical.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\wizard\\WizardHorizontal.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\wizard\\WizardVertical.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\wizard\\WizardModern.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-layouts\\HorizontalFormIcons.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-layouts\\MultipleColumnForm.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-layouts\\VerticalFormIcons.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-layouts\\HorizontalForm.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\form-layouts\\VerticalForm.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\validation\\ValidationThirdPartyComponents.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\validation\\ValidationSchema.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\validation\\AsyncValidation.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\validation\\BasicHookForm.js",[],"D:\\Utecho\\Scaff-cert\\src\\Admin\\employee\\EmployeeTable.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\account-settings\\RecentDevices.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\account-settings\\DeleteAccount.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\account-settings\\BillingHistory.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\account-settings\\BillingCurrentPlan.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\account-settings\\BillingAddress.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\modal-examples\\create-app-steps\\FrameworkStep.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\modal-examples\\create-app-steps\\BillingStep.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\modal-examples\\create-app-steps\\DatabaseStep.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\modal-examples\\create-app-steps\\DetailsStep.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\modal-examples\\create-app-steps\\SubmitStep.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\account-settings\\CreateApikey.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\account-settings\\PaymentMethods.js",["3931"],"// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  Modal,\r\n  Badge,\r\n  Label,\r\n  Input,\r\n  Button,\r\n  CardBody,\r\n  CardTitle,\r\n  ModalBody,\r\n  CardHeader,\r\n  InputGroup,\r\n  ModalHeader,\r\n  FormFeedback,\r\n  InputGroupText\r\n} from 'reactstrap'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport Cleave from 'cleave.js/react'\r\nimport { Check, X } from 'react-feather'\r\nimport { useForm, Controller } from 'react-hook-form'\r\n\r\n// ** Card Images\r\nimport jcbCC from '@src/assets/images/icons/payments/jcb-cc.png'\r\nimport amexCC from '@src/assets/images/icons/payments/amex-cc.png'\r\nimport uatpCC from '@src/assets/images/icons/payments/uatp-cc.png'\r\nimport visaCC from '@src/assets/images/icons/payments/visa-cc.png'\r\nimport dinersCC from '@src/assets/images/icons/payments/diners-cc.png'\r\nimport maestroCC from '@src/assets/images/icons/payments/maestro-cc.png'\r\nimport discoverCC from '@src/assets/images/icons/payments/discover-cc.png'\r\nimport mastercardCC from '@src/assets/images/icons/payments/mastercard-cc.png'\r\n\r\nconst cardsObj = {\r\n  jcb: jcbCC,\r\n  uatp: uatpCC,\r\n  visa: visaCC,\r\n  amex: amexCC,\r\n  diners: dinersCC,\r\n  maestro: maestroCC,\r\n  discover: discoverCC,\r\n  mastercard: mastercardCC\r\n}\r\n\r\nconst data = [\r\n  {\r\n    cardCvc: '587',\r\n    name: 'Tom McBride',\r\n    expiryDate: '12/24',\r\n    imgAlt: 'Mastercard',\r\n    badgeColor: 'primary',\r\n    cardStatus: 'Primary',\r\n    cardNumber: '5577 0000 5577 9865',\r\n    imgSrc: require('@src/assets/images/icons/payments/mastercard.png').default\r\n  },\r\n  {\r\n    cardCvc: '681',\r\n    imgAlt: 'Visa card',\r\n    expiryDate: '02/24',\r\n    name: 'Mildred Wagner',\r\n    cardNumber: '4532 3616 2070 5678',\r\n    imgSrc: require('@src/assets/images/icons/payments/visa.png').default\r\n  }\r\n]\r\n\r\nconst PaymentMethods = () => {\r\n  // ** States\r\n  const [show, setShow] = useState(false)\r\n  const [cardType, setCardType] = useState('')\r\n  const [selected, setSelected] = useState(null)\r\n  const [modalCardType, setModalCardType] = useState('')\r\n  const [paymentMethod, setPaymentMethod] = useState('card')\r\n\r\n  // ** Hooks\r\n  const {\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({ defaultValues: { cardInput: '' } })\r\n\r\n  const onSubmit = data => {\r\n    if (data.cardInput.length <= 0) {\r\n      setError('cardInput', {\r\n        type: 'manual',\r\n        message: 'Please Enter Valid Card Number'\r\n      })\r\n    }\r\n  }\r\n\r\n  const selectedCondition = selected !== null\r\n\r\n  const openEditModal = card => {\r\n    setSelected(card)\r\n    setShow(true)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <CardHeader className='border-bottom'>\r\n          <CardTitle tag='h4'>Payment Methods</CardTitle>\r\n        </CardHeader>\r\n        <CardBody className='my-1 py-25'>\r\n          <Row className='gx-4'>\r\n            <Col lg='6'>\r\n              <Row tag={Form} className='gx-2 gy-1' onSubmit={handleSubmit(onSubmit)}>\r\n                <Col xs={12}>\r\n                  <div className='form-check mb-1'>\r\n                    <Input\r\n                      type='radio'\r\n                      value='card'\r\n                      id='card-radio'\r\n                      name='payment-method-radio'\r\n                      checked={paymentMethod === 'card'}\r\n                      onChange={() => setPaymentMethod('card')}\r\n                    />\r\n                    <Label className='form-check-label' for='card-radio'>\r\n                      Credit/Debit/ATM Card\r\n                    </Label>\r\n                  </div>\r\n                  <div className='form-check mb-1'>\r\n                    <Input\r\n                      type='radio'\r\n                      value='paypal'\r\n                      id='paypal-radio'\r\n                      name='payment-method-radio'\r\n                      checked={paymentMethod === 'paypal'}\r\n                      onChange={() => setPaymentMethod('paypal')}\r\n                    />\r\n                    <Label className='form-check-label' for='paypal-radio'>\r\n                      PayPal account\r\n                    </Label>\r\n                  </div>\r\n                </Col>\r\n                {paymentMethod === 'card' && (\r\n                  <Fragment>\r\n                    <Col xs={12}>\r\n                      <Label className='form-label' for='credit-card'>\r\n                        Card Number\r\n                      </Label>\r\n                      <InputGroup>\r\n                        <Controller\r\n                          id='credit-card'\r\n                          name='cardInput'\r\n                          control={control}\r\n                          placeholder='1356 3215 6548 7898'\r\n                          render={({ field }) => (\r\n                            <Cleave\r\n                              {...field}\r\n                              name='cardInput'\r\n                              className={classnames('form-control', { 'is-invalid': errors.cardInput })}\r\n                              options={{ creditCard: true, onCreditCardTypeChanged: type => setCardType(type) }}\r\n                            />\r\n                          )}\r\n                        />\r\n                        {cardType !== '' && cardType !== 'unknown' ? (\r\n                          <InputGroupText>\r\n                            <img height='24' alt='card-type' src={cardsObj[cardType]} />\r\n                          </InputGroupText>\r\n                        ) : null}\r\n                      </InputGroup>\r\n                      {errors.cardInput ? (\r\n                        <FormFeedback className='d-block'>{errors.cardInput.message}</FormFeedback>\r\n                      ) : null}\r\n                    </Col>\r\n                    <Col md={6}>\r\n                      <Label className='form-label' for='card-name'>\r\n                        Name On Card\r\n                      </Label>\r\n                      <Input id='card-name' placeholder='John Doe' />\r\n                    </Col>\r\n                    <Col xs={6} md={3}>\r\n                      <Label className='form-label' for='exp-date'>\r\n                        Exp. Date\r\n                      </Label>\r\n                      <Cleave\r\n                        id='exp-date'\r\n                        placeholder='MM/YY'\r\n                        className='form-control'\r\n                        options={{ delimiter: '/', blocks: [2, 2] }}\r\n                      />\r\n                    </Col>\r\n                    <Col xs={6} md={3}>\r\n                      <Label className='form-label' for='cvv'>\r\n                        CVV\r\n                      </Label>\r\n                      <Cleave id='cvv' placeholder='654' className='form-control' options={{ blocks: [3] }} />\r\n                    </Col>\r\n                    <Col xs={12}>\r\n                      <div className='d-flex align-items-center'>\r\n                        <div className='form-switch w-100'>\r\n                          <Input defaultChecked type='switch' name='save-card' id='save-card' />\r\n                          <Label className='form-check-label' for='save-card'>\r\n                            <span className='switch-icon-left'>\r\n                              <Check size={14} />\r\n                            </span>\r\n                            <span className='switch-icon-right'>\r\n                              <X size={14} />\r\n                            </span>\r\n                          </Label>\r\n                          <Label className='form-check-label' className='fw-bolder ms-1' for='save-card'>\r\n                            Save Card for future billing?\r\n                          </Label>\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                    <Col className='mt-2 pt-1' xs={12}>\r\n                      <Button type='submit' className='me-1' color='primary'>\r\n                        Submit\r\n                      </Button>\r\n                      <Button color='secondary' outline>\r\n                        Cancel\r\n                      </Button>\r\n                    </Col>\r\n                  </Fragment>\r\n                )}\r\n              </Row>\r\n            </Col>\r\n            <Col lg='6' className='mt-2 mt-lg-0'>\r\n              <h6 className='fw-bolder mb-2'>My Cards</h6>\r\n              <div className='added-cards'>\r\n                {data.map((card, index) => {\r\n                  const isLastCard = index === data[data.length - 1]\r\n                  return (\r\n                    <div\r\n                      key={index}\r\n                      className={classnames('cardMaster rounded border p-2', {\r\n                        'mb-1': !isLastCard\r\n                      })}\r\n                    >\r\n                      <div className='d-flex justify-content-between flex-sm-row flex-column'>\r\n                        <div className='card-information'>\r\n                          <img src={card.imgSrc} alt={card.imgAlt} className='mb-1 img-fluid' />\r\n                          <div className='d-flex align-items-center mb-50'>\r\n                            <h6 className='mb-0'>{card.name}</h6>\r\n                            {index === 0 && (\r\n                              <Badge color='light-primary' className='ms-50'>\r\n                                Primary\r\n                              </Badge>\r\n                            )}\r\n                          </div>\r\n                          <span className='card-number '>\r\n                            **** **** **** {card.cardNumber.substring(card.cardNumber.length - 4)}\r\n                          </span>\r\n                        </div>\r\n                        <div className='d-flex flex-column text-start text-lg-end'>\r\n                          <div className='d-flex order-sm-0 order-1 mt-1 mt-sm-0'>\r\n                            <Button outline color='primary' className='me-75' onClick={() => openEditModal(card)}>\r\n                              Edit\r\n                            </Button>\r\n                            <Button outline>Delete</Button>\r\n                          </div>\r\n                          <span className='mt-2'>Card expires at {card.expiryDate}</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                })}\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n      <Modal\r\n        isOpen={show}\r\n        toggle={() => setShow(!show)}\r\n        className='modal-dialog-centered'\r\n        onClosed={() => setModalCardType('')}\r\n      >\r\n        <ModalHeader className='bg-transparent' toggle={() => setShow(!show)}></ModalHeader>\r\n        <ModalBody className='px-sm-5 mx-50 pb-5'>\r\n          <h1 className='text-center mb-1'>{selectedCondition ? 'Edit' : 'Add New'} Card</h1>\r\n          <p className='text-center'>\r\n            {selectedCondition ? 'Edit your saved card details' : 'Add card for future billing'}\r\n          </p>\r\n          <Form tag={Row} className='gy-1 gx-2 mt-75'>\r\n            <Col xs={12}>\r\n              <Label className='form-label' for='credit-card'>\r\n                Card Number\r\n              </Label>\r\n              <InputGroup>\r\n                <Cleave\r\n                  id='credit-card'\r\n                  className='form-control'\r\n                  value={selectedCondition ? selected.cardNumber : ''}\r\n                  placeholder='1356 3215 6548 7898'\r\n                  options={{\r\n                    creditCard: true,\r\n                    onCreditCardTypeChanged: type => {\r\n                      setModalCardType(type)\r\n                    }\r\n                  }}\r\n                />\r\n                {cardType !== '' && cardType !== 'unknown' ? (\r\n                  <InputGroupText>\r\n                    <img height='24' alt='card-type' src={cardsObj[modalCardType]} />\r\n                  </InputGroupText>\r\n                ) : null}\r\n              </InputGroup>\r\n            </Col>\r\n            <Col md={6}>\r\n              <Label className='form-label' for='card-name'>\r\n                Name On Card\r\n              </Label>\r\n              <Input id='card-name' placeholder='John Doe' defaultValue={selectedCondition ? selected.name : ''} />\r\n            </Col>\r\n            <Col xs={6} md={3}>\r\n              <Label className='form-label' for='exp-date'>\r\n                Exp. Date\r\n              </Label>\r\n              <Cleave\r\n                id='exp-date'\r\n                placeholder='MM/YY'\r\n                className='form-control'\r\n                options={{ delimiter: '/', blocks: [2, 2] }}\r\n                value={selectedCondition ? selected.expiryDate : ''}\r\n              />\r\n            </Col>\r\n            <Col xs={6} md={3}>\r\n              <Label className='form-label' for='cvv'>\r\n                CVV\r\n              </Label>\r\n              <Cleave\r\n                id='cvv'\r\n                placeholder='654'\r\n                className='form-control'\r\n                options={{ blocks: [3] }}\r\n                value={selectedCondition ? selected.cardCvc : ''}\r\n              />\r\n            </Col>\r\n            <Col xs={12}>\r\n              <div className='d-flex align-items-center'>\r\n                <div className='form-switch w-100'>\r\n                  <Input defaultChecked type='switch' name='save-card' id='save-card' />\r\n                  <Label className='form-check-label' for='save-card'>\r\n                    <span className='switch-icon-left'>\r\n                      <Check size={14} />\r\n                    </span>\r\n                    <span className='switch-icon-right'>\r\n                      <X size={14} />\r\n                    </span>\r\n                  </Label>\r\n                  <Label className='form-check-label fw-bolder ms-1' for='save-card'>\r\n                    Save Card for future billing?\r\n                  </Label>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col className='text-center mt-1' xs={12}>\r\n              <Button className='me-1' color='primary' onClick={() => setShow(!show)}>\r\n                Submit\r\n              </Button>\r\n              <Button color='secondary' outline onClick={() => setShow(!show)}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default PaymentMethods\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\account-settings\\TwoFactorAuth.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\pages\\account-settings\\ApiKeysList.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\wizard\\steps\\AccountDetails.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\wizard\\steps\\Address.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\wizard\\steps\\PersonalInfo.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\wizard\\steps\\SocialLinks.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\wizard\\steps-with-validation\\AccountDetails.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\wizard\\steps-with-validation\\PersonalInfo.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\wizard\\steps-with-validation\\SocialLinks.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\forms\\wizard\\steps-with-validation\\Address.js",[],"D:\\Utecho\\Scaff-cert\\src\\Admin\\Availability\\AvailabilityTable.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\data-list\\Table.js",["3932","3933","3934","3935","3936","3937","3938","3939","3940","3941","3942","3943","3944","3945","3946","3947","3948","3949","3950","3951","3952","3953","3954","3955"],"// ** React Imports\r\nimport { Fragment, useState, useEffect } from 'react'\r\n\r\n// ** Invoice List Sidebar\r\nimport Sidebar from './Sidebar'\r\nimport RiderSidebar from './RiderSidebar'\r\nimport ParcelSidebar from './ParcelSidebar'\r\nimport AssignParcelSidebar from './AssignParcelSidebar'\r\n\r\n// ** Table Columns\r\nimport {\r\n  columns,\r\n  columnsParcel,\r\n  columnsRiders,\r\n  columnsAssignParcel\r\n} from './columns'\r\n\r\n// ** Store & Actions\r\nimport { getAllData, getData } from '../../apps/user/store'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n// ** Third Party Components\r\nimport Select from 'react-select'\r\nimport ReactPaginate from 'react-paginate'\r\nimport DataTable from 'react-data-table-component'\r\nimport {\r\n  ChevronDown,\r\n  Share,\r\n  Printer,\r\n  FileText,\r\n  File,\r\n  Grid,\r\n  Copy\r\n} from 'react-feather'\r\n\r\n// ** Utils\r\nimport { selectThemeColors } from '@utils'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CardBody,\r\n  CardTitle,\r\n  CardHeader,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown\r\n} from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\n\r\n// ** Table Header\r\nconst CustomHeader = ({\r\n  store,\r\n  toggleSidebar,\r\n  handlePerPage,\r\n  rowsPerPage,\r\n  handleFilter,\r\n  searchTerm\r\n}) => {\r\n  // ** Converts table to CSV\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result\r\n\r\n    const columnDelimiter = ','\r\n    const lineDelimiter = '\\n'\r\n    const keys = Object.keys(store.data[0])\r\n\r\n    result = ''\r\n    result += keys.join(columnDelimiter)\r\n    result += lineDelimiter\r\n\r\n    array.forEach((item) => {\r\n      let ctr = 0\r\n      keys.forEach((key) => {\r\n        if (ctr > 0) result += columnDelimiter\r\n\r\n        result += item[key]\r\n\r\n        ctr++\r\n      })\r\n      result += lineDelimiter\r\n    })\r\n\r\n    return result\r\n  }\r\n\r\n  // ** Downloads CSV\r\n  function downloadCSV(array) {\r\n    const link = document.createElement('a')\r\n    let csv = convertArrayOfObjectsToCSV(array)\r\n    if (csv === null) return\r\n\r\n    const filename = 'export.csv'\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv = `data:text/csv;charset=utf-8,${csv}`\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv))\r\n    link.setAttribute('download', filename)\r\n    link.click()\r\n  }\r\n  return (\r\n    <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75'>\r\n      <Row>\r\n        <Col xl='6' className='d-flex align-items-center p-0'>\r\n          <div className='d-flex align-items-center w-100'>\r\n            <Button\r\n              className='add-new-user'\r\n              color='primary'\r\n              onClick={toggleSidebar}\r\n            >\r\n              Add New User\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n        <Col\r\n          xl='6'\r\n          className='d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1'\r\n        >\r\n          <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\r\n            <label className='mb-0' htmlFor='search-invoice'>\r\n              Search:\r\n            </label>\r\n            <Input\r\n              id='search-invoice'\r\n              className='ms-50 w-100'\r\n              type='text'\r\n              value={searchTerm}\r\n              onChange={(e) => handleFilter(e.target.value)}\r\n            />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst UsersList = (props) => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state.users)\r\n\r\n  // ** States\r\n  const [sort, setSort] = useState('desc')\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sortColumn, setSortColumn] = useState('id')\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [sidebarRiderOpen, setSidebarRiderOpen] = useState(false)\r\n  const [sidebarParcelOpen, setSidebarParcelOpen] = useState(false)\r\n  const [sidebarAssignParcelOpen, setSidebarAssignParcelOpen] = useState(false)\r\n\r\n  const [currentRole, setCurrentRole] = useState({\r\n    value: '',\r\n    label: 'Select Role'\r\n  })\r\n  const [currentPlan, setCurrentPlan] = useState({\r\n    value: '',\r\n    label: 'Select Plan'\r\n  })\r\n  const [currentStatus, setCurrentStatus] = useState({\r\n    value: '',\r\n    label: 'Select Status',\r\n    number: 0\r\n  })\r\n\r\n  // ** Function to toggle sidebar\r\n  const toggleSidebar = () => {\r\n    if (props.isVendorList === true) {\r\n      setSidebarOpen(!sidebarOpen)\r\n    } else if (props.isRiderList === true) {\r\n      setSidebarRiderOpen(!sidebarRiderOpen)\r\n    } else if (props.isParcelList === true) {\r\n      setSidebarParcelOpen(!sidebarParcelOpen)\r\n    } else if (props.isParcelList === true) {\r\n      setSidebarParcelOpen(!sidebarParcelOpen)\r\n    } else if (props.isAssignParcelList === true) {\r\n      return setSidebarAssignParcelOpen(!sidebarAssignParcelOpen)\r\n    }\r\n  }\r\n\r\n  // ** Get data on mount\r\n  useEffect(() => {\r\n    dispatch(getAllData())\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: currentRole.value,\r\n        status: currentStatus.value,\r\n        currentPlan: currentPlan.value\r\n      })\r\n    )\r\n  }, [dispatch, store.data.length, sort, sortColumn, currentPage])\r\n\r\n  // ** User filter options\r\n  const roleOptions = [\r\n    { value: '', label: 'Select Role' },\r\n    { value: 'admin', label: 'Admin' },\r\n    { value: 'author', label: 'Author' },\r\n    { value: 'editor', label: 'Editor' },\r\n    { value: 'maintainer', label: 'Maintainer' },\r\n    { value: 'subscriber', label: 'Subscriber' }\r\n  ]\r\n\r\n  const planOptions = [\r\n    { value: '', label: 'Select Plan' },\r\n    { value: 'basic', label: 'Basic' },\r\n    { value: 'company', label: 'Company' },\r\n    { value: 'enterprise', label: 'Enterprise' },\r\n    { value: 'team', label: 'Team' }\r\n  ]\r\n\r\n  const statusOptions = [\r\n    { value: '', label: 'Select Status', number: 0 },\r\n    { value: 'pending', label: 'Pending', number: 1 },\r\n    { value: 'active', label: 'Active', number: 2 },\r\n    { value: 'inactive', label: 'Inactive', number: 3 }\r\n  ]\r\n\r\n  // ** Function in get data on page change\r\n  const handlePagination = (page) => {\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: rowsPerPage,\r\n        page: page.selected + 1,\r\n        role: currentRole.value,\r\n        status: currentStatus.value,\r\n        currentPlan: currentPlan.value\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  // ** Function in get data on rows per page\r\n  const handlePerPage = (e) => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: value,\r\n        page: currentPage,\r\n        role: currentRole.value,\r\n        currentPlan: currentPlan.value,\r\n        status: currentStatus.value\r\n      })\r\n    )\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = (val) => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        q: val,\r\n        sortColumn,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: currentRole.value,\r\n        status: currentStatus.value,\r\n        currentPlan: currentPlan.value\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        pageCount={count || 1}\r\n        activeClassName='active'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={(page) => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        containerClassName={\r\n          'pagination react-paginate justify-content-end my-2 pe-1'\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  // ** Table data to render\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      role: currentRole.value,\r\n      currentPlan: currentPlan.value,\r\n      status: currentStatus.value,\r\n      q: searchTerm\r\n    }\r\n\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n\r\n    if (store.data.length > 0) {\r\n      return store.data\r\n    } else if (store.data.length === 0 && isFiltered) {\r\n      return []\r\n    } else {\r\n      return store.allData.slice(0, rowsPerPage)\r\n    }\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSort(sortDirection)\r\n    setSortColumn(column.sortField)\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: currentRole.value,\r\n        status: currentStatus.value,\r\n        currentPlan: currentPlan.value\r\n      })\r\n    )\r\n  }\r\n  const handleColumns = () => {\r\n    if (props.isVendorList === true) {\r\n      return columns\r\n    } else if (props.isParcelList === true) {\r\n      return columnsParcel\r\n    } else if (props.isRiderList === true) {\r\n      return columnsRiders\r\n    } else if (props.isAssignParcelList === true) {\r\n      return columnsAssignParcel\r\n    }\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <Card className='overflow-hidden'>\r\n        <div className='react-dataTable'>\r\n          <DataTable\r\n            noHeader\r\n            subHeader\r\n            sortServer\r\n            pagination\r\n            responsive\r\n            paginationServer\r\n            columns={handleColumns()}\r\n            // columns={columns}\r\n            // columnsParcel={columnsParcel}\r\n            onSort={handleSort}\r\n            sortIcon={<ChevronDown />}\r\n            className='react-dataTable'\r\n            paginationComponent={CustomPagination}\r\n            data={dataToRender()}\r\n            subHeaderComponent={\r\n              <CustomHeader\r\n                store={store}\r\n                searchTerm={searchTerm}\r\n                rowsPerPage={rowsPerPage}\r\n                handleFilter={handleFilter}\r\n                handlePerPage={handlePerPage}\r\n                toggleSidebar={toggleSidebar}\r\n              />\r\n            }\r\n          />\r\n        </div>\r\n      </Card>\r\n\r\n      <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} />\r\n      <RiderSidebar open={sidebarRiderOpen} toggleSidebar={toggleSidebar} />\r\n      <ParcelSidebar open={sidebarParcelOpen} toggleSidebar={toggleSidebar} />\r\n      <AssignParcelSidebar\r\n        open={sidebarAssignParcelOpen}\r\n        toggleSidebar={toggleSidebar}\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default UsersList\r\n","D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\components\\navbar\\NavbarSearch.js",[],"D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\components\\navbar\\UserDropdown.js",["3956","3957","3958","3959","3960","3961","3962"],"// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Utils\r\nimport { isUserLoggedIn } from '@utils'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch } from 'react-redux'\r\nimport { handleLogout } from '@store/authentication'\r\n\r\n// ** Third Party Components\r\nimport {\r\n  User,\r\n  Mail,\r\n  CheckSquare,\r\n  MessageSquare,\r\n  Settings,\r\n  CreditCard,\r\n  HelpCircle,\r\n  Power\r\n} from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  DropdownItem\r\n} from 'reactstrap'\r\n\r\n// ** Default Avatar Image\r\nimport defaultAvatar from '@src/assets/images/portrait/small/avatar-s-11.jpg'\r\n\r\nconst UserDropdown = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n\r\n  // ** State\r\n  const [userData, setUserData] = useState(null)\r\n\r\n  //** ComponentDidMount\r\n  useEffect(() => {\r\n    if (isUserLoggedIn() !== null) {\r\n      setUserData(JSON.parse(localStorage.getItem('userData')))\r\n    }\r\n  }, [])\r\n\r\n  //** Vars\r\n  const userAvatar = (userData && userData.avatar) || defaultAvatar\r\n\r\n  return (\r\n    <UncontrolledDropdown tag='li' className='dropdown-user nav-item'>\r\n      <DropdownToggle\r\n        href='/'\r\n        tag='a'\r\n        className='nav-link dropdown-user-link'\r\n        onClick={(e) => e.preventDefault()}\r\n      >\r\n        <div className='user-nav d-sm-flex d-none'>\r\n          {/* <span className='user-name fw-bold'>\r\n            {(userData && userData['username']) || 'John Doe'}\r\n          </span> */}\r\n          {/* <span  className='user-status'>\r\n            {(userData && userData.role) || 'Admin'}\r\n          </span> */}\r\n        </div>\r\n        <Avatar img={userAvatar} imgHeight='40' imgWidth='40' status='online' />\r\n      </DropdownToggle>\r\n      <DropdownMenu end>\r\n        {/* <DropdownItem tag={Link} to='/pages/profile'>\r\n          <User size={14} className='me-75' />\r\n          <span className='align-middle'>Profile</span>\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to='/apps/email'>\r\n          <Mail size={14} className='me-75' />\r\n          <span className='align-middle'>Inbox</span>\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to='/apps/todo'>\r\n          <CheckSquare size={14} className='me-75' />\r\n          <span className='align-middle'>Tasks</span>\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to='/apps/chat'>\r\n          <MessageSquare size={14} className='me-75' />\r\n          <span className='align-middle'>Chats</span>\r\n        </DropdownItem>\r\n        <DropdownItem divider /> */}\r\n        {/* <DropdownItem tag={Link} to='/pages/account-settings'>\r\n          <Settings size={14} className='me-75' />\r\n          <span className='align-middle'>Settings</span>\r\n        </DropdownItem> */}\r\n        {/* <DropdownItem tag={Link} to='/pages/pricing'>\r\n          <CreditCard size={14} className='me-75' />\r\n          <span className='align-middle'>Pricing</span>\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to='/pages/faq'>\r\n          <HelpCircle size={14} className='me-75' />\r\n          <span className='align-middle'>FAQ</span>\r\n        </DropdownItem> */}\r\n        <DropdownItem\r\n          tag={Link}\r\n          to='/login'\r\n          onClick={() => dispatch(handleLogout())}\r\n        >\r\n          <Power size={14} className='me-75' />\r\n          <span className='align-middle'>Logout</span>\r\n        </DropdownItem>\r\n      </DropdownMenu>\r\n    </UncontrolledDropdown>\r\n  )\r\n}\r\n\r\nexport default UserDropdown\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\pages\\authentication\\Login.js",["3963","3964","3965","3966","3967","3968","3969","3970","3971","3972","3973"],"// ** React Imports\r\nimport { useContext, Fragment, ReactDOM } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\n// ** Custom Hooks\r\nimport { useSkin } from '@hooks/useSkin'\r\nimport useJwt from '@src/auth/jwt/useJwt'\r\nimport logo from \"../../../Admin/assests/logo.png\";\r\n\r\n// ** Third Party Components\r\nimport { useDispatch } from 'react-redux'\r\nimport { toast, Slide } from 'react-toastify'\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport { Facebook, Twitter, Mail, GitHub, HelpCircle, Coffee } from 'react-feather'\r\nimport GoogleLogin  from 'react-google-login';\r\nimport  GoogleLogout  from 'react-google-login';\r\n\r\n\r\n// ** Actions\r\nimport { handleLogin } from '@store/authentication'\r\n\r\n// ** Context\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\n\r\n// ** Utils\r\nimport { getHomeRouteForLoggedInUser } from '@utils'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, Form, Input, Label, Alert, Button, CardText, CardTitle, UncontrolledTooltip } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/pages/page-authentication.scss'\r\n\r\nconst ToastContent = ({ name, role }) => (\r\n  <Fragment>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <Avatar size='sm' color='success' icon={<Coffee size={12} />} />\r\n        <h6 className='toast-title fw-bold'>Welcome, {name}</h6>\r\n      </div>\r\n    </div>\r\n    <div className='toastify-body'>\r\n      <span>You have successfully logged in as an {role} user to Vuexy. Now you can start to explore. Enjoy!</span>\r\n    </div>\r\n  </Fragment>\r\n)\r\n\r\nconst defaultValues = {\r\n  password: 'admin',\r\n  loginEmail: 'admin@demo.com'\r\n}\r\n\r\nconst Login = () => {\r\n\r\n\r\n  // ** Hooks\r\n  const { skin } = useSkin()\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const ability = useContext(AbilityContext)\r\n  const {\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({ defaultValues })\r\n  const illustration = skin === 'dark' ? 'login-v2-dark.svg' : 'login-v2.svg',\r\n    source = require(`@src/assets/images/pages/${illustration}`).default\r\n\r\n  const onSubmit = data => {\r\n    if (Object.values(data).every(field => field.length > 0)) {\r\n      useJwt\r\n        .login({ email: data.loginEmail, password: data.password })\r\n        .then(res => {\r\n          const data = { ...res.data.userData, accessToken: res.data.accessToken, refreshToken: res.data.refreshToken }\r\n          console.log(res.data.userData.ability)\r\n          dispatch(handleLogin(data))\r\n          ability.update(res.data.userData.ability)\r\n          history.push(getHomeRouteForLoggedInUser(data.role))\r\n          toast.success(\r\n            <ToastContent name={data.fullName || data.username || 'John Doe'} role={data.role || 'admin'} />,\r\n            { icon: false, transition: Slide, hideProgressBar: true, autoClose: 2000 }\r\n          )\r\n        })\r\n        .catch(err => console.log(err))\r\n    } else {\r\n      for (const key in data) {\r\n        if (data[key].length === 0) {\r\n          setError(key, {\r\n            type: 'manual'\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const history2 = useHistory();\r\n\r\n \r\n  const onFailure = (error) => {\r\n    console.log('Login failed: ', error);\r\n  };\r\n  const onSuccess = (response) => {\r\n    console.log('Login Success: ', response);\r\n    // Navigate to dashboard page after successful login\r\n    history2.push('/dashboard');\r\n  };\r\n\r\n  return (\r\n    <div className='auth-wrapper auth-cover'>\r\n      <Row className='auth-inner m-0'>\r\n        <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\r\n          {/* <svg viewBox='0 0 139 95' version='1.1' height='28'>\r\n            <defs>\r\n              <linearGradient x1='100%' y1='10.5120544%' x2='50%' y2='89.4879456%' id='linearGradient-1'>\r\n                <stop stopColor='#000000' offset='0%'></stop>\r\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\r\n              </linearGradient>\r\n              <linearGradient x1='64.0437835%' y1='46.3276743%' x2='37.373316%' y2='100%' id='linearGradient-2'>\r\n                <stop stopColor='#EEEEEE' stopOpacity='0' offset='0%'></stop>\r\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\r\n              </linearGradient>\r\n            </defs>\r\n            <g id='Page-1' stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\r\n              <g id='Artboard' transform='translate(-400.000000, -178.000000)'>\r\n                <g id='Group' transform='translate(400.000000, 178.000000)'>\r\n                  <path\r\n                    d='M-5.68434189e-14,2.84217094e-14 L39.1816085,2.84217094e-14 L69.3453773,32.2519224 L101.428699,2.84217094e-14 L138.784583,2.84217094e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L6.71554594,44.4188507 C2.46876683,39.9813776 0.345377275,35.1089553 0.345377275,29.8015838 C0.345377275,24.4942122 0.230251516,14.560351 -5.68434189e-14,2.84217094e-14 Z'\r\n                    id='Path'\r\n                    className='text-primary'\r\n                    style={{ fill: 'currentColor' }}\r\n                  ></path>\r\n                  <path\r\n                    d='M69.3453773,32.2519224 L101.428699,1.42108547e-14 L138.784583,1.42108547e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L32.8435758,70.5039241 L69.3453773,32.2519224 Z'\r\n                    id='Path'\r\n                    fill='url(#linearGradient-1)'\r\n                    opacity='0.2'\r\n                  ></path>\r\n                  <polygon\r\n                    id='Path-2'\r\n                    fill='#000000'\r\n                    opacity='0.049999997'\r\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 54.0490008 16.1851325'\r\n                  ></polygon>\r\n                  <polygon\r\n                    id='Path-2'\r\n                    fill='#000000'\r\n                    opacity='0.099999994'\r\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 58.3683556 20.7402338'\r\n                  ></polygon>\r\n                  <polygon\r\n                    id='Path-3'\r\n                    fill='url(#linearGradient-2)'\r\n                    opacity='0.099999994'\r\n                    points='101.428699 0 83.0667527 94.1480575 130.378721 47.0740288'\r\n                  ></polygon>\r\n                </g>\r\n              </g>\r\n            </g>\r\n          </svg> */}\r\n          {/* <h2 className='brand-text text-primary ms-1'>Vuexy</h2> */}\r\n          <img src={logo} style={{ width: '8rem' }} />\r\n        </Link>\r\n        <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\r\n          <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\r\n            <img className='img-fluid' src={source} alt='Login Cover' />\r\n          </div>\r\n        </Col>\r\n        <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\r\n          <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\r\n            <CardTitle tag='h2' className='fw-bold mb-1'>\r\n              Welcome to OMYKI 👋\r\n            </CardTitle>\r\n            {/* <CardText className='mb-2'>Please sign-in to your account and start the adventure</CardText> */}\r\n            {/* <Alert color='primary'>\r\n              <div className='alert-body font-small-2'>\r\n                <p>\r\n                  <small className='me-50'>\r\n                    <span className='fw-bold'>Admin:</span> admin@demo.com | admin\r\n                  </small>\r\n                </p>\r\n                <p>\r\n                  <small className='me-50'>\r\n                    <span className='fw-bold'>Client:</span> client@demo.com | client\r\n                  </small>\r\n                </p>\r\n              </div>\r\n              <HelpCircle\r\n                id='login-tip'\r\n                className='position-absolute'\r\n                size={18}\r\n                style={{ top: '10px', right: '10px' }}\r\n              />\r\n              <UncontrolledTooltip target='login-tip' placement='left'>\r\n                This is just for ACL demo purpose.\r\n              </UncontrolledTooltip>\r\n            </Alert> */}\r\n            <Form className='auth-login-form mt-2 mt-sm-5' onSubmit={handleSubmit(onSubmit)}>\r\n              <div className='mb-1'>\r\n                <Label className='form-label' for='login-email'>\r\n                  Email\r\n                </Label>\r\n                <Controller\r\n                  id='loginEmail'\r\n                  name='loginEmail'\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <Input\r\n                      autoFocus\r\n                      type='email'\r\n                      placeholder='john@example.com'\r\n                      invalid={errors.loginEmail && true}\r\n                      {...field}\r\n                    />\r\n                  )}\r\n                />\r\n              </div>\r\n              <div className='mb-1'>\r\n                <div className='d-flex justify-content-between'>\r\n                  <Label className='form-label' for='login-password'>\r\n                    Password\r\n                  </Label>\r\n                  <Link to='/forgot-password'>\r\n                    <small>Forgot Password?</small>\r\n                  </Link>\r\n                </div>\r\n                <Controller\r\n                  id='password'\r\n                  name='password'\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <InputPasswordToggle className='input-group-merge' invalid={errors.password && true} {...field} />\r\n                  )}\r\n                />\r\n              </div>\r\n              <div className='form-check mb-1'>\r\n                <Input type='checkbox' id='remember-me' />\r\n                <Label className='form-check-label' for='remember-me'>\r\n                  Remember Me\r\n                </Label>\r\n              </div>\r\n              <Button type='submit' color='primary' block>\r\n                Sign in\r\n              </Button>\r\n            </Form>\r\n            <p className='text-center mt-2'>\r\n              <span className='me-25'>New on our platform?</span>\r\n              <Link to='/register'>\r\n                <span>Create an account</span>\r\n              </Link>\r\n            </p>\r\n            <div className='divider my-2'>\r\n              <div className='divider-text'>or</div>\r\n            </div>\r\n            <div className='auth-footer-btn d-flex justify-content-center'>\r\n                <GoogleLogin\r\n                  clientId=\"433696700513-n5svvk565t3ktj3vfnd68vrhg5g965ed.apps.googleusercontent.com\"\r\n                  buttonText=\"Sign in with Google\"\r\n                  onSuccess={onSuccess}\r\n                  onFailure={onFailure}\r\n                  cookiePolicy={'single_host_origin'}\r\n                  responseType='code,token'\r\n                  className='w-100 d-flex align-items-center border justify-content-center text-dark rounded-2 shadow-sm'\r\n                />\r\n            </div>\r\n          </Col>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","D:\\Utecho\\Scaff-cert\\src\\@core\\layouts\\components\\navbar\\IntlDropdown.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\import-export\\ExportSelected.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\import-export\\Export.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\import-export\\Import.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\spinners\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\data-list\\columns.js",["3974"],"// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Store & Actions\r\nimport { store } from '@store/store'\r\nimport { getUser, deleteUser } from './store'\r\n\r\n// ** Icons Imports\r\nimport {\r\n  Slack,\r\n  User,\r\n  Settings,\r\n  Database,\r\n  Edit2,\r\n  MoreVertical,\r\n  FileText,\r\n  Trash2,\r\n  Archive\r\n} from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Badge,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from 'reactstrap'\r\n\r\n// ** Renders Client Columns\r\nconst renderClient = (row) => {\r\n  const stateNum = Math.floor(Math.random() * 6),\r\n    states = [\r\n      'light-success',\r\n      'light-danger',\r\n      'light-warning',\r\n      'light-info',\r\n      'light-primary',\r\n      'light-secondary'\r\n    ],\r\n    color = states[stateNum]\r\n\r\n  if (row.avatar.length) {\r\n    return <Avatar className='me-1' img={row.avatar} width='32' height='32' />\r\n  } else {\r\n    return (\r\n      <Avatar\r\n        color={color || 'primary'}\r\n        className='me-1'\r\n        content={row.fullName || 'John Doe'}\r\n        initials\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\n// ** Renders Role Columns\r\nconst renderRole = (row) => {\r\n  const roleObj = {\r\n    subscriber: {\r\n      class: 'text-primary',\r\n      icon: User\r\n    },\r\n    maintainer: {\r\n      class: 'text-success',\r\n      icon: Database\r\n    },\r\n    editor: {\r\n      class: 'text-info',\r\n      icon: Edit2\r\n    },\r\n    author: {\r\n      class: 'text-warning',\r\n      icon: Settings\r\n    },\r\n    admin: {\r\n      class: 'text-danger',\r\n      icon: Slack\r\n    }\r\n  }\r\n\r\n  const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\r\n\r\n  return (\r\n    <span className='text-truncate text-capitalize align-middle'>\r\n      <Icon\r\n        size={18}\r\n        className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`}\r\n      />\r\n      {row.role}\r\n    </span>\r\n  )\r\n}\r\n\r\nconst statusObj = {\r\n  pending: 'light-warning',\r\n  active: 'light-success',\r\n  inactive: 'light-secondary'\r\n}\r\n\r\nexport const columns = [\r\n  {\r\n    // name: 'User',\r\n    name: 'Product Vendor',\r\n    sortable: true,\r\n    minWidth: '300px',\r\n    sortField: 'fullName',\r\n    selector: (row) => row.fullName,\r\n    cell: (row) => (\r\n      <div className='d-flex justify-content-left align-items-center'>\r\n        {renderClient(row)}\r\n        <div className='d-flex flex-column'>\r\n          <Link\r\n            to={`/apps/user/view/${row.id}`}\r\n            className='user_name text-truncate text-body'\r\n            onClick={() => store.dispatch(getUser(row.id))}\r\n          >\r\n            <span className='fw-bolder'>{row.fullName}</span>\r\n          </Link>\r\n          <small className='text-truncate text-muted mb-0'>{row.email}</small>\r\n        </div>\r\n      </div>\r\n    )\r\n  },\r\n  // {\r\n  //   name: 'Role',\r\n  //   sortable: true,\r\n  //   minWidth: '172px',\r\n  //   sortField: 'role',\r\n  //   selector: (row) => row.role,\r\n  //   cell: (row) => renderRole(row)\r\n  // },\r\n  {\r\n    // name: 'Plan',\r\n    name: 'Phone',\r\n    minWidth: '138px',\r\n    sortable: true,\r\n    sortField: 'currentPlan',\r\n    selector: (row) => row.currentPlan,\r\n    cell: (row) => <span className='text-capitalize'>{row.currentPlan}</span>\r\n  },\r\n  {\r\n    // name: 'Billing',\r\n    name: 'address',\r\n\r\n    minWidth: '230px',\r\n    sortable: true,\r\n    sortField: 'billing',\r\n    selector: (row) => row.billing,\r\n    cell: (row) => <span className='text-capitalize'>{row.billing}</span>\r\n  },\r\n  {\r\n    // name: 'Status',\r\n    name: 'vendor bio',\r\n\r\n    minWidth: '138px',\r\n    sortable: true,\r\n    sortField: 'status',\r\n    selector: (row) => row.status,\r\n    cell: (row) => (\r\n      <Badge className='text-capitalize' color={statusObj[row.status]} pill>\r\n        {row.status}\r\n      </Badge>\r\n    )\r\n  },\r\n  {\r\n    name: 'Actions',\r\n    minWidth: '100px',\r\n    cell: (row) => (\r\n      <div className='column-action'>\r\n        <UncontrolledDropdown>\r\n          <DropdownToggle tag='div' className='btn btn-sm'>\r\n            <MoreVertical size={14} className='cursor-pointer' />\r\n          </DropdownToggle>\r\n          <DropdownMenu>\r\n            <DropdownItem\r\n              tag={Link}\r\n              className='w-100'\r\n              to={`/apps/user/view/${row.id}`}\r\n              onClick={() => store.dispatch(getUser(row.id))}\r\n            >\r\n              <FileText size={14} className='me-50' />\r\n              <span className='align-middle'>Details</span>\r\n            </DropdownItem>\r\n            <DropdownItem\r\n              tag='a'\r\n              href='/'\r\n              className='w-100'\r\n              onClick={(e) => e.preventDefault()}\r\n            >\r\n              <Archive size={14} className='me-50' />\r\n              <span className='align-middle'>Edit</span>\r\n            </DropdownItem>\r\n            <DropdownItem\r\n              tag='a'\r\n              href='/'\r\n              className='w-100'\r\n              onClick={(e) => {\r\n                e.preventDefault()\r\n                store.dispatch(deleteUser(row.id))\r\n              }}\r\n            >\r\n              <Trash2 size={14} className='me-50' />\r\n              <span className='align-middle'>Delete</span>\r\n            </DropdownItem>\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n      </div>\r\n    )\r\n  }\r\n]\r\n\r\n// --------------------------------------------\r\nexport const columnsParcel = [\r\n  {\r\n    // name: 'User',\r\n    name: 'product',\r\n    sortable: true,\r\n    minWidth: '300px',\r\n    sortField: 'fullName',\r\n    selector: (row) => row.fullName,\r\n    cell: (row) => (\r\n      <div className='d-flex justify-content-left align-items-center'>\r\n        {renderClient(row)}\r\n        <div className='d-flex flex-column'>\r\n          <Link\r\n            to={`/apps/user/view/${row.id}`}\r\n            className='user_name text-truncate text-body'\r\n            onClick={() => store.dispatch(getUser(row.id))}\r\n          >\r\n            <span className='fw-bolder'>{row.fullName}</span>\r\n          </Link>\r\n          <small className='text-truncate text-muted mb-0'>{row.email}</small>\r\n        </div>\r\n      </div>\r\n    )\r\n  },\r\n  // {\r\n  //   name: 'Role',\r\n  //   sortable: true,\r\n  //   minWidth: '172px',\r\n  //   sortField: 'role',\r\n  //   selector: (row) => row.role,\r\n  //   cell: (row) => renderRole(row)\r\n  // },\r\n  {\r\n    // name: 'Plan',\r\n    name: 'title',\r\n    minWidth: '138px',\r\n    sortable: true,\r\n    sortField: 'currentPlan',\r\n    selector: (row) => row.currentPlan,\r\n    cell: (row) => <span className='text-capitalize'>{row.currentPlan}</span>\r\n  },\r\n  {\r\n    // name: 'Status',\r\n    name: 'price',\r\n\r\n    minWidth: '138px',\r\n    sortable: true,\r\n    sortField: 'status',\r\n    selector: (row) => row.status,\r\n    cell: (row) => (\r\n      <Badge className='text-capitalize' color={statusObj[row.status]} pill>\r\n        {row.status}\r\n      </Badge>\r\n    )\r\n  },\r\n  {\r\n    // name: 'Billing',\r\n    name: 'Vendor',\r\n\r\n    minWidth: '230px',\r\n    sortable: true,\r\n    sortField: 'billing',\r\n    selector: (row) => row.billing,\r\n    cell: (row) => <span className='text-capitalize'>{row.billing}</span>\r\n  },\r\n  {\r\n    // name: 'Billing',\r\n    name: 'description',\r\n    minWidth: '230px',\r\n    sortable: true,\r\n    sortField: 'billing',\r\n    selector: (row) => row.billing,\r\n    cell: (row) => <span className='text-capitalize'>{row.billing}</span>\r\n  },\r\n  {\r\n    name: 'Actions',\r\n    minWidth: '100px',\r\n    cell: (row) => (\r\n      <div className='column-action'>\r\n        <UncontrolledDropdown>\r\n          <DropdownToggle tag='div' className='btn btn-sm'>\r\n            <MoreVertical size={14} className='cursor-pointer' />\r\n          </DropdownToggle>\r\n          <DropdownMenu>\r\n            <DropdownItem\r\n              tag={Link}\r\n              className='w-100'\r\n              to={`/apps/user/view/${row.id}`}\r\n              onClick={() => store.dispatch(getUser(row.id))}\r\n            >\r\n              <FileText size={14} className='me-50' />\r\n              <span className='align-middle'>Details</span>\r\n            </DropdownItem>\r\n            <DropdownItem\r\n              tag='a'\r\n              href='/'\r\n              className='w-100'\r\n              onClick={(e) => e.preventDefault()}\r\n            >\r\n              <Archive size={14} className='me-50' />\r\n              <span className='align-middle'>Edit</span>\r\n            </DropdownItem>\r\n            <DropdownItem\r\n              tag='a'\r\n              href='/'\r\n              className='w-100'\r\n              onClick={(e) => {\r\n                e.preventDefault()\r\n                store.dispatch(deleteUser(row.id))\r\n              }}\r\n            >\r\n              <Trash2 size={14} className='me-50' />\r\n              <span className='align-middle'>Delete</span>\r\n            </DropdownItem>\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n      </div>\r\n    )\r\n  }\r\n]\r\n// --------------------------------------------\r\nexport const columnsRiders = [\r\n  {\r\n    // name: 'User',\r\n    name: 'Rider',\r\n    sortable: true,\r\n    minWidth: '300px',\r\n    sortField: 'fullName',\r\n    selector: (row) => row.fullName,\r\n    cell: (row) => (\r\n      <div className='d-flex justify-content-left align-items-center'>\r\n        {renderClient(row)}\r\n        <div className='d-flex flex-column'>\r\n          <Link\r\n            to={`/apps/user/view/${row.id}`}\r\n            className='user_name text-truncate text-body'\r\n            onClick={() => store.dispatch(getUser(row.id))}\r\n          >\r\n            <span className='fw-bolder'>{row.fullName}</span>\r\n          </Link>\r\n          <small className='text-truncate text-muted mb-0'>{row.email}</small>\r\n        </div>\r\n      </div>\r\n    )\r\n  },\r\n  // {\r\n  //   name: 'Role',\r\n  //   sortable: true,\r\n  //   minWidth: '172px',\r\n  //   sortField: 'role',\r\n  //   selector: (row) => row.role,\r\n  //   cell: (row) => renderRole(row)\r\n  // },\r\n  {\r\n    // name: 'Plan',\r\n    name: 'password',\r\n    minWidth: '138px',\r\n    sortable: true,\r\n    sortField: 'currentPlan',\r\n    selector: (row) => row.currentPlan,\r\n    cell: (row) => <span className='text-capitalize'>{row.currentPlan}</span>\r\n  },\r\n  {\r\n    // name: 'Billing',\r\n    name: 'phone',\r\n\r\n    minWidth: '230px',\r\n    sortable: true,\r\n    sortField: 'billing',\r\n    selector: (row) => row.billing,\r\n    cell: (row) => <span className='text-capitalize'>{row.billing}</span>\r\n  },\r\n  {\r\n    // name: 'Billing',\r\n    name: 'rider bio',\r\n\r\n    minWidth: '230px',\r\n    sortable: true,\r\n    sortField: 'billing',\r\n    selector: (row) => row.billing,\r\n    cell: (row) => <span className='text-capitalize'>{row.billing}</span>\r\n  },\r\n  {\r\n    // name: 'Billing',\r\n    name: 'address',\r\n\r\n    minWidth: '230px',\r\n    sortable: true,\r\n    sortField: 'billing',\r\n    selector: (row) => row.billing,\r\n    cell: (row) => <span className='text-capitalize'>{row.billing}</span>\r\n  },\r\n  {\r\n    name: 'Actions',\r\n    minWidth: '100px',\r\n    cell: (row) => (\r\n      <div className='column-action'>\r\n        <UncontrolledDropdown>\r\n          <DropdownToggle tag='div' className='btn btn-sm'>\r\n            <MoreVertical size={14} className='cursor-pointer' />\r\n          </DropdownToggle>\r\n          <DropdownMenu>\r\n            <DropdownItem\r\n              tag={Link}\r\n              className='w-100'\r\n              to={`/apps/user/view/${row.id}`}\r\n              onClick={() => store.dispatch(getUser(row.id))}\r\n            >\r\n              <FileText size={14} className='me-50' />\r\n              <span className='align-middle'>Details</span>\r\n            </DropdownItem>\r\n            <DropdownItem\r\n              tag='a'\r\n              href='/'\r\n              className='w-100'\r\n              onClick={(e) => e.preventDefault()}\r\n            >\r\n              <Archive size={14} className='me-50' />\r\n              <span className='align-middle'>Edit</span>\r\n            </DropdownItem>\r\n            <DropdownItem\r\n              tag='a'\r\n              href='/'\r\n              className='w-100'\r\n              onClick={(e) => {\r\n                e.preventDefault()\r\n                store.dispatch(deleteUser(row.id))\r\n              }}\r\n            >\r\n              <Trash2 size={14} className='me-50' />\r\n              <span className='align-middle'>Delete</span>\r\n            </DropdownItem>\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n      </div>\r\n    )\r\n  }\r\n]\r\n// --------------------------------------------\r\nexport const columnsAssignParcel = [\r\n  {\r\n    // name: 'User',\r\n    name: 'product',\r\n    sortable: true,\r\n    minWidth: '300px',\r\n    sortField: 'fullName',\r\n    selector: (row) => row.fullName,\r\n    cell: (row) => (\r\n      <div className='d-flex justify-content-left align-items-center'>\r\n        {renderClient(row)}\r\n        <div className='d-flex flex-column'>\r\n          <Link\r\n            to={`/apps/user/view/${row.id}`}\r\n            className='user_name text-truncate text-body'\r\n            onClick={() => store.dispatch(getUser(row.id))}\r\n          >\r\n            <span className='fw-bolder'>{row.fullName}</span>\r\n          </Link>\r\n          <small className='text-truncate text-muted mb-0'>{row.email}</small>\r\n        </div>\r\n      </div>\r\n    )\r\n  },\r\n  // {\r\n  //   name: 'Role',\r\n  //   sortable: true,\r\n  //   minWidth: '172px',\r\n  //   sortField: 'role',\r\n  //   selector: (row) => row.role,\r\n  //   cell: (row) => renderRole(row)\r\n  // },\r\n  {\r\n    // name: 'Plan',\r\n    name: 'rider',\r\n    minWidth: '138px',\r\n    sortable: true,\r\n    sortField: 'currentPlan',\r\n    selector: (row) => row.currentPlan,\r\n    cell: (row) => <span className='text-capitalize'>{row.currentPlan}</span>\r\n  },\r\n  {\r\n    // name: 'Billing',\r\n    name: 'mobile',\r\n\r\n    minWidth: '230px',\r\n    sortable: true,\r\n    sortField: 'billing',\r\n    selector: (row) => row.billing,\r\n    cell: (row) => <span className='text-capitalize'>{row.billing}</span>\r\n  },\r\n  {\r\n    // name: 'Billing',\r\n    name: 'address',\r\n\r\n    minWidth: '230px',\r\n    sortable: true,\r\n    sortField: 'billing',\r\n    selector: (row) => row.billing,\r\n    cell: (row) => <span className='text-capitalize'>{row.billing}</span>\r\n  },\r\n  {\r\n    // name: 'Status',\r\n    name: 'status',\r\n\r\n    minWidth: '138px',\r\n    sortable: true,\r\n    sortField: 'status',\r\n    selector: (row) => row.status,\r\n    cell: (row) => (\r\n      <Badge className='text-capitalize' color={statusObj[row.status]} pill>\r\n        {row.status}\r\n      </Badge>\r\n    )\r\n  },\r\n  {\r\n    name: 'Actions',\r\n    minWidth: '100px',\r\n    cell: (row) => (\r\n      <div className='column-action'>\r\n        <UncontrolledDropdown>\r\n          <DropdownToggle tag='div' className='btn btn-sm'>\r\n            <MoreVertical size={14} className='cursor-pointer' />\r\n          </DropdownToggle>\r\n          <DropdownMenu>\r\n            <DropdownItem\r\n              tag={Link}\r\n              className='w-100'\r\n              to={`/apps/user/view/${row.id}`}\r\n              onClick={() => store.dispatch(getUser(row.id))}\r\n            >\r\n              <FileText size={14} className='me-50' />\r\n              <span className='align-middle'>Details</span>\r\n            </DropdownItem>\r\n            <DropdownItem\r\n              tag='a'\r\n              href='/'\r\n              className='w-100'\r\n              onClick={(e) => e.preventDefault()}\r\n            >\r\n              <Archive size={14} className='me-50' />\r\n              <span className='align-middle'>Edit</span>\r\n            </DropdownItem>\r\n            <DropdownItem\r\n              tag='a'\r\n              href='/'\r\n              className='w-100'\r\n              onClick={(e) => {\r\n                e.preventDefault()\r\n                store.dispatch(deleteUser(row.id))\r\n              }}\r\n            >\r\n              <Trash2 size={14} className='me-50' />\r\n              <span className='align-middle'>Delete</span>\r\n            </DropdownItem>\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n      </div>\r\n    )\r\n  }\r\n]\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\data-list\\AssignParcelSidebar.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\data-list\\ParcelSidebar.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\data-list\\RiderSidebar.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\data-list\\Sidebar.js",[],"D:\\Utecho\\Scaff-cert\\src\\@core\\components\\autocomplete\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\progress\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\popovers\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\tables\\reactstrap\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\tables\\data-tables\\basic\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabPills\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\badgePills\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\breadcrumbs\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\pagination\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\navComponent\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\offcanvas\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\modal\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\divider\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\dropdowns\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\listGroup\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\collapse\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\buttons\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\carousel\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\block-ui\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\badge\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\autocomplete\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\avatar\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\alerts\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\accordion\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\analytics\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\actions\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\statistics\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\advance\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\basic\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\typography\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\icons\\index.js",["3975"],"// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { toast } from 'react-toastify'\r\nimport * as Icons from 'react-feather'\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\nimport Breadcrumbs from '@components/breadcrumbs'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, Card, Input, CardBody, InputGroup, InputGroupText, UncontrolledTooltip } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/base/pages/ui-feather.scss'\r\n\r\nconst ToastContent = ({ icon }) => (\r\n  <Fragment>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <Avatar size='sm' color='success' icon={<Icons.Check size={12} />} />\r\n        <h6 className='toast-title'>Icon Name Copied! 📋</h6>\r\n      </div>\r\n    </div>\r\n    <div className='toastify-body'>\r\n      <span role='img' aria-label='toast-text'>\r\n        {icon}\r\n      </span>\r\n    </div>\r\n  </Fragment>\r\n)\r\n\r\nconst FeatherIcons = () => {\r\n  const IconsArr = []\r\n\r\n  // ** States\r\n  const [query, setQuery] = useState([]),\r\n    [filteredArr, setFilteredArr] = useState([]),\r\n    [active, setActive] = useState(null)\r\n\r\n  for (const key in Icons) {\r\n    IconsArr.push(key)\r\n  }\r\n\r\n  const handleFilter = val => {\r\n    const arr = []\r\n    if (val.length) {\r\n      IconsArr.filter(icon => {\r\n        if (icon.toLowerCase().includes(val.toLowerCase())) {\r\n          arr.push(icon)\r\n        }\r\n      })\r\n    }\r\n    setFilteredArr([...arr])\r\n  }\r\n\r\n  const handleIconCardClick = icon => {\r\n    setActive(icon)\r\n    toast.success(<ToastContent icon={icon} />, { icon: false, hideProgressBar: true })\r\n  }\r\n\r\n  const renderIcons = () => {\r\n    const dataToRender = query.length ? filteredArr : IconsArr\r\n    if (dataToRender.length) {\r\n      return dataToRender.map(icon => {\r\n        const IconTag = Icons[icon]\r\n        return (\r\n          <Fragment key={icon}>\r\n            <CopyToClipboard text={`<${icon} />`}>\r\n              <Card\r\n                id={icon}\r\n                className={classnames('icon-card cursor-pointer text-center mb-2 mx-50', {\r\n                  active: active === icon\r\n                })}\r\n                onClick={() => handleIconCardClick(icon)}\r\n              >\r\n                <CardBody>\r\n                  <div className='icon-wrapper'>\r\n                    <IconTag />\r\n                  </div>\r\n                  <p className='icon-name text-truncate mb-0 mt-1'>{icon}</p>\r\n                </CardBody>\r\n              </Card>\r\n            </CopyToClipboard>\r\n            <UncontrolledTooltip placement='top' target={icon}>\r\n              {icon.replace(/([A-Z])/g, ' $1').trim()}\r\n            </UncontrolledTooltip>\r\n          </Fragment>\r\n        )\r\n      })\r\n    } else {\r\n      return (\r\n        <div className='d-flex align-items-center justify-content-center w-100'>\r\n          <h4 className='mb-0'>No Icons Found!</h4>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs breadCrumbTitle='Feather Icons' breadCrumbParent='UI' breadCrumbActive='Feather Icons' />\r\n      <Row>\r\n        <Col sm='12'>\r\n          <div className='icon-search-wrapper my-3 mx-auto'>\r\n            <InputGroup className='input-group-merge mb-1'>\r\n              <InputGroupText>\r\n                <Icons.Search size={14} />\r\n              </InputGroupText>\r\n              <Input\r\n                placeholder='Search icons...'\r\n                onChange={e => {\r\n                  handleFilter(e.target.value)\r\n                  setQuery(e.target.value)\r\n                }}\r\n              />\r\n            </InputGroup>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <div className='d-flex flex-wrap' id='icons-container'>\r\n        {renderIcons()}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default FeatherIcons\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\pagination\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\ratings\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\access-control\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\swiper\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\context-menu\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\react-player\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\copy-to-clipboard\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\tour\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\drag-and-drop\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\spinners\\SpinnerSourceCode.js",[],"D:\\Utecho\\Scaff-cert\\src\\utility\\hooks\\useOnClickOutside.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\progress\\ProgressMultipleStacked.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\progress\\ProgressSourceCode.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\tables\\data-tables\\basic\\TableColumnReorder.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabPills\\PillsJustified.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabPills\\TabPillsSourceCode.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\badgePills\\BadgePillSourceCode.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\badgePills\\BadgePillContextual.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\badgePills\\BadgeNotification.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\badgePills\\BadgePillLight.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\badgePills\\BadgePillLink.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\badgePills\\BadgeBlock.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\avatar\\AvatarSourceCode.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\avatar\\AvatarGroupTooltip.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\alerts\\AlertUncontrolled.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\alerts\\AlertSourceCode.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\alerts\\AlertDismissable.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\alerts\\AlertColors.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\alerts\\DefaultAlert.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\alerts\\AlertExample.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\alerts\\AlertIcon.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\alerts\\AlertTitle.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\accordion\\AccordionUncontrolled.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\avatar\\AvatarLightColors.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\accordion\\AccordionWithoutArrow.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\accordion\\AccordionControlled.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\accordion\\AccordionMargin.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\analytics\\RevenueReport.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\statistics\\ProfitLineChart.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\statistics\\OrdersBarChart.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\statistics\\QuaterlySales.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\statistics\\ActiveUsers.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\sliders\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\advance\\CardEmployeesTask.js",[],"D:\\Utecho\\Scaff-cert\\src\\@core\\components\\widgets\\stats\\StatsVertical.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\advance\\CardTransactions.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\advance\\CardBrowserState.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\typography\\DescriptionListVertical.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\typography\\DescriptionListText.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\typography\\LightBoldHeadings.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\typography\\CustomizingHeadings.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\typography\\BlockquoteStyling.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\typography\\BlockquoteDefault.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\toastify\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\sweet-alert\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\react-player\\MediaPlayerControlled.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\react-player\\MediaPlayerAudio.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\react-player\\MediaPlayerVideo.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\data-list\\store\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\context-menu\\ContextMenuDoubleClick.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\context-menu\\ContextMenuLeftClick.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\context-menu\\ContextMenuAnimation.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\context-menu\\ContextMenuBasic.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\drag-and-drop\\DndListGroup.js",["3976"],"// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport { ReactSortable } from 'react-sortablejs'\r\n\r\n// ** Images\r\nimport img1 from '@src/assets/images/portrait/small/avatar-s-12.jpg'\r\nimport img2 from '@src/assets/images/portrait/small/avatar-s-1.jpg'\r\nimport img3 from '@src/assets/images/portrait/small/avatar-s-2.jpg'\r\nimport img4 from '@src/assets/images/portrait/small/avatar-s-3.jpg'\r\nimport img5 from '@src/assets/images/portrait/small/avatar-s-4.jpg'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardBody, CardText, ListGroupItem } from 'reactstrap'\r\n\r\nconst listItems = [\r\n  {\r\n    id: '1',\r\n    img: img1,\r\n    name: 'Mary S. Navarre',\r\n    content: 'Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.'\r\n  },\r\n  {\r\n    id: '2',\r\n    img: img2,\r\n    name: 'Samuel M. Ellis',\r\n    content: 'Toffee powder marzipan tiramisu. Cake cake dessert danish.'\r\n  },\r\n  {\r\n    id: '3',\r\n    img: img3,\r\n    name: 'Sandra C. Toney',\r\n    content: 'Sugar plum fruitcake gummies marzipan liquorice tiramisu. Pastry liquorice chupa chupsake.'\r\n  },\r\n  {\r\n    id: '4',\r\n    img: img4,\r\n    name: 'Cleveland C. Goins',\r\n    content: 'Toffee powder marzipan tiramisu. Cake cake dessert danish.'\r\n  },\r\n  {\r\n    id: '5',\r\n    img: img5,\r\n    name: 'Linda M. English',\r\n    content: 'Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.'\r\n  }\r\n]\r\n\r\nconst DndListGroup = () => {\r\n  // ** State\r\n  const [listArr, setListArr] = useState(listItems)\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Basic List Group Sortable</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <CardText>\r\n          The most basic list group is simply an unordered list with list items, and the proper classes.\r\n        </CardText>\r\n        <ReactSortable tag='ul' className='list-group' list={listArr} setList={setListArr}>\r\n          {listArr.map(item => {\r\n            return (\r\n              <ListGroupItem className='draggable' key={item.name}>\r\n                <div className='d-flex align-items-center'>\r\n                  <div>\r\n                    <img\r\n                      src={item.img}\r\n                      className='rounded-circle me-2'\r\n                      alt='Generic placeholder image'\r\n                      height='50'\r\n                      width='50'\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <h5 className='mt-0'>{item.name}</h5>\r\n                    {item.content}\r\n                  </div>\r\n                </div>\r\n              </ListGroupItem>\r\n            )\r\n          })}\r\n        </ReactSortable>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default DndListGroup\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\drag-and-drop\\DndMultiple.js",["3977","3978"],"// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport { ReactSortable } from 'react-sortablejs'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col, ListGroupItem } from 'reactstrap'\r\n\r\n// ** Images\r\nimport img1 from '@src/assets/images/portrait/small/avatar-s-12.jpg'\r\nimport img2 from '@src/assets/images/portrait/small/avatar-s-1.jpg'\r\nimport img3 from '@src/assets/images/portrait/small/avatar-s-2.jpg'\r\nimport img4 from '@src/assets/images/portrait/small/avatar-s-3.jpg'\r\nimport img5 from '@src/assets/images/portrait/small/avatar-s-4.jpg'\r\nimport img6 from '@src/assets/images/portrait/small/avatar-s-5.jpg'\r\nimport img7 from '@src/assets/images/portrait/small/avatar-s-6.jpg'\r\nimport img8 from '@src/assets/images/portrait/small/avatar-s-7.jpg'\r\nimport img9 from '@src/assets/images/portrait/small/avatar-s-8.jpg'\r\nimport img10 from '@src/assets/images/portrait/small/avatar-s-9.jpg'\r\n\r\nconst array = {\r\n  list1: [\r\n    {\r\n      id: '1',\r\n      img: img1,\r\n      name: 'Mary S. Navarre',\r\n      content: 'Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.'\r\n    },\r\n    {\r\n      id: '2',\r\n      img: img2,\r\n      name: 'Samuel M. Ellis',\r\n      content: 'Toffee powder marzipan tiramisu. Cake cake dessert danish.'\r\n    },\r\n    {\r\n      id: '3',\r\n      img: img3,\r\n      name: 'Sandra C. Toney',\r\n      content: 'Sugar plum fruitcake gummies marzipan liquorice tiramisu. Pastry liquorice chupa.'\r\n    },\r\n    {\r\n      id: '4',\r\n      img: img4,\r\n      name: 'Cleveland C. Goins',\r\n      content: 'Toffee powder marzipan tiramisu. Cake cake dessert danish.'\r\n    },\r\n    {\r\n      id: '5',\r\n      img: img5,\r\n      name: 'Linda M. English',\r\n      content: 'Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.'\r\n    }\r\n  ],\r\n  list2: [\r\n    {\r\n      id: '6',\r\n      img: img6,\r\n      name: 'Alexandria I. Smelser',\r\n      content: 'Toffee powder marzipan tiramisu. Cake cake dessert danish.'\r\n    },\r\n    {\r\n      id: '7',\r\n      img: img7,\r\n      name: 'Oscar N. Pool',\r\n      content: 'Sugar plum fruitcake gummies marzipan liquorice tiramisu. Pastry liquorice chupsake.'\r\n    },\r\n    {\r\n      id: '8',\r\n      img: img8,\r\n      name: 'Kathy A. Alvarado',\r\n      content: 'Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.'\r\n    },\r\n    {\r\n      id: '9',\r\n      img: img9,\r\n      name: 'James E. White',\r\n      content: 'Toffee powder marzipan tiramisu. Cake cake dessert danish.'\r\n    },\r\n    {\r\n      id: '10',\r\n      img: img10,\r\n      name: 'Roberta R. Babin',\r\n      content: 'Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.'\r\n    }\r\n  ]\r\n}\r\n\r\nconst DndMultiple = () => {\r\n  // ** States\r\n  const [listArr1, setListArr1] = useState(array.list1)\r\n  const [listArr2, setListArr2] = useState(array.list2)\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Multiple Lists</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <CardText>\r\n          Use <code>group</code> prop to create a multiple list Drag & Drop.\r\n        </CardText>\r\n        <Row>\r\n          <Col md='6' sm='12'>\r\n            <h4 className='my-1'>People Group 1</h4>\r\n            <ReactSortable\r\n              tag='ul'\r\n              className='list-group list-group-flush sortable'\r\n              group='shared-group'\r\n              list={listArr1}\r\n              setList={setListArr1}\r\n            >\r\n              {listArr1.map(item => {\r\n                return (\r\n                  <ListGroupItem className='draggable' key={item.id}>\r\n                    <div className='d-flex align-items-center'>\r\n                      <div>\r\n                        <img\r\n                          src={item.img}\r\n                          className='rounded-circle me-2'\r\n                          alt='Generic placeholder image'\r\n                          height='50'\r\n                          width='50'\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <h5 className='mt-0'>{item.name}</h5>\r\n                        {item.content}\r\n                      </div>\r\n                    </div>\r\n                  </ListGroupItem>\r\n                )\r\n              })}\r\n            </ReactSortable>\r\n          </Col>\r\n          <Col md='6' sm='12'>\r\n            <h4 className='my-1'>People Group 2</h4>\r\n            <ReactSortable\r\n              tag='ul'\r\n              className='list-group list-group-flush sortable'\r\n              group='shared-group'\r\n              list={listArr2}\r\n              setList={setListArr2}\r\n            >\r\n              {listArr2.map(item => {\r\n                return (\r\n                  <ListGroupItem className='draggable' key={item.id}>\r\n                    <div className='d-flex align-items-center'>\r\n                      <div>\r\n                        <img\r\n                          src={item.img}\r\n                          className='rounded-circle me-2'\r\n                          alt='Generic placeholder image'\r\n                          height='50'\r\n                          width='50'\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <h5 className='mt-0'>{item.name}</h5>\r\n                        {item.content}\r\n                      </div>\r\n                    </div>\r\n                  </ListGroupItem>\r\n                )\r\n              })}\r\n            </ReactSortable>\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default DndMultiple\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\drag-and-drop\\DndMultiDrag.js",["3979","3980"],"// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport { ReactSortable } from 'react-sortablejs'\r\nimport { Sortable, MultiDrag } from 'sortablejs'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col, ListGroupItem } from 'reactstrap'\r\n\r\n// ** Images\r\nimport img1 from '@src/assets/images/portrait/small/avatar-s-12.jpg'\r\nimport img2 from '@src/assets/images/portrait/small/avatar-s-1.jpg'\r\nimport img3 from '@src/assets/images/portrait/small/avatar-s-2.jpg'\r\nimport img4 from '@src/assets/images/portrait/small/avatar-s-3.jpg'\r\nimport img5 from '@src/assets/images/portrait/small/avatar-s-4.jpg'\r\nimport img6 from '@src/assets/images/portrait/small/avatar-s-5.jpg'\r\nimport img7 from '@src/assets/images/portrait/small/avatar-s-6.jpg'\r\nimport img8 from '@src/assets/images/portrait/small/avatar-s-7.jpg'\r\nimport img9 from '@src/assets/images/portrait/small/avatar-s-8.jpg'\r\nimport img10 from '@src/assets/images/portrait/small/avatar-s-9.jpg'\r\n\r\nconst array = {\r\n  list1: [\r\n    {\r\n      id: '1',\r\n      img: img1,\r\n      name: 'Mary S. Navarre',\r\n      content: 'Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.'\r\n    },\r\n    {\r\n      id: '2',\r\n      img: img2,\r\n      name: 'Samuel M. Ellis',\r\n      content: 'Toffee powder marzipan tiramisu. Cake cake dessert danish.'\r\n    },\r\n    {\r\n      id: '3',\r\n      img: img3,\r\n      name: 'Sandra C. Toney',\r\n      content: 'Sugar plum fruitcake gummies marzipan liquorice tiramisu. Pastry liquorice chupa.'\r\n    },\r\n    {\r\n      id: '4',\r\n      img: img4,\r\n      name: 'Cleveland C. Goins',\r\n      content: 'Toffee powder marzipan tiramisu. Cake cake dessert danish.'\r\n    },\r\n    {\r\n      id: '5',\r\n      img: img5,\r\n      name: 'Linda M. English',\r\n      content: 'Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.'\r\n    }\r\n  ],\r\n  list2: [\r\n    {\r\n      id: '6',\r\n      img: img6,\r\n      name: 'Alexandria I. Smelser',\r\n      content: 'Toffee powder marzipan tiramisu. Cake cake dessert danish.'\r\n    },\r\n    {\r\n      id: '7',\r\n      img: img7,\r\n      name: 'Oscar N. Pool',\r\n      content: 'Sugar plum fruitcake gummies marzipan liquorice tiramisu. Pastry liquorice chupsake.'\r\n    },\r\n    {\r\n      id: '8',\r\n      img: img8,\r\n      name: 'Kathy A. Alvarado',\r\n      content: 'Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.'\r\n    },\r\n    {\r\n      id: '9',\r\n      img: img9,\r\n      name: 'James E. White',\r\n      content: 'Toffee powder marzipan tiramisu. Cake cake dessert danish.'\r\n    },\r\n    {\r\n      id: '10',\r\n      img: img10,\r\n      name: 'Roberta R. Babin',\r\n      content: 'Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.'\r\n    }\r\n  ]\r\n}\r\n\r\nSortable.mount(new MultiDrag())\r\n\r\nconst DndMultiDrag = () => {\r\n  // ** States\r\n  const [listArr1, setListArr1] = useState(array.list1)\r\n  const [listArr2, setListArr2] = useState(array.list2)\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Multiple Drag</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <CardText>\r\n          Use <code>MultiDrag</code> prop to create a multiple drag list.\r\n        </CardText>\r\n        <CardText>\r\n          Use <code>CTRL</code> key to select multiple items.\r\n        </CardText>\r\n        <Row>\r\n          <Col md='6' sm='12'>\r\n            <h4 className='my-1'>People Group 1</h4>\r\n            <ReactSortable\r\n              tag='ul'\r\n              multiDrag\r\n              list={listArr1}\r\n              setList={setListArr1}\r\n              group='shared-multi-drag-group'\r\n              className='list-group list-group-flush sortable'\r\n            >\r\n              {listArr1.map(item => {\r\n                return (\r\n                  <ListGroupItem className='draggable' key={item.id}>\r\n                    <div className='d-flex align-items-center'>\r\n                      <div>\r\n                        <img\r\n                          width='50'\r\n                          height='50'\r\n                          src={item.img}\r\n                          className='rounded-circle me-2'\r\n                          alt='Generic placeholder image'\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <h5 className='mt-0'>{item.name}</h5>\r\n                        {item.content}\r\n                      </div>\r\n                    </div>\r\n                  </ListGroupItem>\r\n                )\r\n              })}\r\n            </ReactSortable>\r\n          </Col>\r\n          <Col md='6' sm='12'>\r\n            <h4 className='my-1'>People Group 2</h4>\r\n            <ReactSortable\r\n              tag='ul'\r\n              list={listArr2}\r\n              setList={setListArr2}\r\n              group='shared-multi-drag-group'\r\n              className='list-group list-group-flush sortable'\r\n            >\r\n              {listArr2.map(item => {\r\n                return (\r\n                  <ListGroupItem className='draggable' key={item.id}>\r\n                    <div className='d-flex align-items-center'>\r\n                      <div>\r\n                        <img\r\n                          width='50'\r\n                          height='50'\r\n                          src={item.img}\r\n                          className='rounded-circle me-2'\r\n                          alt='Generic placeholder image'\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <h5 className='mt-0'>{item.name}</h5>\r\n                        {item.content}\r\n                      </div>\r\n                    </div>\r\n                  </ListGroupItem>\r\n                )\r\n              })}\r\n            </ReactSortable>\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default DndMultiDrag\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\drag-and-drop\\DndHandle.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\drag-and-drop\\DndCards.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\drag-and-drop\\DndClone.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\context-menu\\ContextSubmenu.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\swiper\\CenteredSlidesStyle2.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\swiper\\CenteredSlidesStyle1.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\swiper\\SwiperMultiSlides.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\swiper\\SwiperNavigation.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\swiper\\SwiperPagination.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\swiper\\SwiperResponsive.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\swiper\\SwiperCoverflow.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\swiper\\SwiperDefault.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\swiper\\SwiperProgress.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\swiper\\SwiperAutoplay.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\swiper\\SwiperVirtual.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\swiper\\SwiperGallery.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\swiper\\SwiperFade.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\swiper\\SwiperRows.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\swiper\\SwiperLazyload.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\swiper\\3DEffect.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\ratings\\RatingFractional.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\ratings\\RatingControlled.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\ratings\\RatingCustomSvg.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\ratings\\RatingReadOnly.js",[],"D:\\Utecho\\Scaff-cert\\src\\@core\\components\\card-actions\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\ratings\\RatingNumbers.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\ratings\\RatingEvents.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\ratings\\RatingSizes.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\ratings\\RatingBasic.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\pagination\\PaginationIconText.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\pagination\\PaginationPositions.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\pagination\\SepratedPagination.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\pagination\\PaginationSuccess.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\pagination\\PaginationDanger.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\pagination\\PaginationWarning.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\pagination\\PaginationSizes.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\pagination\\BasicPagination.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\pagination\\PaginationInfo.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\pagination\\PaginationIcon.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\typography\\BlockquotesAvatar.js",["3981","3982"],"// ** Images\r\nimport img1 from '@src/assets/images/portrait/small/avatar-s-5.jpg'\r\nimport img2 from '@src/assets/images/portrait/small/avatar-s-3.jpg'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardText, CardBody } from 'reactstrap'\r\n\r\nconst BlockquotesAvatar = () => {\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Blockquotes with avatar</CardTitle>\r\n      </CardHeader>\r\n\r\n      <CardBody>\r\n        <CardText>\r\n          You can create a blockquot with avatar using <code>media</code> component.\r\n        </CardText>\r\n        <blockquote className='blockquote ps-1 border-start-primary border-start-3'>\r\n          <div className='d-flex'>\r\n            <div className='me-1'>\r\n              <img src={img1} alt='Generic placeholder image' height='64' width='64' />\r\n            </div>\r\n            <div>Sometimes life is going to hit you in the head with a brick. Don't lose faith.</div>\r\n          </div>\r\n          <footer className='blockquote-footer text-end'>\r\n            Steve Jobs\r\n            <cite title='Source Title'>Entrepreneur</cite>\r\n          </footer>\r\n        </blockquote>\r\n        <CardText className='mt-2'>Blockquotes with avatar rounded image example</CardText>\r\n        <blockquote className='blockquote'>\r\n          <div className='d-flex'>\r\n            <div className='me-1'>\r\n              <img className='rounded-circle' src={img2} alt='Generic placeholder image' height='64' width='64' />\r\n            </div>\r\n            <div>Sometimes life is going to hit you in the head with a brick. Don't lose faith.</div>\r\n          </div>\r\n          <footer className='blockquote-footer text-end'>\r\n            Steve Jobs\r\n            <cite title='Source Title'>Entrepreneur</cite>\r\n          </footer>\r\n        </blockquote>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\nexport default BlockquotesAvatar\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\typography\\DisplayHeadings.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\typography\\DescriptionList.js",[],"D:\\Utecho\\Scaff-cert\\src\\@core\\components\\widgets\\stats\\TinyChartStats.js",[],"D:\\Utecho\\Scaff-cert\\src\\@core\\components\\widgets\\stats\\StatsWithLineChart.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\typography\\HeadingColors.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\typography\\ListUnordered.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\typography\\HTMLHeadings.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\sweet-alert\\SweetAlertAnimations.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\sweet-alert\\SweetAlertPositions.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\sweet-alert\\SweetAlertCallback.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\sweet-alert\\SweetAlertBasic.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\sweet-alert\\SweetAlertOptions.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\sweet-alert\\SweetAlertTypes.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\toastify\\ToastrAnimations.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\toastify\\ToastPositions.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\toastify\\ToastifyOptions.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\sliders\\SliderVerticalTooltips.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\toastify\\ToastTypes.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\sliders\\SliderVerticalLimit.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\sliders\\SliderConnectUpper.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\sliders\\SlidersBootstrap.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\sliders\\SliderWithInput.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\sliders\\SliderScalePips.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\ratings\\RatingsHover.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\sliders\\SliderValues.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\sliders\\SliderBehaviour.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\sliders\\SliderColors.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\typography\\ListUnstyled.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\extensions\\sliders\\SliderVertical.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\typography\\NamingSource.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\typography\\ListOrdered.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\typography\\ListInline.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\typography\\ListIcons.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\basic\\CardStyleVariation.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\basic\\CardContentTypes.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\basic\\CardHeaderFooter.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\basic\\CardTextAlignment.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\basic\\CardNavigation.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\basic\\CardLayout.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\advance\\CardUserTimeline.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\basic\\CardImages.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\basic\\CardTitles.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\advance\\CardBusiness.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\advance\\CardProfile.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\advance\\CardPayment.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\advance\\CardMeetup.js",["3983"],"// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\nimport AvatarGroup from '@components/avatar-group'\r\n\r\n// ** Icons Imports\r\nimport { Calendar, MapPin } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardTitle, CardBody, CardText } from 'reactstrap'\r\n\r\n// ** Images\r\nimport illustration from '@src/assets/images/illustration/email.svg'\r\n\r\nconst CardMeetup = () => {\r\n  const data = [\r\n    {\r\n      title: 'Billy Hopkins',\r\n      placement: 'bottom',\r\n      img: require('@src/assets/images/portrait/small/avatar-s-9.jpg').default,\r\n      imgHeight: 33,\r\n      imgWidth: 33\r\n    },\r\n    {\r\n      title: 'Amy Carson',\r\n      placement: 'bottom',\r\n      img: require('@src/assets/images/portrait/small/avatar-s-6.jpg').default,\r\n      imgHeight: 33,\r\n      imgWidth: 33\r\n    },\r\n    {\r\n      title: 'Brandon Miles',\r\n      placement: 'bottom',\r\n      img: require('@src/assets/images/portrait/small/avatar-s-8.jpg').default,\r\n      imgHeight: 33,\r\n      imgWidth: 33\r\n    },\r\n    {\r\n      title: 'Daisy Weber',\r\n      placement: 'bottom',\r\n      img: require('@src/assets/images/portrait/small/avatar-s-7.jpg').default,\r\n      imgHeight: 33,\r\n      imgWidth: 33\r\n    },\r\n    {\r\n      title: 'Jenny Looper',\r\n      placement: 'bottom',\r\n      img: require('@src/assets/images/portrait/small/avatar-s-20.jpg').default,\r\n      imgHeight: 33,\r\n      imgWidth: 33\r\n    },\r\n    {\r\n      meta: '+42'\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <Card className='card-developer-meetup'>\r\n      <div className='meetup-img-wrapper rounded-top text-center'>\r\n        <img src={illustration} height='170' />\r\n      </div>\r\n      <CardBody>\r\n        <div className='meetup-header d-flex align-items-center'>\r\n          <div className='meetup-day'>\r\n            <h6 className='mb-0'>THU</h6>\r\n            <h3 className='mb-0'>24</h3>\r\n          </div>\r\n          <div className='my-auto'>\r\n            <CardTitle tag='h4' className='mb-25'>\r\n              Developer Meetup\r\n            </CardTitle>\r\n            <CardText className='mb-0'>Meet world popular developers</CardText>\r\n          </div>\r\n        </div>\r\n        <div className='d-flex'>\r\n          <Avatar color='light-primary' className='rounded me-1' icon={<Calendar size={18} />} />\r\n          <div>\r\n            <h6 className='mb-0'>Sat, May 25, 2020</h6>\r\n            <small>10:AM to 6:PM</small>\r\n          </div>\r\n        </div>\r\n        <div className='d-flex mt-2'>\r\n          <Avatar color='light-primary' className='rounded me-1' icon={<MapPin size={18} />} />\r\n          <div>\r\n            <h6 className='mb-0'>Central Park</h6>\r\n            <small>Manhattan, New york City</small>\r\n          </div>\r\n        </div>\r\n        <AvatarGroup data={data} />\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CardMeetup\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\advance\\CardMedal.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\advance\\CardChat.js",["3984"],"// ** React Imports\r\nimport { useState, useEffect } from 'react'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { MoreVertical, Send, Image } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, Form, Label, InputGroup, Input, InputGroupText, Button } from 'reactstrap'\r\n\r\n// ** Images\r\nimport profilePic from '@src/assets/images/portrait/small/avatar-s-11.jpg'\r\n\r\n// ** Styles\r\nimport '@styles/base/pages/app-chat-list.scss'\r\n\r\nconst data = {\r\n  chat: {\r\n    id: 2,\r\n    userId: 1,\r\n    unseenMsgs: 0,\r\n    chat: [\r\n      {\r\n        message: \"How can we help? We're here for you!\",\r\n        time: 'Mon Dec 10 2018 07:45:00 GMT+0000 (GMT)',\r\n        senderId: 11\r\n      },\r\n      {\r\n        message: 'Hey John, I am looking for the best admin template. Could you please help me to find it out?',\r\n        time: 'Mon Dec 10 2018 07:45:23 GMT+0000 (GMT)',\r\n        senderId: 1\r\n      },\r\n      {\r\n        message: 'It should be Bootstrap 5 compatible.',\r\n        time: 'Mon Dec 10 2018 07:45:55 GMT+0000 (GMT)',\r\n        senderId: 1\r\n      },\r\n      { message: 'Absolutely!', time: 'Mon Dec 10 2018 07:46:00 GMT+0000 (GMT)', senderId: 11 },\r\n      {\r\n        message: 'Modern admin is the responsive bootstrap 5 admin template.!',\r\n        time: 'Mon Dec 10 2018 07:46:05 GMT+0000 (GMT)',\r\n        senderId: 11\r\n      },\r\n      { message: 'Looks clean and fresh UI.', time: 'Mon Dec 10 2018 07:46:23 GMT+0000 (GMT)', senderId: 1 },\r\n      { message: \"It's perfect for my next project.\", time: 'Mon Dec 10 2018 07:46:33 GMT+0000 (GMT)', senderId: 1 },\r\n      { message: 'How can I purchase it?', time: 'Mon Dec 10 2018 07:46:43 GMT+0000 (GMT)', senderId: 1 },\r\n      { message: 'Thanks, from ThemeForest.', time: 'Mon Dec 10 2018 07:46:53 GMT+0000 (GMT)', senderId: 11 },\r\n      { message: 'I will purchase it for sure. 👍', time: '2020-12-08T13:52:38.013Z', senderId: 1 }\r\n    ]\r\n  },\r\n  contact: {\r\n    id: 1,\r\n    fullName: 'Felecia Rower',\r\n    avatar: require('@src/assets/images/portrait/small/avatar-s-20.jpg').default,\r\n    status: 'away'\r\n  }\r\n}\r\n\r\nconst CardChat = () => {\r\n  // ** States\r\n  const [msg, setMsg] = useState('')\r\n  const [chatRef, setChatRef] = useState(null)\r\n  const [chatData, setChatData] = useState(data)\r\n\r\n  //** Formats chat data based on sender\r\n  const formattedChatData = () => {\r\n    let chatLog = []\r\n    if (chatData) {\r\n      chatLog = chatData.chat.chat\r\n    }\r\n\r\n    const formattedChatLog = []\r\n    let chatMessageSenderId = chatLog[0] ? chatLog[0].senderId : undefined\r\n    let msgGroup = {\r\n      senderId: chatMessageSenderId,\r\n      messages: []\r\n    }\r\n    chatLog.forEach((msg, index) => {\r\n      if (chatMessageSenderId === msg.senderId) {\r\n        msgGroup.messages.push({\r\n          msg: msg.message,\r\n          time: msg.time\r\n        })\r\n      } else {\r\n        chatMessageSenderId = msg.senderId\r\n        formattedChatLog.push(msgGroup)\r\n        msgGroup = {\r\n          senderId: msg.senderId,\r\n          messages: [\r\n            {\r\n              msg: msg.message,\r\n              time: msg.time\r\n            }\r\n          ]\r\n        }\r\n      }\r\n      if (index === chatLog.length - 1) formattedChatLog.push(msgGroup)\r\n    })\r\n    return formattedChatLog\r\n  }\r\n\r\n  //** Renders user chat\r\n  const renderChats = () => {\r\n    return formattedChatData().map((item, index) => {\r\n      return (\r\n        <div\r\n          key={index}\r\n          className={classnames('chat', {\r\n            'chat-left': item.senderId !== 11\r\n          })}\r\n        >\r\n          <div className='chat-avatar'>\r\n            <Avatar\r\n              className='box-shadow-1 cursor-pointer'\r\n              img={item.senderId === 11 ? profilePic : chatData.contact.avatar}\r\n            />\r\n          </div>\r\n\r\n          <div className='chat-body'>\r\n            {item.messages.map(chat => (\r\n              <div key={chat.msg} className='chat-content'>\r\n                <p>{chat.msg}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  //** Scroll to chat bottom\r\n  const scrollToBottom = () => {\r\n    chatRef.scrollTop = Number.MAX_SAFE_INTEGER\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (chatRef !== null) {\r\n      scrollToBottom()\r\n    }\r\n  }, [chatRef, chatData.chat.chat.length])\r\n\r\n  const handleSendMsg = e => {\r\n    e.preventDefault()\r\n    if (msg.trim().length) {\r\n      const newMsg = chatData\r\n\r\n      newMsg.chat.chat.push({\r\n        message: msg,\r\n        time: new Date(),\r\n        senderId: 11\r\n      })\r\n\r\n      setChatData(newMsg)\r\n      setMsg('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card className='chat-widget'>\r\n      <CardHeader>\r\n        <div className='d-flex align-items-center'>\r\n          <Avatar status='online' className='me-2' img={chatData.contact.avatar} imgHeight='34' imgWidth='34' />\r\n          <h5 className='mb-0'>Carrie Hawkins</h5>\r\n        </div>\r\n        <MoreVertical size={18} className='cursor-pointer' />\r\n      </CardHeader>\r\n      <div className='chat-app-window'>\r\n        <PerfectScrollbar\r\n          containerRef={el => setChatRef(el)}\r\n          className='user-chats scroll-area'\r\n          options={{ wheelPropagation: false }}\r\n        >\r\n          <div className='chats'>{renderChats()}</div>\r\n        </PerfectScrollbar>\r\n        <Form className='chat-app-form' onSubmit={e => handleSendMsg(e)}>\r\n          <InputGroup className='input-group-merge me-1 form-send-message'>\r\n            <InputGroupText>\r\n              <Label className='attachment-icon mb-0' for='attach-doc'>\r\n                <Image className='cursor-pointer text-secondary' size={14} />\r\n                <input type='file' id='attach-doc' hidden />\r\n              </Label>\r\n            </InputGroupText>\r\n            <Input\r\n              value={msg}\r\n              className='border-0'\r\n              onChange={e => setMsg(e.target.value)}\r\n              placeholder='Type your message'\r\n            />\r\n          </InputGroup>\r\n          <Button className='send' color='primary'>\r\n            <Send size={14} className='d-lg-none' />\r\n            <span className='d-none d-lg-block'>Send</span>\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CardChat\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\advance\\CardJob.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\statistics\\StatsCard.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\analytics\\Revenue.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\statistics\\SiteTraffic.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\statistics\\Newsletter.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\analytics\\GoalOverview.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\analytics\\Earnings.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\accordion\\AccordionBorder.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\analytics\\Customers.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\avatar\\AvatarColors.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\accordion\\AccordionHover.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\accordion\\AccordionSourceCode.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\avatar\\AvatarStatus.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\avatar\\AvatarGroup.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\avatar\\AvatarInitials.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\autocomplete\\AutoCompleteSuggestions.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\avatar\\AvatarSizes.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\autocomplete\\AutoCompleteLimit.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\autocomplete\\AutoCompleteSourceCode.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\avatar\\AvatarIcons.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\autocomplete\\AutoCompleteSections.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\autocomplete\\AutoCompleteRender.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\autocomplete\\AutoCompleteBasic.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\autocomplete\\AutoCompleteAjax.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\badge\\BadgeSourceCode.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\badge\\BadgeContextual.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\badge\\BadgeLight.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\badge\\BadgeIcons.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\badge\\BadgeBlock.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\badge\\BadgeGlow.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\badge\\BadgeLink.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\block-ui\\CustomSpinner.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\block-ui\\CustomColor.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\block-ui\\MessageBlocking.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\block-ui\\BasicBlocking.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\carousel\\CarouselSourceCode.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\carousel\\CarouselPause.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\carousel\\CarouselKeyboard.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\carousel\\CarouselInterval.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\carousel\\CarouselUncontrolled.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\carousel\\CarouselBasic.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\carousel\\CarouselCaptions.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\buttons\\ButtonsSourceCode.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\buttons\\ButtonCheckboxRadio.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\buttons\\ButtonsIconOnly.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\buttons\\ButtonsRelief.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\buttons\\ButtonsGradient.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\buttons\\ButtonsOutline.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\buttons\\ButtonsFilled.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\buttons\\ButtonGroup.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\buttons\\ButtonsRound.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\buttons\\ButtonSizes.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\buttons\\ButtonBlock.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\buttons\\ButtonTags.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\buttons\\ButtonsIcon.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\collapse\\CollapseSourceCode.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\buttons\\ButtonsFlat.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\collapse\\CollapseMultipleTargets.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\collapse\\CollapseBasic.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\listGroup\\ListGroupSourceCode.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\collapse\\CollapseHorizontal.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\listGroup\\ListGroupNavigation.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\listGroup\\ListGroupHorizontal.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\listGroup\\ListGroupContextual.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\listGroup\\ListGroupDisabled.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\listGroup\\ListGroupNumbered.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\listGroup\\ListGroupBadges.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\listGroup\\ListGroupSimple.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\listGroup\\ListGroupCustom.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\listGroup\\ListGroupIcons.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\listGroup\\ListGroupFlush.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\listGroup\\ListGroupTag.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\dropdowns\\DropdownsSourceCode.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\dropdowns\\DropdownUncontrolled.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\basic\\GridCards.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\dropdowns\\DropdownControlled.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\dropdowns\\DropdownDirections.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\cards\\basic\\CardGroup.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\dropdowns\\DropdownGradient.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\dropdowns\\DropdownSplit.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\dropdowns\\DropdownOutline.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\dropdowns\\DropdownVariations.js",["3985","3986"],"// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Form,\r\n  Label,\r\n  Input,\r\n  Button,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  ButtonDropdown,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\n// ** Icons Imports\r\nimport { Wifi, WifiOff, PhoneOff, BellOff, Bell, VolumeX, Volume2 } from 'react-feather'\r\n\r\nconst icons = [\r\n  {\r\n    id: 1,\r\n    item: <WifiOff size={15} />\r\n  },\r\n  {\r\n    id: 2,\r\n    item: <VolumeX size={15} />\r\n  },\r\n  {\r\n    id: 3,\r\n    item: <Volume2 size={15} />\r\n  },\r\n  {\r\n    id: 4,\r\n    item: <Bell size={15} />\r\n  },\r\n  {\r\n    id: 5,\r\n    item: <BellOff size={15} />\r\n  },\r\n  {\r\n    id: 6,\r\n    item: <PhoneOff size={15} />\r\n  }\r\n]\r\n\r\nconst DropdownVariations = () => {\r\n  // ** States\r\n  const [formDropdown, setFormDropdown] = useState(false)\r\n  const [activeIcon, setActiveIcon] = useState(<Wifi size={15} />)\r\n\r\n  const toggleIcon = icon => setActiveIcon(icon)\r\n  const toggleFormDropdown = () => setFormDropdown(!formDropdown)\r\n\r\n  const renderIconItem = icons.map(icon => {\r\n    return (\r\n      <DropdownItem tag='span' key={icon.id} onClick={() => toggleIcon(icon.item)}>\r\n        {icon.item}\r\n      </DropdownItem>\r\n    )\r\n  })\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <UncontrolledButtonDropdown direction='up'>\r\n        <DropdownToggle color='primary' caret>\r\n          Group\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem href='/' tag='a' header onClick={e => e.preventDefault()}>\r\n            Group 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\r\n            Option 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\r\n            Option 2\r\n          </DropdownItem>\r\n          <DropdownItem divider />\r\n          <DropdownItem href='/' tag='a' header onClick={e => e.preventDefault()}>\r\n            Group 2\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\r\n            Option 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\r\n            Option 2\r\n          </DropdownItem>\r\n          <DropdownItem divider />\r\n          <DropdownItem href='/' tag='a' header onClick={e => e.preventDefault()}>\r\n            Group 3\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\r\n            Option 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\r\n            Option 2\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledButtonDropdown>\r\n      <UncontrolledButtonDropdown className='dropdown-icon-wrapper' direction='up'>\r\n        <Button color='primary'>Icons</Button>\r\n        <DropdownToggle className='dropdown-toggle-split' color='primary' caret>\r\n          {activeIcon}\r\n        </DropdownToggle>\r\n        <DropdownMenu tag='div' end>\r\n          {renderIconItem}\r\n        </DropdownMenu>\r\n      </UncontrolledButtonDropdown>\r\n\r\n      <ButtonDropdown isOpen={formDropdown} toggle={toggleFormDropdown} direction='up'>\r\n        <DropdownToggle color='primary' caret>\r\n          Form\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <Form\r\n            className='px-2 py-2'\r\n            onSubmit={e => {\r\n              e.preventDefault()\r\n              setFormDropdown(false)\r\n            }}\r\n          >\r\n            <div className='mb-2'>\r\n              <Label className='form-label' for='ddEmail'>\r\n                Email\r\n              </Label>\r\n              <Input type='email' placeholder='Email' name='ddemail' id='ddEmail' />\r\n            </div>\r\n            <div className='mb-2'>\r\n              <Label className='form-label' for='ddPassword'>\r\n                Password\r\n              </Label>\r\n              <Input type='password' placeholder='Password' name='ddPassword' id='ddPassword' />\r\n            </div>\r\n            <div className='form-check mb-2'>\r\n              <Input type='checkbox' name='ddCheck' id='ddCheck' />\r\n              <Label className='form-check-label' for='ddCheck'>\r\n                Remember Me\r\n              </Label>\r\n            </div>\r\n            <Button color='primary' type='submit'>\r\n              Sign In\r\n            </Button>\r\n          </Form>\r\n          <DropdownItem divider />\r\n          <DropdownItem\r\n            href='/'\r\n            tag='a'\r\n            href='#'\r\n            onClick={e => {\r\n              e.preventDefault()\r\n              setFormDropdown(false)\r\n            }}\r\n          >\r\n            New around here? Sign up\r\n          </DropdownItem>\r\n          <DropdownItem\r\n            href='/'\r\n            tag='a'\r\n            href='#'\r\n            onClick={e => {\r\n              e.preventDefault()\r\n              setFormDropdown(false)\r\n            }}\r\n          >\r\n            Forgot password?\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </ButtonDropdown>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DropdownVariations\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\components\\dropdowns\\DropdownBasic.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\dropdowns\\DropdownSizes.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\divider\\DividerPosition.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\dropdowns\\DropdownFlat.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\divider\\DividerDefault.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\divider\\DividerSourceCode.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\divider\\DividerColors.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\divider\\DividerIcons.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\divider\\DividerText.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\divider\\DividerStyle.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\modal\\ModalSourceCode.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\modal\\ModalFormAndScroll.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\modal\\ModalEvents.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\modal\\ModalUnmount.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\modal\\ModalThemes.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\modal\\ModalSizes.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\modal\\ModalBasic.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\offcanvas\\OffCanvasPlacement.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\offcanvas\\OffCanvasOptions.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\offcanvas\\OffCanvasSourceCode.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\navComponent\\NavComponentSourceCode.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\navComponent\\NavVerticalBorder.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\navComponent\\NavSquareBorder.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\navComponent\\NavVertical.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\navComponent\\NavCenter.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\navComponent\\NavDivider.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\navComponent\\NavBorder.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\navComponent\\NavBasic.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\navComponent\\NavEnd.js",[],"D:\\Utecho\\Scaff-cert\\src\\@core\\components\\spinner\\Loading-spinner.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\pagination\\PaginationSourceCode.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\pagination\\PaginationPositions.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\pagination\\PaginationIconsAndText.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\pagination\\PaginationSeparated.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\pagination\\PaginationWarning.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\pagination\\PaginationSuccess.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\pagination\\PaginationDanger.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\pagination\\PaginationSizes.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\pagination\\PaginationBasic.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\pagination\\PaginationIcons.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\pagination\\PaginationInfo.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabPills\\PillsFilled.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\badgePills\\BadgePillGlow.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabPills\\PillsVertical.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabPills\\PillsBasic.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabPills\\PillThemes.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabPills\\PillsCentered.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\breadcrumbs\\BreadCrumbsSourceCode.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\breadcrumbs\\BreadcrumbAlignment.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\tabPills\\PillsEnd.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\breadcrumbs\\BreadcrumbStyles.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\tables\\data-tables\\basic\\TableMultilingual.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\tables\\data-tables\\basic\\TableWithButtons.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\tables\\data-tables\\basic\\TableExpandable.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\tables\\data-tables\\basic\\TableZeroConfig.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\tables\\reactstrap\\TableStripedDark.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\tables\\reactstrap\\TableSourceCode.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\tables\\reactstrap\\TableTheadLight.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\tables\\reactstrap\\TableResponsive.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\tables\\reactstrap\\TableContextual.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\tables\\reactstrap\\TableBorderless.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\tables\\reactstrap\\TableBordered.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\tables\\reactstrap\\TableTheadDark.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\tables\\reactstrap\\TableStriped.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\tables\\reactstrap\\TableSmall.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\tables\\reactstrap\\TableHover.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\tables\\reactstrap\\TableBasic.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\tables\\reactstrap\\TableDark.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\popovers\\PopoverSourceCode.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\popovers\\PopoverUncontrolled.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\popovers\\PopoverPositions.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\progress\\ProgressAnimated.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\popovers\\PopoverControlled.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\popovers\\PopoverTriggers.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\progress\\ProgressLabeled.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\progress\\ProgressStriped.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\progress\\ProgressColored.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\progress\\ProgressBasic.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\spinners\\SpinnerColors.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\spinners\\SpinnerButtons.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\spinners\\SpinnerGrowingColored.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\spinners\\SpinnerSizes.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\spinners\\SpinnerTextAlignment.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\spinners\\SpinnerBorder.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\spinners\\SpinnerFloat.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\components\\spinners\\SpinnerFlex.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\page-layouts\\BoxedLayout.js",["3987"],"// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Alert } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport Breadcrumbs from '@components/breadcrumbs'\r\nimport Ecommerce from '../../dashboard/ecommerce'\r\n\r\nconst BoxedLayout = () => {\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs breadCrumbTitle='Layout Boxed' breadCrumbParent='Layouts' breadCrumbActive='Layout Boxed' />\r\n      <Alert color='primary'>\r\n        <div className='alert-body'>\r\n          <span className='fw-bold'>Info: </span>\r\n          <span>\r\n            Please check the{' '}\r\n            <a\r\n              href='https://pixinvent.com/demo/vuexy-react-admin-dashboard-template/documentation/development/page-layouts'\r\n              target='_blank'\r\n            >\r\n              Layout boxed documentation\r\n            </a>{' '}\r\n            for more details.\r\n          </span>\r\n        </div>\r\n      </Alert>\r\n      <Ecommerce />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default BoxedLayout\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\page-layouts\\WithoutMenu.js",["3988"],"// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Alert } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport Breadcrumbs from '@components/breadcrumbs'\r\nimport Ecommerce from '../../dashboard/ecommerce'\r\n\r\nconst WithoutMenu = () => {\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs\r\n        breadCrumbParent='Layouts'\r\n        breadCrumbTitle='Layout without menu'\r\n        breadCrumbActive='Layout without menu'\r\n      />\r\n      <Alert color='primary'>\r\n        <div className='alert-body'>\r\n          <span className='fw-bold'>Info: </span>\r\n          <span>\r\n            Please check the{' '}\r\n            <a\r\n              href='https://pixinvent.com/demo/vuexy-react-admin-dashboard-template/documentation/docs/development/page-layouts'\r\n              target='_blank'\r\n            >\r\n              Layout without menu documentation\r\n            </a>{' '}\r\n            for more details.\r\n          </span>\r\n        </div>\r\n      </Alert>\r\n      <Ecommerce />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default WithoutMenu\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\page-layouts\\LayoutEmpty.js",["3989"],"// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Custom Components\r\nimport Breadcrumbs from '@components/breadcrumbs'\r\n\r\n// ** Reactstrap Imports\r\nimport { Alert } from 'reactstrap'\r\n\r\nconst LayoutEmpty = () => {\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs breadCrumbTitle='Layout Empty' breadCrumbParent='Layouts' breadCrumbActive='Layout Empty' />\r\n      <Alert color='primary'>\r\n        <div className='alert-body'>\r\n          <span className='fw-bold'>Info: </span>\r\n          <span>\r\n            This layout can be useful for getting started with empty content section. Please check the{' '}\r\n            <a\r\n              href='https://pixinvent.com/demo/vuexy-react-admin-dashboard-template/documentation/docs/development/page-layouts'\r\n              target='_blank'\r\n            >\r\n              Layout empty documentation\r\n            </a>{' '}\r\n            for more details.\r\n          </span>\r\n        </div>\r\n      </Alert>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default LayoutEmpty\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\ui-elements\\page-layouts\\CollapsedMenu.js",["3990"],"// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Alert } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport Breadcrumbs from '@components/breadcrumbs'\r\nimport Ecommerce from '../../dashboard/ecommerce'\r\n\r\nconst CollapsedMenu = () => {\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs\r\n        breadCrumbParent='Layouts'\r\n        breadCrumbActive='Collapsed menu'\r\n        breadCrumbTitle='Layout collapsed menu'\r\n      />\r\n      <Alert color='primary'>\r\n        <div className='alert-body'>\r\n          <span className='fw-bold'>Info: </span>\r\n          <span>\r\n            Use this layout to set menu (navigation) default collapsed. Please check{' '}\r\n            <a\r\n              href='https://pixinvent.com/demo/vuexy-react-admin-dashboard-template/documentation/docs/development/page-layouts'\r\n              target='_blank'\r\n            >\r\n              the Layout collapsed menu documentation\r\n            </a>{' '}\r\n            for more details.\r\n          </span>\r\n        </div>\r\n      </Alert>\r\n      <Ecommerce />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default CollapsedMenu\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\tables\\data-tables\\basic\\AddNewModal.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\charts\\chart-js\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\charts\\apex\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\charts\\chart-js\\ChartjsRadarChart.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\charts\\chart-js\\ChartjsBubbleChart.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\charts\\chart-js\\ChartjsAreaChart.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\charts\\chart-js\\ChartjsDoughnutChart.js",["3991","3992","3993","3994","3995","3996"],"// ** Third Party Components\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport { Monitor, Tablet, ArrowDown, ArrowUp } from \"react-feather\";\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\n\r\nconst ChartjsRadarChart = ({\r\n  tooltipShadow,\r\n  successColorShade,\r\n  warningLightColor,\r\n  primary,\r\n}) => {\r\n  // ** Chart Options\r\n  const options = {\r\n    maintainAspectRatio: false,\r\n    cutout: 60,\r\n    animation: {\r\n      resize: {\r\n        duration: 500,\r\n      },\r\n    },\r\n    plugins: {\r\n      legend: { display: false },\r\n      tooltips: {\r\n        callbacks: {\r\n          label(context) {\r\n            console.log(context);\r\n            const label = context.label || \"\";\r\n            if (label) {\r\n              label += \"Ronak: \";\r\n            }\r\n            if (context.parsed.y !== null) {\r\n              label += new Intl.NumberFormat(\"en-US\", {\r\n                style: \"currency\",\r\n                currency: \"USD\",\r\n              }).format(context.parsed.y);\r\n            }\r\n            return label;\r\n          },\r\n        },\r\n        // Updated default tooltip UI\r\n        shadowOffsetX: 1,\r\n        shadowOffsetY: 1,\r\n        shadowBlur: 8,\r\n        shadowColor: tooltipShadow,\r\n        backgroundColor: \"#fff\",\r\n        titleFontColor: \"#000\",\r\n        bodyFontColor: \"#000\",\r\n      },\r\n    },\r\n  };\r\n\r\n  // ** Chart data\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        labels: [\"Tablet\", \"Mobile\", \"Desktop\"],\r\n        data: [10, 10, 80],\r\n        backgroundColor: [\"#58D0FF\", \"#FF6161\", \"#2873B9\"],\r\n        borderWidth: 0,\r\n        pointStyle: \"rectRounded\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Card className=\"h-100 mb-0\">\r\n      <CardHeader className=\"d-flex justify-content-between align-items-sm-center align-items-start flex-sm-row flex-column\">\r\n        <CardTitle tag=\"h4\">Total Number Of clients</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div style={{ height: \"170px\" }}>\r\n          <Doughnut data={data} options={options} height={275} />\r\n        </div>\r\n        <Row className=\"mt-2\">\r\n          <Col lg=\"6\">\r\n            <div className=\"d-flex justify-content-between\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div\r\n                  style={{\r\n                    width: \"7px\",\r\n                    height: \"7px\",\r\n                    backgroundColor: \"#58D0FF\",\r\n                    borderRadius: \"50%\",\r\n                  }}\r\n                ></div>\r\n                <span className=\"fw-bold ms-75 me-25\">Active Users</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-between\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div\r\n                  style={{\r\n                    width: \"7px\",\r\n                    height: \"7px\",\r\n                    backgroundColor: \"#FF6161\",\r\n                    borderRadius: \"50%\",\r\n                  }}\r\n                ></div>\r\n                <span className=\"fw-bold ms-75 me-25\">Inactive Users</span>\r\n              </div>\r\n              <div></div>\r\n            </div>\r\n\r\n            <div className=\"d-flex justify-content-between\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div\r\n                  style={{\r\n                    width: \"7px\",\r\n                    height: \"7px\",\r\n                    backgroundColor: \"#2873B9\",\r\n                    borderRadius: \"50%\",\r\n                  }}\r\n                ></div>\r\n                <span className=\"fw-bold ms-75 me-25\">New Users</span>\r\n              </div>\r\n              <div></div>\r\n            </div>\r\n          </Col>\r\n          <Col lg=\"6\">\r\n            <h5 className=\"tota_client\">\r\n              <strong style={{fontSize:'32px'}}>70 K</strong> <br /> <span>Total Clients</span>\r\n            </h5>\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ChartjsRadarChart;\r\n","D:\\Utecho\\Scaff-cert\\src\\views\\charts\\chart-js\\ChartjsHorizontalBar.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\charts\\chart-js\\ChartjsScatterChart.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\charts\\chart-js\\ChartjsPolarAreaChart.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\charts\\apex\\ApexBarChart.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\charts\\apex\\ApexRadarChart.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\charts\\apex\\ApexLineChart.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\charts\\apex\\ApexAreaCharts.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\charts\\apex\\ApexDonutChart.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\charts\\apex\\ApexColumnCharts.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\charts\\apex\\ApexHeatmapChart.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\charts\\apex\\ApexScatterCharts.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\charts\\apex\\ApexRadialbar.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\charts\\apex\\ApexCandlestickChart.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\dashboard\\ecommerce\\index.js",[],"D:\\Utecho\\Scaff-cert\\src\\views\\dashboard\\ecommerce\\CompanyTable.js",[],{"ruleId":"3997","replacedBy":"3998"},{"ruleId":"3999","replacedBy":"4000"},{"ruleId":"4001","severity":1,"message":"4002","line":11,"column":1,"nodeType":"4003","endLine":11,"endColumn":62},{"ruleId":"4004","severity":1,"message":"4005","line":35,"column":6,"nodeType":"4006","endLine":35,"endColumn":14,"suggestions":"4007"},{"ruleId":"4004","severity":1,"message":"4005","line":42,"column":6,"nodeType":"4006","endLine":42,"endColumn":18,"suggestions":"4008"},{"ruleId":"4009","severity":1,"message":"4010","line":47,"column":27,"nodeType":"4011","messageId":"4012","endLine":47,"endColumn":29},{"ruleId":"4009","severity":1,"message":"4013","line":42,"column":37,"nodeType":"4011","messageId":"4012","endLine":42,"endColumn":39},{"ruleId":"4014","severity":1,"message":"4015","line":18,"column":5,"nodeType":"4016","messageId":"4017","endLine":18,"endColumn":11},{"ruleId":"4004","severity":1,"message":"4018","line":57,"column":6,"nodeType":"4006","endLine":57,"endColumn":8,"suggestions":"4019"},{"ruleId":"4004","severity":1,"message":"4020","line":92,"column":6,"nodeType":"4006","endLine":92,"endColumn":8,"suggestions":"4021"},{"ruleId":"4014","severity":1,"message":"4022","line":26,"column":8,"nodeType":"4016","messageId":"4017","endLine":26,"endColumn":23},{"ruleId":"4014","severity":1,"message":"4023","line":46,"column":5,"nodeType":"4016","messageId":"4017","endLine":46,"endColumn":11},{"ruleId":"4004","severity":1,"message":"4024","line":95,"column":6,"nodeType":"4006","endLine":95,"endColumn":16,"suggestions":"4025"},{"ruleId":"4001","severity":1,"message":"4026","line":11,"column":1,"nodeType":"4003","endLine":11,"endColumn":106},{"ruleId":"4001","severity":1,"message":"4026","line":12,"column":1,"nodeType":"4003","endLine":12,"endColumn":108},{"ruleId":"4027","severity":1,"message":"4028","line":18,"column":17,"nodeType":"4029","messageId":"4030","endLine":21,"endColumn":18,"fix":"4031"},{"ruleId":"4001","severity":1,"message":"4026","line":14,"column":1,"nodeType":"4003","endLine":150,"endColumn":2},{"ruleId":"4001","severity":1,"message":"4026","line":4,"column":1,"nodeType":"4003","endLine":349,"endColumn":2},{"ruleId":"4014","severity":1,"message":"4032","line":3,"column":3,"nodeType":"4016","messageId":"4017","endLine":3,"endColumn":7},{"ruleId":"4014","severity":1,"message":"4033","line":4,"column":3,"nodeType":"4016","messageId":"4017","endLine":4,"endColumn":6},{"ruleId":"4014","severity":1,"message":"4034","line":5,"column":3,"nodeType":"4016","messageId":"4017","endLine":5,"endColumn":13},{"ruleId":"4014","severity":1,"message":"4035","line":6,"column":3,"nodeType":"4016","messageId":"4017","endLine":6,"endColumn":9},{"ruleId":"4014","severity":1,"message":"4036","line":7,"column":3,"nodeType":"4016","messageId":"4017","endLine":7,"endColumn":12},{"ruleId":"4014","severity":1,"message":"4037","line":8,"column":3,"nodeType":"4016","messageId":"4017","endLine":8,"endColumn":6},{"ruleId":"4014","severity":1,"message":"4038","line":9,"column":3,"nodeType":"4016","messageId":"4017","endLine":9,"endColumn":9},{"ruleId":"4001","severity":1,"message":"4026","line":12,"column":1,"nodeType":"4003","endLine":12,"endColumn":18},{"ruleId":"4014","severity":1,"message":"4035","line":2,"column":16,"nodeType":"4016","messageId":"4017","endLine":2,"endColumn":22},{"ruleId":"4001","severity":1,"message":"4026","line":4,"column":1,"nodeType":"4003","endLine":30,"endColumn":2},{"ruleId":"4014","severity":1,"message":"4039","line":7,"column":10,"nodeType":"4016","messageId":"4017","endLine":7,"endColumn":23},{"ruleId":"4014","severity":1,"message":"4040","line":2,"column":10,"nodeType":"4016","messageId":"4017","endLine":2,"endColumn":15},{"ruleId":"4041","severity":1,"message":"4042","line":9,"column":9,"nodeType":"4029","endLine":9,"endColumn":63},{"ruleId":"4004","severity":1,"message":"4043","line":24,"column":6,"nodeType":"4006","endLine":24,"endColumn":8,"suggestions":"4044"},{"ruleId":"4014","severity":1,"message":"4045","line":12,"column":10,"nodeType":"4016","messageId":"4017","endLine":12,"endColumn":20},{"ruleId":"4014","severity":1,"message":"4046","line":12,"column":22,"nodeType":"4016","messageId":"4017","endLine":12,"endColumn":33},{"ruleId":"4014","severity":1,"message":"4047","line":17,"column":3,"nodeType":"4016","messageId":"4017","endLine":17,"endColumn":29},{"ruleId":"4014","severity":1,"message":"4048","line":28,"column":26,"nodeType":"4016","messageId":"4017","endLine":28,"endColumn":31},{"ruleId":"4014","severity":1,"message":"4049","line":28,"column":33,"nodeType":"4016","messageId":"4017","endLine":28,"endColumn":38},{"ruleId":"4014","severity":1,"message":"4050","line":30,"column":10,"nodeType":"4016","messageId":"4017","endLine":30,"endColumn":13},{"ruleId":"4014","severity":1,"message":"4051","line":9,"column":8,"nodeType":"4016","messageId":"4017","endLine":9,"endColumn":14},{"ruleId":"4014","severity":1,"message":"4052","line":44,"column":10,"nodeType":"4016","messageId":"4017","endLine":44,"endColumn":22},{"ruleId":"4014","severity":1,"message":"4053","line":44,"column":24,"nodeType":"4016","messageId":"4017","endLine":44,"endColumn":39},{"ruleId":"4014","severity":1,"message":"4054","line":50,"column":18,"nodeType":"4016","messageId":"4017","endLine":50,"endColumn":27},{"ruleId":"4004","severity":1,"message":"4055","line":108,"column":6,"nodeType":"4006","endLine":108,"endColumn":8,"suggestions":"4056"},{"ruleId":"4057","severity":1,"message":"4058","line":214,"column":17,"nodeType":"4029","endLine":214,"endColumn":77},{"ruleId":"4014","severity":1,"message":"4048","line":16,"column":26,"nodeType":"4016","messageId":"4017","endLine":16,"endColumn":31},{"ruleId":"4014","severity":1,"message":"4049","line":16,"column":33,"nodeType":"4016","messageId":"4017","endLine":16,"endColumn":38},{"ruleId":"4014","severity":1,"message":"4059","line":145,"column":9,"nodeType":"4016","messageId":"4017","endLine":145,"endColumn":24},{"ruleId":"4014","severity":1,"message":"4060","line":151,"column":9,"nodeType":"4016","messageId":"4017","endLine":151,"endColumn":25},{"ruleId":"4014","severity":1,"message":"4061","line":5,"column":10,"nodeType":"4016","messageId":"4017","endLine":5,"endColumn":14},{"ruleId":"4014","severity":1,"message":"4062","line":8,"column":8,"nodeType":"4016","messageId":"4017","endLine":8,"endColumn":14},{"ruleId":"4014","severity":1,"message":"4063","line":9,"column":8,"nodeType":"4016","messageId":"4017","endLine":9,"endColumn":16},{"ruleId":"4014","severity":1,"message":"4064","line":10,"column":8,"nodeType":"4016","messageId":"4017","endLine":10,"endColumn":19},{"ruleId":"4014","severity":1,"message":"4065","line":19,"column":20,"nodeType":"4016","messageId":"4017","endLine":19,"endColumn":24},{"ruleId":"4014","severity":1,"message":"4066","line":19,"column":26,"nodeType":"4016","messageId":"4017","endLine":19,"endColumn":36},{"ruleId":"4014","severity":1,"message":"4067","line":19,"column":38,"nodeType":"4016","messageId":"4017","endLine":19,"endColumn":47},{"ruleId":"4014","severity":1,"message":"4068","line":19,"column":49,"nodeType":"4016","messageId":"4017","endLine":19,"endColumn":57},{"ruleId":"4014","severity":1,"message":"4069","line":22,"column":8,"nodeType":"4016","messageId":"4017","endLine":22,"endColumn":19},{"ruleId":"4014","severity":1,"message":"4070","line":23,"column":8,"nodeType":"4016","messageId":"4017","endLine":23,"endColumn":13},{"ruleId":"4014","severity":1,"message":"4071","line":24,"column":8,"nodeType":"4016","messageId":"4017","endLine":24,"endColumn":19},{"ruleId":"4014","severity":1,"message":"4072","line":25,"column":8,"nodeType":"4016","messageId":"4017","endLine":25,"endColumn":21},{"ruleId":"4014","severity":1,"message":"4073","line":26,"column":8,"nodeType":"4016","messageId":"4017","endLine":26,"endColumn":22},{"ruleId":"4014","severity":1,"message":"4074","line":39,"column":8,"nodeType":"4016","messageId":"4017","endLine":39,"endColumn":14},{"ruleId":"4014","severity":1,"message":"4075","line":40,"column":8,"nodeType":"4016","messageId":"4017","endLine":40,"endColumn":23},{"ruleId":"4014","severity":1,"message":"4076","line":5,"column":15,"nodeType":"4016","messageId":"4017","endLine":5,"endColumn":18},{"ruleId":"4014","severity":1,"message":"4077","line":8,"column":8,"nodeType":"4016","messageId":"4017","endLine":8,"endColumn":23},{"ruleId":"4014","severity":1,"message":"4078","line":11,"column":10,"nodeType":"4016","messageId":"4017","endLine":11,"endColumn":14},{"ruleId":"4014","severity":1,"message":"4079","line":11,"column":16,"nodeType":"4016","messageId":"4017","endLine":11,"endColumn":24},{"ruleId":"4014","severity":1,"message":"4080","line":11,"column":26,"nodeType":"4016","messageId":"4017","endLine":11,"endColumn":35},{"ruleId":"4014","severity":1,"message":"4081","line":11,"column":37,"nodeType":"4016","messageId":"4017","endLine":11,"endColumn":42},{"ruleId":"4004","severity":1,"message":"4082","line":31,"column":6,"nodeType":"4006","endLine":31,"endColumn":16,"suggestions":"4083"},{"ruleId":"4004","severity":1,"message":"4084","line":35,"column":6,"nodeType":"4006","endLine":35,"endColumn":8,"suggestions":"4085"},{"ruleId":"4004","severity":1,"message":"4086","line":39,"column":6,"nodeType":"4006","endLine":39,"endColumn":8,"suggestions":"4087"},{"ruleId":"4004","severity":1,"message":"4084","line":30,"column":6,"nodeType":"4006","endLine":30,"endColumn":8,"suggestions":"4088"},{"ruleId":"4014","severity":1,"message":"4089","line":6,"column":10,"nodeType":"4016","messageId":"4017","endLine":6,"endColumn":14},{"ruleId":"4014","severity":1,"message":"4090","line":6,"column":16,"nodeType":"4016","messageId":"4017","endLine":6,"endColumn":17},{"ruleId":"4014","severity":1,"message":"4035","line":6,"column":19,"nodeType":"4016","messageId":"4017","endLine":6,"endColumn":25},{"ruleId":"4014","severity":1,"message":"4091","line":9,"column":8,"nodeType":"4016","messageId":"4017","endLine":9,"endColumn":19},{"ruleId":"4014","severity":1,"message":"4092","line":13,"column":26,"nodeType":"4016","messageId":"4017","endLine":13,"endColumn":42},{"ruleId":"4014","severity":1,"message":"4093","line":13,"column":44,"nodeType":"4016","messageId":"4017","endLine":13,"endColumn":61},{"ruleId":"4004","severity":1,"message":"4094","line":18,"column":6,"nodeType":"4006","endLine":18,"endColumn":32,"suggestions":"4095"},{"ruleId":"4001","severity":1,"message":"4096","line":2,"column":1,"nodeType":"4003","endLine":15,"endColumn":2},{"ruleId":"4004","severity":1,"message":"4097","line":38,"column":6,"nodeType":"4006","endLine":38,"endColumn":16,"suggestions":"4098"},{"ruleId":"4099","severity":1,"message":"4100","line":92,"column":9,"nodeType":"4101","messageId":"4102","endLine":92,"endColumn":33},{"ruleId":"4004","severity":1,"message":"4082","line":35,"column":6,"nodeType":"4006","endLine":35,"endColumn":8,"suggestions":"4103"},{"ruleId":"4004","severity":1,"message":"4104","line":116,"column":6,"nodeType":"4006","endLine":116,"endColumn":35,"suggestions":"4105"},{"ruleId":"4004","severity":1,"message":"4106","line":116,"column":6,"nodeType":"4006","endLine":116,"endColumn":16,"suggestions":"4107"},{"ruleId":"4004","severity":1,"message":"4108","line":29,"column":6,"nodeType":"4006","endLine":29,"endColumn":16,"suggestions":"4109"},{"ruleId":"4004","severity":1,"message":"4110","line":50,"column":6,"nodeType":"4006","endLine":50,"endColumn":16,"suggestions":"4111"},{"ruleId":"4014","severity":1,"message":"4112","line":6,"column":10,"nodeType":"4016","messageId":"4017","endLine":6,"endColumn":14},{"ruleId":"4014","severity":1,"message":"4113","line":6,"column":16,"nodeType":"4016","messageId":"4017","endLine":6,"endColumn":27},{"ruleId":"4014","severity":1,"message":"4114","line":6,"column":29,"nodeType":"4016","messageId":"4017","endLine":6,"endColumn":42},{"ruleId":"4014","severity":1,"message":"4115","line":6,"column":44,"nodeType":"4016","messageId":"4017","endLine":6,"endColumn":48},{"ruleId":"4014","severity":1,"message":"4116","line":6,"column":50,"nodeType":"4016","messageId":"4017","endLine":6,"endColumn":58},{"ruleId":"4014","severity":1,"message":"4117","line":11,"column":3,"nodeType":"4016","messageId":"4017","endLine":11,"endColumn":15},{"ruleId":"4014","severity":1,"message":"4118","line":12,"column":3,"nodeType":"4016","messageId":"4017","endLine":12,"endColumn":15},{"ruleId":"4014","severity":1,"message":"4119","line":14,"column":3,"nodeType":"4016","messageId":"4017","endLine":14,"endColumn":17},{"ruleId":"4014","severity":1,"message":"4047","line":15,"column":3,"nodeType":"4016","messageId":"4017","endLine":15,"endColumn":29},{"ruleId":"4014","severity":1,"message":"4051","line":15,"column":8,"nodeType":"4016","messageId":"4017","endLine":15,"endColumn":14},{"ruleId":"4014","severity":1,"message":"4120","line":20,"column":3,"nodeType":"4016","messageId":"4017","endLine":20,"endColumn":8},{"ruleId":"4014","severity":1,"message":"4121","line":21,"column":3,"nodeType":"4016","messageId":"4017","endLine":21,"endColumn":10},{"ruleId":"4014","severity":1,"message":"4122","line":22,"column":3,"nodeType":"4016","messageId":"4017","endLine":22,"endColumn":11},{"ruleId":"4014","severity":1,"message":"4123","line":23,"column":3,"nodeType":"4016","messageId":"4017","endLine":23,"endColumn":7},{"ruleId":"4014","severity":1,"message":"4112","line":24,"column":3,"nodeType":"4016","messageId":"4017","endLine":24,"endColumn":7},{"ruleId":"4014","severity":1,"message":"4124","line":25,"column":3,"nodeType":"4016","messageId":"4017","endLine":25,"endColumn":7},{"ruleId":"4014","severity":1,"message":"4125","line":29,"column":10,"nodeType":"4016","messageId":"4017","endLine":29,"endColumn":27},{"ruleId":"4014","severity":1,"message":"4126","line":37,"column":3,"nodeType":"4016","messageId":"4017","endLine":37,"endColumn":8},{"ruleId":"4014","severity":1,"message":"4068","line":39,"column":3,"nodeType":"4016","messageId":"4017","endLine":39,"endColumn":11},{"ruleId":"4014","severity":1,"message":"4067","line":40,"column":3,"nodeType":"4016","messageId":"4017","endLine":40,"endColumn":12},{"ruleId":"4014","severity":1,"message":"4066","line":41,"column":3,"nodeType":"4016","messageId":"4017","endLine":41,"endColumn":13},{"ruleId":"4014","severity":1,"message":"4117","line":42,"column":3,"nodeType":"4016","messageId":"4017","endLine":42,"endColumn":15},{"ruleId":"4014","severity":1,"message":"4118","line":43,"column":3,"nodeType":"4016","messageId":"4017","endLine":43,"endColumn":15},{"ruleId":"4014","severity":1,"message":"4119","line":44,"column":3,"nodeType":"4016","messageId":"4017","endLine":44,"endColumn":17},{"ruleId":"4014","severity":1,"message":"4127","line":45,"column":3,"nodeType":"4016","messageId":"4017","endLine":45,"endColumn":23},{"ruleId":"4014","severity":1,"message":"4128","line":89,"column":12,"nodeType":"4016","messageId":"4017","endLine":89,"endColumn":23},{"ruleId":"4014","severity":1,"message":"4129","line":208,"column":23,"nodeType":"4016","messageId":"4017","endLine":208,"endColumn":37},{"ruleId":"4014","severity":1,"message":"4130","line":212,"column":23,"nodeType":"4016","messageId":"4017","endLine":212,"endColumn":37},{"ruleId":"4014","severity":1,"message":"4131","line":216,"column":25,"nodeType":"4016","messageId":"4017","endLine":216,"endColumn":41},{"ruleId":"4004","severity":1,"message":"4132","line":240,"column":6,"nodeType":"4006","endLine":240,"endColumn":66,"suggestions":"4133"},{"ruleId":"4014","severity":1,"message":"4134","line":243,"column":9,"nodeType":"4016","messageId":"4017","endLine":243,"endColumn":20},{"ruleId":"4014","severity":1,"message":"4135","line":252,"column":9,"nodeType":"4016","messageId":"4017","endLine":252,"endColumn":20},{"ruleId":"4014","severity":1,"message":"4136","line":260,"column":9,"nodeType":"4016","messageId":"4017","endLine":260,"endColumn":22},{"ruleId":"4137","severity":1,"message":"4138","line":274,"column":19,"nodeType":"4029","endLine":274,"endColumn":95},{"ruleId":"4004","severity":1,"message":"4139","line":109,"column":6,"nodeType":"4006","endLine":109,"endColumn":35,"suggestions":"4140"},{"ruleId":"4004","severity":1,"message":"4141","line":26,"column":15,"nodeType":"4142","endLine":26,"endColumn":48},{"ruleId":"4004","severity":1,"message":"4143","line":70,"column":6,"nodeType":"4006","endLine":70,"endColumn":8,"suggestions":"4144"},{"ruleId":"4041","severity":1,"message":"4042","line":257,"column":13,"nodeType":"4029","endLine":257,"endColumn":59},{"ruleId":"4027","severity":1,"message":"4028","line":124,"column":23,"nodeType":"4029","messageId":"4030","endLine":124,"endColumn":58,"fix":"4145"},{"ruleId":"4004","severity":1,"message":"4146","line":54,"column":6,"nodeType":"4006","endLine":54,"endColumn":35,"suggestions":"4147"},{"ruleId":"4148","severity":1,"message":"4149","line":116,"column":5,"nodeType":"4150","messageId":"4151","endLine":116,"endColumn":14},{"ruleId":"4148","severity":1,"message":"4152","line":117,"column":5,"nodeType":"4150","messageId":"4151","endLine":117,"endColumn":13},{"ruleId":"4004","severity":1,"message":"4146","line":101,"column":6,"nodeType":"4006","endLine":101,"endColumn":35,"suggestions":"4153"},{"ruleId":"4014","severity":1,"message":"4154","line":12,"column":22,"nodeType":"4016","messageId":"4017","endLine":12,"endColumn":35},{"ruleId":"4014","severity":1,"message":"4155","line":20,"column":25,"nodeType":"4016","messageId":"4017","endLine":20,"endColumn":39},{"ruleId":"4014","severity":1,"message":"4156","line":21,"column":26,"nodeType":"4016","messageId":"4017","endLine":21,"endColumn":41},{"ruleId":"4014","severity":1,"message":"4157","line":22,"column":11,"nodeType":"4016","messageId":"4017","endLine":22,"endColumn":18},{"ruleId":"4014","severity":1,"message":"4158","line":2,"column":8,"nodeType":"4016","messageId":"4017","endLine":2,"endColumn":20},{"ruleId":"4014","severity":1,"message":"4159","line":5,"column":8,"nodeType":"4016","messageId":"4017","endLine":5,"endColumn":20},{"ruleId":"4014","severity":1,"message":"4160","line":12,"column":10,"nodeType":"4016","messageId":"4017","endLine":12,"endColumn":17},{"ruleId":"4014","severity":1,"message":"4161","line":12,"column":19,"nodeType":"4016","messageId":"4017","endLine":12,"endColumn":26},{"ruleId":"4014","severity":1,"message":"4162","line":7,"column":8,"nodeType":"4016","messageId":"4017","endLine":7,"endColumn":18},{"ruleId":"4014","severity":1,"message":"4163","line":10,"column":8,"nodeType":"4016","messageId":"4017","endLine":10,"endColumn":20},{"ruleId":"4014","severity":1,"message":"4164","line":36,"column":10,"nodeType":"4016","messageId":"4017","endLine":36,"endColumn":15},{"ruleId":"4004","severity":1,"message":"4084","line":46,"column":6,"nodeType":"4006","endLine":46,"endColumn":8,"suggestions":"4165"},{"ruleId":"4014","severity":1,"message":"4166","line":49,"column":9,"nodeType":"4016","messageId":"4017","endLine":49,"endColumn":24},{"ruleId":"4014","severity":1,"message":"4167","line":72,"column":9,"nodeType":"4016","messageId":"4017","endLine":72,"endColumn":37},{"ruleId":"4014","severity":1,"message":"4168","line":107,"column":9,"nodeType":"4016","messageId":"4017","endLine":107,"endColumn":18},{"ruleId":"4014","severity":1,"message":"4169","line":117,"column":9,"nodeType":"4016","messageId":"4017","endLine":117,"endColumn":29},{"ruleId":"4014","severity":1,"message":"4170","line":120,"column":9,"nodeType":"4016","messageId":"4017","endLine":120,"endColumn":33},{"ruleId":"4014","severity":1,"message":"4171","line":127,"column":9,"nodeType":"4016","messageId":"4017","endLine":127,"endColumn":26},{"ruleId":"4014","severity":1,"message":"4172","line":133,"column":9,"nodeType":"4016","messageId":"4017","endLine":133,"endColumn":28},{"ruleId":"4014","severity":1,"message":"4173","line":141,"column":9,"nodeType":"4016","messageId":"4017","endLine":141,"endColumn":25},{"ruleId":"4014","severity":1,"message":"4174","line":1,"column":39,"nodeType":"4016","messageId":"4017","endLine":1,"endColumn":45},{"ruleId":"4014","severity":1,"message":"4175","line":7,"column":10,"nodeType":"4016","messageId":"4017","endLine":7,"endColumn":24},{"ruleId":"4014","severity":1,"message":"4047","line":9,"column":3,"nodeType":"4016","messageId":"4017","endLine":9,"endColumn":29},{"ruleId":"4014","severity":1,"message":"4127","line":10,"column":3,"nodeType":"4016","messageId":"4017","endLine":10,"endColumn":23},{"ruleId":"4014","severity":1,"message":"4119","line":11,"column":3,"nodeType":"4016","messageId":"4017","endLine":11,"endColumn":17},{"ruleId":"4014","severity":1,"message":"4117","line":12,"column":3,"nodeType":"4016","messageId":"4017","endLine":12,"endColumn":15},{"ruleId":"4014","severity":1,"message":"4118","line":13,"column":3,"nodeType":"4016","messageId":"4017","endLine":13,"endColumn":15},{"ruleId":"4014","severity":1,"message":"4176","line":14,"column":3,"nodeType":"4016","messageId":"4017","endLine":14,"endColumn":7},{"ruleId":"4014","severity":1,"message":"4177","line":15,"column":3,"nodeType":"4016","messageId":"4017","endLine":15,"endColumn":8},{"ruleId":"4014","severity":1,"message":"4126","line":16,"column":3,"nodeType":"4016","messageId":"4017","endLine":16,"endColumn":8},{"ruleId":"4014","severity":1,"message":"4178","line":18,"column":3,"nodeType":"4016","messageId":"4017","endLine":18,"endColumn":9},{"ruleId":"4014","severity":1,"message":"4179","line":19,"column":3,"nodeType":"4016","messageId":"4017","endLine":19,"endColumn":8},{"ruleId":"4014","severity":1,"message":"4180","line":20,"column":3,"nodeType":"4016","messageId":"4017","endLine":20,"endColumn":14},{"ruleId":"4014","severity":1,"message":"4181","line":21,"column":3,"nodeType":"4016","messageId":"4017","endLine":21,"endColumn":12},{"ruleId":"4014","severity":1,"message":"4182","line":22,"column":3,"nodeType":"4016","messageId":"4017","endLine":22,"endColumn":14},{"ruleId":"4014","severity":1,"message":"4183","line":28,"column":26,"nodeType":"4016","messageId":"4017","endLine":28,"endColumn":31},{"ruleId":"4014","severity":1,"message":"4051","line":7,"column":8,"nodeType":"4016","messageId":"4017","endLine":7,"endColumn":14},{"ruleId":"4014","severity":1,"message":"4184","line":8,"column":10,"nodeType":"4016","messageId":"4017","endLine":8,"endColumn":20},{"ruleId":"4014","severity":1,"message":"4065","line":8,"column":22,"nodeType":"4016","messageId":"4017","endLine":8,"endColumn":26},{"ruleId":"4014","severity":1,"message":"4076","line":8,"column":28,"nodeType":"4016","messageId":"4017","endLine":8,"endColumn":31},{"ruleId":"4014","severity":1,"message":"4185","line":8,"column":33,"nodeType":"4016","messageId":"4017","endLine":8,"endColumn":36},{"ruleId":"4014","severity":1,"message":"4186","line":8,"column":38,"nodeType":"4016","messageId":"4017","endLine":8,"endColumn":45},{"ruleId":"4014","severity":1,"message":"4187","line":9,"column":8,"nodeType":"4016","messageId":"4017","endLine":9,"endColumn":14},{"ruleId":"4014","severity":1,"message":"4188","line":10,"column":8,"nodeType":"4016","messageId":"4017","endLine":10,"endColumn":13},{"ruleId":"4014","severity":1,"message":"4189","line":11,"column":8,"nodeType":"4016","messageId":"4017","endLine":11,"endColumn":16},{"ruleId":"4014","severity":1,"message":"4190","line":13,"column":10,"nodeType":"4016","messageId":"4017","endLine":13,"endColumn":14},{"ruleId":"4014","severity":1,"message":"4047","line":15,"column":3,"nodeType":"4016","messageId":"4017","endLine":15,"endColumn":29},{"ruleId":"4014","severity":1,"message":"4176","line":20,"column":3,"nodeType":"4016","messageId":"4017","endLine":20,"endColumn":7},{"ruleId":"4014","severity":1,"message":"4177","line":21,"column":3,"nodeType":"4016","messageId":"4017","endLine":21,"endColumn":8},{"ruleId":"4014","severity":1,"message":"4126","line":22,"column":3,"nodeType":"4016","messageId":"4017","endLine":22,"endColumn":8},{"ruleId":"4014","severity":1,"message":"4048","line":24,"column":26,"nodeType":"4016","messageId":"4017","endLine":24,"endColumn":31},{"ruleId":"4014","severity":1,"message":"4049","line":24,"column":33,"nodeType":"4016","messageId":"4017","endLine":24,"endColumn":38},{"ruleId":"4014","severity":1,"message":"4191","line":31,"column":3,"nodeType":"4016","messageId":"4017","endLine":31,"endColumn":8},{"ruleId":"4014","severity":1,"message":"4192","line":35,"column":10,"nodeType":"4016","messageId":"4017","endLine":35,"endColumn":24},{"ruleId":"4014","severity":1,"message":"4184","line":8,"column":10,"nodeType":"4016","messageId":"4017","endLine":8,"endColumn":20},{"ruleId":"4014","severity":1,"message":"4065","line":8,"column":22,"nodeType":"4016","messageId":"4017","endLine":8,"endColumn":26},{"ruleId":"4014","severity":1,"message":"4186","line":8,"column":38,"nodeType":"4016","messageId":"4017","endLine":8,"endColumn":45},{"ruleId":"4014","severity":1,"message":"4187","line":9,"column":8,"nodeType":"4016","messageId":"4017","endLine":9,"endColumn":14},{"ruleId":"4014","severity":1,"message":"4188","line":10,"column":8,"nodeType":"4016","messageId":"4017","endLine":10,"endColumn":13},{"ruleId":"4014","severity":1,"message":"4190","line":13,"column":10,"nodeType":"4016","messageId":"4017","endLine":13,"endColumn":14},{"ruleId":"4014","severity":1,"message":"4048","line":24,"column":26,"nodeType":"4016","messageId":"4017","endLine":24,"endColumn":31},{"ruleId":"4014","severity":1,"message":"4049","line":24,"column":33,"nodeType":"4016","messageId":"4017","endLine":24,"endColumn":38},{"ruleId":"4014","severity":1,"message":"4191","line":31,"column":3,"nodeType":"4016","messageId":"4017","endLine":31,"endColumn":8},{"ruleId":"4057","severity":1,"message":"4058","line":428,"column":17,"nodeType":"4029","endLine":428,"endColumn":77},{"ruleId":"4014","severity":1,"message":"4184","line":9,"column":10,"nodeType":"4016","messageId":"4017","endLine":9,"endColumn":20},{"ruleId":"4014","severity":1,"message":"4065","line":9,"column":22,"nodeType":"4016","messageId":"4017","endLine":9,"endColumn":26},{"ruleId":"4014","severity":1,"message":"4186","line":9,"column":38,"nodeType":"4016","messageId":"4017","endLine":9,"endColumn":45},{"ruleId":"4014","severity":1,"message":"4190","line":14,"column":10,"nodeType":"4016","messageId":"4017","endLine":14,"endColumn":14},{"ruleId":"4014","severity":1,"message":"4047","line":16,"column":3,"nodeType":"4016","messageId":"4017","endLine":16,"endColumn":29},{"ruleId":"4014","severity":1,"message":"4051","line":7,"column":8,"nodeType":"4016","messageId":"4017","endLine":7,"endColumn":14},{"ruleId":"4014","severity":1,"message":"4184","line":8,"column":10,"nodeType":"4016","messageId":"4017","endLine":8,"endColumn":20},{"ruleId":"4014","severity":1,"message":"4065","line":8,"column":22,"nodeType":"4016","messageId":"4017","endLine":8,"endColumn":26},{"ruleId":"4014","severity":1,"message":"4076","line":8,"column":28,"nodeType":"4016","messageId":"4017","endLine":8,"endColumn":31},{"ruleId":"4014","severity":1,"message":"4185","line":8,"column":33,"nodeType":"4016","messageId":"4017","endLine":8,"endColumn":36},{"ruleId":"4014","severity":1,"message":"4186","line":8,"column":38,"nodeType":"4016","messageId":"4017","endLine":8,"endColumn":45},{"ruleId":"4014","severity":1,"message":"4187","line":9,"column":8,"nodeType":"4016","messageId":"4017","endLine":9,"endColumn":14},{"ruleId":"4014","severity":1,"message":"4188","line":10,"column":8,"nodeType":"4016","messageId":"4017","endLine":10,"endColumn":13},{"ruleId":"4014","severity":1,"message":"4189","line":11,"column":8,"nodeType":"4016","messageId":"4017","endLine":11,"endColumn":16},{"ruleId":"4014","severity":1,"message":"4190","line":13,"column":10,"nodeType":"4016","messageId":"4017","endLine":13,"endColumn":14},{"ruleId":"4014","severity":1,"message":"4047","line":15,"column":3,"nodeType":"4016","messageId":"4017","endLine":15,"endColumn":29},{"ruleId":"4014","severity":1,"message":"4176","line":20,"column":3,"nodeType":"4016","messageId":"4017","endLine":20,"endColumn":7},{"ruleId":"4014","severity":1,"message":"4177","line":21,"column":3,"nodeType":"4016","messageId":"4017","endLine":21,"endColumn":8},{"ruleId":"4014","severity":1,"message":"4126","line":22,"column":3,"nodeType":"4016","messageId":"4017","endLine":22,"endColumn":8},{"ruleId":"4014","severity":1,"message":"4048","line":24,"column":26,"nodeType":"4016","messageId":"4017","endLine":24,"endColumn":31},{"ruleId":"4014","severity":1,"message":"4049","line":24,"column":33,"nodeType":"4016","messageId":"4017","endLine":24,"endColumn":38},{"ruleId":"4014","severity":1,"message":"4191","line":31,"column":3,"nodeType":"4016","messageId":"4017","endLine":31,"endColumn":8},{"ruleId":"4014","severity":1,"message":"4192","line":35,"column":10,"nodeType":"4016","messageId":"4017","endLine":35,"endColumn":24},{"ruleId":"4014","severity":1,"message":"4076","line":6,"column":15,"nodeType":"4016","messageId":"4017","endLine":6,"endColumn":18},{"ruleId":"4014","severity":1,"message":"4193","line":14,"column":24,"nodeType":"4016","messageId":"4017","endLine":14,"endColumn":37},{"ruleId":"4014","severity":1,"message":"4076","line":6,"column":15,"nodeType":"4016","messageId":"4017","endLine":6,"endColumn":18},{"ruleId":"4014","severity":1,"message":"4194","line":14,"column":30,"nodeType":"4016","messageId":"4017","endLine":14,"endColumn":49},{"ruleId":"4014","severity":1,"message":"4076","line":6,"column":15,"nodeType":"4016","messageId":"4017","endLine":6,"endColumn":18},{"ruleId":"4014","severity":1,"message":"4195","line":14,"column":23,"nodeType":"4016","messageId":"4017","endLine":14,"endColumn":35},{"ruleId":"4014","severity":1,"message":"4051","line":7,"column":8,"nodeType":"4016","messageId":"4017","endLine":7,"endColumn":14},{"ruleId":"4014","severity":1,"message":"4184","line":8,"column":10,"nodeType":"4016","messageId":"4017","endLine":8,"endColumn":20},{"ruleId":"4014","severity":1,"message":"4065","line":8,"column":22,"nodeType":"4016","messageId":"4017","endLine":8,"endColumn":26},{"ruleId":"4014","severity":1,"message":"4186","line":8,"column":38,"nodeType":"4016","messageId":"4017","endLine":8,"endColumn":45},{"ruleId":"4014","severity":1,"message":"4187","line":9,"column":8,"nodeType":"4016","messageId":"4017","endLine":9,"endColumn":14},{"ruleId":"4014","severity":1,"message":"4188","line":10,"column":8,"nodeType":"4016","messageId":"4017","endLine":10,"endColumn":13},{"ruleId":"4014","severity":1,"message":"4048","line":23,"column":26,"nodeType":"4016","messageId":"4017","endLine":23,"endColumn":31},{"ruleId":"4014","severity":1,"message":"4049","line":23,"column":33,"nodeType":"4016","messageId":"4017","endLine":23,"endColumn":38},{"ruleId":"4014","severity":1,"message":"4191","line":30,"column":3,"nodeType":"4016","messageId":"4017","endLine":30,"endColumn":8},{"ruleId":"4057","severity":1,"message":"4058","line":356,"column":17,"nodeType":"4029","endLine":356,"endColumn":77},{"ruleId":"4014","severity":1,"message":"4051","line":7,"column":8,"nodeType":"4016","messageId":"4017","endLine":7,"endColumn":14},{"ruleId":"4014","severity":1,"message":"4184","line":8,"column":10,"nodeType":"4016","messageId":"4017","endLine":8,"endColumn":20},{"ruleId":"4014","severity":1,"message":"4065","line":8,"column":22,"nodeType":"4016","messageId":"4017","endLine":8,"endColumn":26},{"ruleId":"4014","severity":1,"message":"4186","line":8,"column":38,"nodeType":"4016","messageId":"4017","endLine":8,"endColumn":45},{"ruleId":"4014","severity":1,"message":"4187","line":9,"column":8,"nodeType":"4016","messageId":"4017","endLine":9,"endColumn":14},{"ruleId":"4014","severity":1,"message":"4188","line":10,"column":8,"nodeType":"4016","messageId":"4017","endLine":10,"endColumn":13},{"ruleId":"4014","severity":1,"message":"4190","line":13,"column":10,"nodeType":"4016","messageId":"4017","endLine":13,"endColumn":14},{"ruleId":"4014","severity":1,"message":"4048","line":24,"column":26,"nodeType":"4016","messageId":"4017","endLine":24,"endColumn":31},{"ruleId":"4014","severity":1,"message":"4049","line":24,"column":33,"nodeType":"4016","messageId":"4017","endLine":24,"endColumn":38},{"ruleId":"4014","severity":1,"message":"4191","line":31,"column":3,"nodeType":"4016","messageId":"4017","endLine":31,"endColumn":8},{"ruleId":"4057","severity":1,"message":"4058","line":360,"column":17,"nodeType":"4029","endLine":360,"endColumn":77},{"ruleId":"4014","severity":1,"message":"4184","line":9,"column":10,"nodeType":"4016","messageId":"4017","endLine":9,"endColumn":20},{"ruleId":"4014","severity":1,"message":"4065","line":9,"column":22,"nodeType":"4016","messageId":"4017","endLine":9,"endColumn":26},{"ruleId":"4014","severity":1,"message":"4186","line":9,"column":38,"nodeType":"4016","messageId":"4017","endLine":9,"endColumn":45},{"ruleId":"4014","severity":1,"message":"4047","line":17,"column":3,"nodeType":"4016","messageId":"4017","endLine":17,"endColumn":29},{"ruleId":"4014","severity":1,"message":"4191","line":35,"column":3,"nodeType":"4016","messageId":"4017","endLine":35,"endColumn":8},{"ruleId":"4014","severity":1,"message":"4048","line":38,"column":26,"nodeType":"4016","messageId":"4017","endLine":38,"endColumn":31},{"ruleId":"4014","severity":1,"message":"4049","line":38,"column":33,"nodeType":"4016","messageId":"4017","endLine":38,"endColumn":38},{"ruleId":"4014","severity":1,"message":"4192","line":41,"column":10,"nodeType":"4016","messageId":"4017","endLine":41,"endColumn":24},{"ruleId":"4014","severity":1,"message":"4196","line":44,"column":8,"nodeType":"4016","messageId":"4017","endLine":44,"endColumn":15},{"ruleId":"4014","severity":1,"message":"4197","line":120,"column":10,"nodeType":"4016","messageId":"4017","endLine":120,"endColumn":19},{"ruleId":"4014","severity":1,"message":"4184","line":8,"column":10,"nodeType":"4016","messageId":"4017","endLine":8,"endColumn":20},{"ruleId":"4014","severity":1,"message":"4065","line":8,"column":22,"nodeType":"4016","messageId":"4017","endLine":8,"endColumn":26},{"ruleId":"4014","severity":1,"message":"4186","line":8,"column":38,"nodeType":"4016","messageId":"4017","endLine":8,"endColumn":45},{"ruleId":"4014","severity":1,"message":"4051","line":9,"column":8,"nodeType":"4016","messageId":"4017","endLine":9,"endColumn":14},{"ruleId":"4014","severity":1,"message":"4192","line":15,"column":10,"nodeType":"4016","messageId":"4017","endLine":15,"endColumn":24},{"ruleId":"4014","severity":1,"message":"4183","line":15,"column":26,"nodeType":"4016","messageId":"4017","endLine":15,"endColumn":31},{"ruleId":"4014","severity":1,"message":"4196","line":18,"column":8,"nodeType":"4016","messageId":"4017","endLine":18,"endColumn":15},{"ruleId":"4014","severity":1,"message":"4197","line":46,"column":10,"nodeType":"4016","messageId":"4017","endLine":46,"endColumn":19},{"ruleId":"4004","severity":1,"message":"4055","line":114,"column":6,"nodeType":"4006","endLine":114,"endColumn":22,"suggestions":"4198"},{"ruleId":"4057","severity":1,"message":"4058","line":505,"column":17,"nodeType":"4029","endLine":505,"endColumn":77},{"ruleId":"4057","severity":1,"message":"4058","line":887,"column":17,"nodeType":"4029","endLine":887,"endColumn":77},{"ruleId":"4004","severity":1,"message":"4055","line":138,"column":6,"nodeType":"4006","endLine":138,"endColumn":22,"suggestions":"4199"},{"ruleId":"4057","severity":1,"message":"4058","line":636,"column":17,"nodeType":"4029","endLine":636,"endColumn":77},{"ruleId":"4014","severity":1,"message":"4190","line":7,"column":10,"nodeType":"4016","messageId":"4017","endLine":7,"endColumn":14},{"ruleId":"4014","severity":1,"message":"4046","line":7,"column":28,"nodeType":"4016","messageId":"4017","endLine":7,"endColumn":39},{"ruleId":"4014","severity":1,"message":"4176","line":18,"column":3,"nodeType":"4016","messageId":"4017","endLine":18,"endColumn":7},{"ruleId":"4004","severity":1,"message":"4200","line":57,"column":6,"nodeType":"4006","endLine":57,"endColumn":8,"suggestions":"4201"},{"ruleId":"4014","severity":1,"message":"4187","line":8,"column":8,"nodeType":"4016","messageId":"4017","endLine":8,"endColumn":14},{"ruleId":"4004","severity":1,"message":"4055","line":54,"column":6,"nodeType":"4006","endLine":54,"endColumn":10,"suggestions":"4202"},{"ruleId":"4014","severity":1,"message":"4186","line":8,"column":20,"nodeType":"4016","messageId":"4017","endLine":8,"endColumn":27},{"ruleId":"4014","severity":1,"message":"4048","line":28,"column":26,"nodeType":"4016","messageId":"4017","endLine":28,"endColumn":31},{"ruleId":"4014","severity":1,"message":"4049","line":28,"column":33,"nodeType":"4016","messageId":"4017","endLine":28,"endColumn":38},{"ruleId":"4014","severity":1,"message":"4191","line":35,"column":3,"nodeType":"4016","messageId":"4017","endLine":35,"endColumn":8},{"ruleId":"4014","severity":1,"message":"4050","line":43,"column":10,"nodeType":"4016","messageId":"4017","endLine":43,"endColumn":13},{"ruleId":"4014","severity":1,"message":"4054","line":74,"column":18,"nodeType":"4016","messageId":"4017","endLine":74,"endColumn":27},{"ruleId":"4004","severity":1,"message":"4055","line":142,"column":6,"nodeType":"4006","endLine":142,"endColumn":22,"suggestions":"4203"},{"ruleId":"4014","severity":1,"message":"4204","line":5,"column":17,"nodeType":"4016","messageId":"4017","endLine":5,"endColumn":26},{"ruleId":"4014","severity":1,"message":"4051","line":7,"column":8,"nodeType":"4016","messageId":"4017","endLine":7,"endColumn":14},{"ruleId":"4014","severity":1,"message":"4184","line":8,"column":10,"nodeType":"4016","messageId":"4017","endLine":8,"endColumn":20},{"ruleId":"4014","severity":1,"message":"4065","line":8,"column":22,"nodeType":"4016","messageId":"4017","endLine":8,"endColumn":26},{"ruleId":"4014","severity":1,"message":"4186","line":8,"column":38,"nodeType":"4016","messageId":"4017","endLine":8,"endColumn":45},{"ruleId":"4014","severity":1,"message":"4048","line":24,"column":26,"nodeType":"4016","messageId":"4017","endLine":24,"endColumn":31},{"ruleId":"4014","severity":1,"message":"4049","line":24,"column":33,"nodeType":"4016","messageId":"4017","endLine":24,"endColumn":38},{"ruleId":"4014","severity":1,"message":"4182","line":30,"column":3,"nodeType":"4016","messageId":"4017","endLine":30,"endColumn":14},{"ruleId":"4014","severity":1,"message":"4191","line":31,"column":3,"nodeType":"4016","messageId":"4017","endLine":31,"endColumn":8},{"ruleId":"4014","severity":1,"message":"4205","line":184,"column":9,"nodeType":"4016","messageId":"4017","endLine":184,"endColumn":20},{"ruleId":"4014","severity":1,"message":"4206","line":189,"column":9,"nodeType":"4016","messageId":"4017","endLine":189,"endColumn":20},{"ruleId":"4057","severity":1,"message":"4058","line":274,"column":17,"nodeType":"4029","endLine":274,"endColumn":77},{"ruleId":"4014","severity":1,"message":"4192","line":9,"column":10,"nodeType":"4016","messageId":"4017","endLine":9,"endColumn":24},{"ruleId":"4057","severity":1,"message":"4058","line":552,"column":17,"nodeType":"4029","endLine":552,"endColumn":77},{"ruleId":"4014","severity":1,"message":"4207","line":28,"column":3,"nodeType":"4016","messageId":"4017","endLine":28,"endColumn":13},{"ruleId":"4014","severity":1,"message":"4050","line":36,"column":10,"nodeType":"4016","messageId":"4017","endLine":36,"endColumn":13},{"ruleId":"4014","severity":1,"message":"4164","line":78,"column":10,"nodeType":"4016","messageId":"4017","endLine":78,"endColumn":15},{"ruleId":"4014","severity":1,"message":"4208","line":78,"column":17,"nodeType":"4016","messageId":"4017","endLine":78,"endColumn":25},{"ruleId":"4004","severity":1,"message":"4055","line":694,"column":6,"nodeType":"4006","endLine":694,"endColumn":22,"suggestions":"4209"},{"ruleId":"4057","severity":1,"message":"4058","line":1030,"column":17,"nodeType":"4029","endLine":1030,"endColumn":77},{"ruleId":"4014","severity":1,"message":"4210","line":2,"column":10,"nodeType":"4016","messageId":"4017","endLine":2,"endColumn":18},{"ruleId":"4014","severity":1,"message":"4035","line":2,"column":20,"nodeType":"4016","messageId":"4017","endLine":2,"endColumn":26},{"ruleId":"4014","severity":1,"message":"4211","line":2,"column":10,"nodeType":"4016","messageId":"4017","endLine":2,"endColumn":14},{"ruleId":"4014","severity":1,"message":"4035","line":2,"column":16,"nodeType":"4016","messageId":"4017","endLine":2,"endColumn":22},{"ruleId":"4014","severity":1,"message":"4212","line":2,"column":24,"nodeType":"4016","messageId":"4017","endLine":2,"endColumn":30},{"ruleId":"4014","severity":1,"message":"4213","line":2,"column":32,"nodeType":"4016","messageId":"4017","endLine":2,"endColumn":38},{"ruleId":"4014","severity":1,"message":"4214","line":2,"column":40,"nodeType":"4016","messageId":"4017","endLine":2,"endColumn":48},{"ruleId":"4014","severity":1,"message":"4215","line":2,"column":50,"nodeType":"4016","messageId":"4017","endLine":2,"endColumn":56},{"ruleId":"4001","severity":1,"message":"4026","line":4,"column":1,"nodeType":"4003","endLine":4,"endColumn":18},{"ruleId":"4014","severity":1,"message":"4216","line":2,"column":10,"nodeType":"4016","messageId":"4017","endLine":2,"endColumn":16},{"ruleId":"4014","severity":1,"message":"4112","line":2,"column":18,"nodeType":"4016","messageId":"4017","endLine":2,"endColumn":22},{"ruleId":"4014","severity":1,"message":"4035","line":2,"column":24,"nodeType":"4016","messageId":"4017","endLine":2,"endColumn":30},{"ruleId":"4001","severity":1,"message":"4026","line":4,"column":1,"nodeType":"4003","endLine":4,"endColumn":18},{"ruleId":"4014","severity":1,"message":"4124","line":3,"column":3,"nodeType":"4016","messageId":"4017","endLine":3,"endColumn":7},{"ruleId":"4014","severity":1,"message":"4035","line":4,"column":3,"nodeType":"4016","messageId":"4017","endLine":4,"endColumn":9},{"ruleId":"4014","severity":1,"message":"4037","line":5,"column":3,"nodeType":"4016","messageId":"4017","endLine":5,"endColumn":6},{"ruleId":"4014","severity":1,"message":"4217","line":6,"column":3,"nodeType":"4016","messageId":"4017","endLine":6,"endColumn":10},{"ruleId":"4014","severity":1,"message":"4218","line":7,"column":3,"nodeType":"4016","messageId":"4017","endLine":7,"endColumn":11},{"ruleId":"4014","severity":1,"message":"4219","line":8,"column":3,"nodeType":"4016","messageId":"4017","endLine":8,"endColumn":16},{"ruleId":"4001","severity":1,"message":"4026","line":11,"column":1,"nodeType":"4003","endLine":11,"endColumn":18},{"ruleId":"4014","severity":1,"message":"4122","line":2,"column":10,"nodeType":"4016","messageId":"4017","endLine":2,"endColumn":18},{"ruleId":"4014","severity":1,"message":"4035","line":2,"column":20,"nodeType":"4016","messageId":"4017","endLine":2,"endColumn":26},{"ruleId":"4014","severity":1,"message":"4220","line":2,"column":28,"nodeType":"4016","messageId":"4017","endLine":2,"endColumn":34},{"ruleId":"4014","severity":1,"message":"4080","line":2,"column":36,"nodeType":"4016","messageId":"4017","endLine":2,"endColumn":45},{"ruleId":"4001","severity":1,"message":"4026","line":4,"column":1,"nodeType":"4003","endLine":4,"endColumn":18},{"ruleId":"4004","severity":1,"message":"4084","line":54,"column":6,"nodeType":"4006","endLine":54,"endColumn":72,"suggestions":"4221"},{"ruleId":"4004","severity":1,"message":"4084","line":47,"column":6,"nodeType":"4006","endLine":47,"endColumn":42,"suggestions":"4222"},{"ruleId":"4004","severity":1,"message":"4223","line":76,"column":6,"nodeType":"4006","endLine":76,"endColumn":8,"suggestions":"4224"},{"ruleId":"4057","severity":1,"message":"4058","line":84,"column":25,"nodeType":"4029","endLine":87,"endColumn":27},{"ruleId":"4004","severity":1,"message":"4082","line":38,"column":6,"nodeType":"4006","endLine":38,"endColumn":8,"suggestions":"4225"},{"ruleId":"4001","severity":1,"message":"4026","line":4,"column":1,"nodeType":"4003","endLine":30,"endColumn":2},{"ruleId":"4001","severity":1,"message":"4026","line":4,"column":1,"nodeType":"4003","endLine":24,"endColumn":2},{"ruleId":"4001","severity":1,"message":"4026","line":4,"column":1,"nodeType":"4003","endLine":75,"endColumn":2},{"ruleId":"4001","severity":1,"message":"4026","line":18,"column":1,"nodeType":"4003","endLine":319,"endColumn":2},{"ruleId":"4001","severity":1,"message":"4026","line":15,"column":1,"nodeType":"4003","endLine":147,"endColumn":2},{"ruleId":"4014","severity":1,"message":"4226","line":18,"column":10,"nodeType":"4016","messageId":"4017","endLine":18,"endColumn":18},{"ruleId":"4014","severity":1,"message":"4227","line":18,"column":20,"nodeType":"4016","messageId":"4017","endLine":18,"endColumn":27},{"ruleId":"4014","severity":1,"message":"4115","line":18,"column":29,"nodeType":"4016","messageId":"4017","endLine":18,"endColumn":33},{"ruleId":"4014","severity":1,"message":"4228","line":18,"column":35,"nodeType":"4016","messageId":"4017","endLine":18,"endColumn":41},{"ruleId":"4057","severity":1,"message":"4058","line":150,"column":11,"nodeType":"4029","endLine":150,"endColumn":52},{"ruleId":"4057","severity":1,"message":"4058","line":242,"column":17,"nodeType":"4029","endLine":242,"endColumn":68},{"ruleId":"4004","severity":1,"message":"4229","line":31,"column":6,"nodeType":"4006","endLine":31,"endColumn":8,"suggestions":"4230"},{"ruleId":"4014","severity":1,"message":"4231","line":11,"column":3,"nodeType":"4016","messageId":"4017","endLine":11,"endColumn":15},{"ruleId":"4014","severity":1,"message":"4232","line":3,"column":8,"nodeType":"4016","messageId":"4017","endLine":3,"endColumn":17},{"ruleId":"4004","severity":1,"message":"4233","line":55,"column":6,"nodeType":"4006","endLine":55,"endColumn":8,"suggestions":"4234"},{"ruleId":"4004","severity":1,"message":"4235","line":55,"column":6,"nodeType":"4006","endLine":55,"endColumn":19,"suggestions":"4236"},{"ruleId":"4009","severity":1,"message":"4237","line":168,"column":35,"nodeType":"4011","messageId":"4012","endLine":168,"endColumn":37},{"ruleId":"4009","severity":1,"message":"4237","line":207,"column":39,"nodeType":"4011","messageId":"4012","endLine":207,"endColumn":41},{"ruleId":"4014","severity":1,"message":"4238","line":2,"column":37,"nodeType":"4016","messageId":"4017","endLine":2,"endColumn":44},{"ruleId":"4014","severity":1,"message":"4239","line":4,"column":8,"nodeType":"4016","messageId":"4017","endLine":4,"endColumn":13},{"ruleId":"4014","severity":1,"message":"4190","line":13,"column":10,"nodeType":"4016","messageId":"4017","endLine":13,"endColumn":14},{"ruleId":"4004","severity":1,"message":"4240","line":129,"column":30,"nodeType":"4241","endLine":129,"endColumn":43},{"ruleId":"4137","severity":1,"message":"4138","line":10,"column":13,"nodeType":"4029","endLine":10,"endColumn":84},{"ruleId":"4137","severity":1,"message":"4138","line":22,"column":13,"nodeType":"4029","endLine":22,"endColumn":85},{"ruleId":"4242","severity":1,"message":"4243","line":31,"column":15,"nodeType":"4029","endLine":34,"endColumn":16},{"ruleId":"4014","severity":1,"message":"4066","line":7,"column":3,"nodeType":"4016","messageId":"4017","endLine":7,"endColumn":13},{"ruleId":"4014","severity":1,"message":"4067","line":8,"column":3,"nodeType":"4016","messageId":"4017","endLine":8,"endColumn":12},{"ruleId":"4027","severity":1,"message":"4028","line":128,"column":25,"nodeType":"4029","messageId":"4030","endLine":128,"endColumn":60,"fix":"4244"},{"ruleId":"4137","severity":1,"message":"4138","line":169,"column":15,"nodeType":"4029","endLine":175,"endColumn":17},{"ruleId":"4041","severity":1,"message":"4042","line":188,"column":13,"nodeType":"4029","endLine":188,"endColumn":81},{"ruleId":"4099","severity":1,"message":"4100","line":209,"column":63,"nodeType":"4101","messageId":"4102","endLine":209,"endColumn":89},{"ruleId":"4014","severity":1,"message":"4051","line":23,"column":8,"nodeType":"4016","messageId":"4017","endLine":23,"endColumn":14},{"ruleId":"4014","severity":1,"message":"4120","line":28,"column":3,"nodeType":"4016","messageId":"4017","endLine":28,"endColumn":8},{"ruleId":"4014","severity":1,"message":"4121","line":29,"column":3,"nodeType":"4016","messageId":"4017","endLine":29,"endColumn":10},{"ruleId":"4014","severity":1,"message":"4122","line":30,"column":3,"nodeType":"4016","messageId":"4017","endLine":30,"endColumn":11},{"ruleId":"4014","severity":1,"message":"4123","line":31,"column":3,"nodeType":"4016","messageId":"4017","endLine":31,"endColumn":7},{"ruleId":"4014","severity":1,"message":"4112","line":32,"column":3,"nodeType":"4016","messageId":"4017","endLine":32,"endColumn":7},{"ruleId":"4014","severity":1,"message":"4124","line":33,"column":3,"nodeType":"4016","messageId":"4017","endLine":33,"endColumn":7},{"ruleId":"4014","severity":1,"message":"4125","line":37,"column":10,"nodeType":"4016","messageId":"4017","endLine":37,"endColumn":27},{"ruleId":"4014","severity":1,"message":"4126","line":45,"column":3,"nodeType":"4016","messageId":"4017","endLine":45,"endColumn":8},{"ruleId":"4014","severity":1,"message":"4068","line":47,"column":3,"nodeType":"4016","messageId":"4017","endLine":47,"endColumn":11},{"ruleId":"4014","severity":1,"message":"4067","line":48,"column":3,"nodeType":"4016","messageId":"4017","endLine":48,"endColumn":12},{"ruleId":"4014","severity":1,"message":"4066","line":49,"column":3,"nodeType":"4016","messageId":"4017","endLine":49,"endColumn":13},{"ruleId":"4014","severity":1,"message":"4117","line":50,"column":3,"nodeType":"4016","messageId":"4017","endLine":50,"endColumn":15},{"ruleId":"4014","severity":1,"message":"4118","line":51,"column":3,"nodeType":"4016","messageId":"4017","endLine":51,"endColumn":15},{"ruleId":"4014","severity":1,"message":"4119","line":52,"column":3,"nodeType":"4016","messageId":"4017","endLine":52,"endColumn":17},{"ruleId":"4014","severity":1,"message":"4127","line":53,"column":3,"nodeType":"4016","messageId":"4017","endLine":53,"endColumn":23},{"ruleId":"4014","severity":1,"message":"4128","line":97,"column":12,"nodeType":"4016","messageId":"4017","endLine":97,"endColumn":23},{"ruleId":"4014","severity":1,"message":"4129","line":164,"column":23,"nodeType":"4016","messageId":"4017","endLine":164,"endColumn":37},{"ruleId":"4014","severity":1,"message":"4130","line":168,"column":23,"nodeType":"4016","messageId":"4017","endLine":168,"endColumn":37},{"ruleId":"4014","severity":1,"message":"4131","line":172,"column":25,"nodeType":"4016","messageId":"4017","endLine":172,"endColumn":41},{"ruleId":"4004","severity":1,"message":"4132","line":208,"column":6,"nodeType":"4006","endLine":208,"endColumn":66,"suggestions":"4245"},{"ruleId":"4014","severity":1,"message":"4134","line":211,"column":9,"nodeType":"4016","messageId":"4017","endLine":211,"endColumn":20},{"ruleId":"4014","severity":1,"message":"4135","line":220,"column":9,"nodeType":"4016","messageId":"4017","endLine":220,"endColumn":20},{"ruleId":"4014","severity":1,"message":"4136","line":228,"column":9,"nodeType":"4016","messageId":"4017","endLine":228,"endColumn":22},{"ruleId":"4014","severity":1,"message":"4078","line":17,"column":3,"nodeType":"4016","messageId":"4017","endLine":17,"endColumn":7},{"ruleId":"4014","severity":1,"message":"4115","line":18,"column":3,"nodeType":"4016","messageId":"4017","endLine":18,"endColumn":7},{"ruleId":"4014","severity":1,"message":"4113","line":19,"column":3,"nodeType":"4016","messageId":"4017","endLine":19,"endColumn":14},{"ruleId":"4014","severity":1,"message":"4114","line":20,"column":3,"nodeType":"4016","messageId":"4017","endLine":20,"endColumn":16},{"ruleId":"4014","severity":1,"message":"4246","line":21,"column":3,"nodeType":"4016","messageId":"4017","endLine":21,"endColumn":11},{"ruleId":"4014","severity":1,"message":"4034","line":22,"column":3,"nodeType":"4016","messageId":"4017","endLine":22,"endColumn":13},{"ruleId":"4014","severity":1,"message":"4247","line":23,"column":3,"nodeType":"4016","messageId":"4017","endLine":23,"endColumn":13},{"ruleId":"4014","severity":1,"message":"4248","line":2,"column":32,"nodeType":"4016","messageId":"4017","endLine":2,"endColumn":40},{"ruleId":"4014","severity":1,"message":"4226","line":14,"column":10,"nodeType":"4016","messageId":"4017","endLine":14,"endColumn":18},{"ruleId":"4014","severity":1,"message":"4227","line":14,"column":20,"nodeType":"4016","messageId":"4017","endLine":14,"endColumn":27},{"ruleId":"4014","severity":1,"message":"4115","line":14,"column":29,"nodeType":"4016","messageId":"4017","endLine":14,"endColumn":33},{"ruleId":"4014","severity":1,"message":"4228","line":14,"column":35,"nodeType":"4016","messageId":"4017","endLine":14,"endColumn":41},{"ruleId":"4014","severity":1,"message":"4247","line":14,"column":43,"nodeType":"4016","messageId":"4017","endLine":14,"endColumn":53},{"ruleId":"4014","severity":1,"message":"4249","line":16,"column":9,"nodeType":"4016","messageId":"4017","endLine":16,"endColumn":21},{"ruleId":"4014","severity":1,"message":"4191","line":33,"column":40,"nodeType":"4016","messageId":"4017","endLine":33,"endColumn":45},{"ruleId":"4014","severity":1,"message":"4250","line":33,"column":55,"nodeType":"4016","messageId":"4017","endLine":33,"endColumn":63},{"ruleId":"4014","severity":1,"message":"4251","line":33,"column":76,"nodeType":"4016","messageId":"4017","endLine":33,"endColumn":95},{"ruleId":"4057","severity":1,"message":"4058","line":166,"column":11,"nodeType":"4029","endLine":166,"endColumn":55},{"ruleId":"4014","severity":1,"message":"4252","line":61,"column":7,"nodeType":"4016","messageId":"4017","endLine":61,"endColumn":17},{"ruleId":"4009","severity":1,"message":"4010","line":51,"column":28,"nodeType":"4011","messageId":"4012","endLine":51,"endColumn":30},{"ruleId":"4137","severity":1,"message":"4138","line":68,"column":21,"nodeType":"4029","endLine":74,"endColumn":23},{"ruleId":"4137","severity":1,"message":"4138","line":118,"column":25,"nodeType":"4029","endLine":124,"endColumn":27},{"ruleId":"4137","severity":1,"message":"4138","line":150,"column":25,"nodeType":"4029","endLine":156,"endColumn":27},{"ruleId":"4137","severity":1,"message":"4138","line":125,"column":25,"nodeType":"4029","endLine":131,"endColumn":27},{"ruleId":"4137","severity":1,"message":"4138","line":157,"column":25,"nodeType":"4029","endLine":163,"endColumn":27},{"ruleId":"4137","severity":1,"message":"4138","line":22,"column":15,"nodeType":"4029","endLine":22,"endColumn":88},{"ruleId":"4137","severity":1,"message":"4138","line":35,"column":15,"nodeType":"4029","endLine":35,"endColumn":115},{"ruleId":"4057","severity":1,"message":"4058","line":59,"column":9,"nodeType":"4029","endLine":59,"endColumn":48},{"ruleId":"4004","severity":1,"message":"4253","line":144,"column":6,"nodeType":"4006","endLine":144,"endColumn":42,"suggestions":"4254"},{"ruleId":"4099","severity":1,"message":"4100","line":148,"column":13,"nodeType":"4101","messageId":"4102","endLine":148,"endColumn":21},{"ruleId":"4099","severity":1,"message":"4100","line":159,"column":13,"nodeType":"4101","messageId":"4102","endLine":159,"endColumn":21},{"ruleId":"4027","severity":1,"message":"4028","line":20,"column":13,"nodeType":"4029","messageId":"4030","endLine":23,"endColumn":14,"fix":"4255"},{"ruleId":"4027","severity":1,"message":"4028","line":24,"column":13,"nodeType":"4029","messageId":"4030","endLine":27,"endColumn":14,"fix":"4256"},{"ruleId":"4027","severity":1,"message":"4028","line":19,"column":13,"nodeType":"4029","messageId":"4030","endLine":22,"endColumn":14,"fix":"4257"},{"ruleId":"4027","severity":1,"message":"4028","line":24,"column":13,"nodeType":"4029","messageId":"4030","endLine":27,"endColumn":14,"fix":"4258"},{"ruleId":"4014","severity":1,"message":"4259","line":3,"column":10,"nodeType":"4016","messageId":"4017","endLine":3,"endColumn":17},{"ruleId":"4014","severity":1,"message":"4260","line":3,"column":19,"nodeType":"4016","messageId":"4017","endLine":3,"endColumn":25},{"ruleId":"4014","severity":1,"message":"4261","line":3,"column":27,"nodeType":"4016","messageId":"4017","endLine":3,"endColumn":36},{"ruleId":"4014","severity":1,"message":"4262","line":3,"column":38,"nodeType":"4016","messageId":"4017","endLine":3,"endColumn":45},{"ruleId":"4263","severity":1,"message":"4264","line":32,"column":15,"nodeType":"4016","messageId":"4265","endLine":32,"endColumn":20},{"ruleId":"4263","severity":1,"message":"4264","line":35,"column":15,"nodeType":"4016","messageId":"4265","endLine":35,"endColumn":20},"no-native-reassign",["4266"],"no-negated-in-lhs",["4267"],"import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'mounted'. Either include it or remove the dependency array.","ArrayExpression",["4268"],["4269"],"array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.find() expects a return value from arrow function.","no-unused-vars","'source' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'cleanUp', 'dispatch', and 'routeMeta'. Either include them or remove the dependency array.",["4270"],"React Hook useEffect has a missing dependency: 'navbarScrolled'. Either include it or remove the dependency array.",["4271"],"'FooterComponent' is defined but never used.","'footer' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'menuVisibility' and 'windowWidth'. Either include them or remove the dependency array.",["4272"],"Assign array to a variable before exporting as module default","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"4273","text":"4274"},"'Type' is defined but never used.","'Eye' is defined but never used.","'CreditCard' is defined but never used.","'Circle' is defined but never used.","'Briefcase' is defined but never used.","'Box' is defined but never used.","'Layout' is defined but never used.","'transparentBg' is defined but never used.","'Heart' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'showOffset'. Either include it or remove the dependency array.",["4275"],"'useHistory' is defined but never used.","'useLocation' is defined but never used.","'UncontrolledButtonDropdown' is defined but never used.","'Trash' is defined but never used.","'Edit2' is defined but never used.","'log' is defined but never used.","'Select' is defined but never used.","'defaultData_' is assigned a value but never used.","'setDefaultData_' is assigned a value but never used.","'setStatus' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["4276"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'editModalBranch' is assigned a value but never used.","'toggleLargeModal' is assigned a value but never used.","'List' is defined but never used.","'Avatar' is defined but never used.","'Timeline' is defined but never used.","'AvatarGroup' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardTitle' is defined but never used.","'CardBody' is defined but never used.","'InvoiceList' is defined but never used.","'Sales' is defined but never used.","'AvgSessions' is defined but never used.","'CardAppDesign' is defined but never used.","'SupportTracker' is defined but never used.","'Sales2' is defined but never used.","'SessionByDevice' is defined but never used.","'Col' is defined but never used.","'StatsHorizontal' is defined but never used.","'User' is defined but never used.","'UserPlus' is defined but never used.","'UserCheck' is defined but never used.","'UserX' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["4277"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["4278"],"React Hook useEffect has missing dependencies: 'dispatch' and 'productId'. Either include them or remove the dependency array.",["4279"],["4280"],"'Disc' is defined but never used.","'X' is defined but never used.","'themeConfig' is defined but never used.","'setMenuCollapsed' is assigned a value but never used.","'setMenuVisibility' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setGroupOpen'. Either include it or remove the dependency array.",["4281"],"Assign object to a variable before exporting as module default","React Hook useEffect has missing dependencies: 'currentPage', 'rowsPerPage', and 'searchValue'. Either include them or remove the dependency array.",["4282"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps",["4283"],"React Hook useEffect has missing dependencies: 'assignedTo', 'currentPage', 'rowsPerPage', and 'searchTerm'. Either include them or remove the dependency array.",["4284"],"React Hook useEffect has missing dependencies: 'currentURL', 'groupActive', 'item', 'setCurrentActiveGroup', 'setGroupActive', and 'setGroupOpen'. Either include them or remove the dependency array. If 'setGroupActive' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["4285"],"React Hook useEffect has missing dependencies: 'currentActiveItem' and 'setActiveItem'. Either include them or remove the dependency array. If 'setActiveItem' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["4286"],"React Hook useEffect has missing dependencies: 'currentURL', 'groupActive', 'item', and 'setGroupActive'. Either include them or remove the dependency array.",["4287"],"'Grid' is defined but never used.","'CheckSquare' is defined but never used.","'MessageSquare' is defined but never used.","'Mail' is defined but never used.","'Calendar' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'DropdownToggle' is defined but never used.","'Share' is defined but never used.","'Printer' is defined but never used.","'FileText' is defined but never used.","'File' is defined but never used.","'Copy' is defined but never used.","'selectThemeColors' is defined but never used.","'Label' is defined but never used.","'UncontrolledDropdown' is defined but never used.","'downloadCSV' is defined but never used.","'setCurrentRole' is assigned a value but never used.","'setCurrentPlan' is assigned a value but never used.","'setCurrentStatus' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentPlan.value', 'currentRole.value', 'currentStatus.value', 'rowsPerPage', and 'searchTerm'. Either include them or remove the dependency array.",["4288"],"'roleOptions' is assigned a value but never used.","'planOptions' is assigned a value but never used.","'statusOptions' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","React Hook useEffect has missing dependencies: 'currentPage', 'plan', 'rowsPerPage', 'searchTerm', 'sort', and 'sortColumn'. Either include them or remove the dependency array.",["4289"],"Assignments to the 'stepper' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","NewExpression","React Hook useEffect has a missing dependency: 'options'. Either include it or remove the dependency array.",["4290"],{"range":"4291","text":"4274"},"React Hook useEffect has missing dependencies: 'currentPage', 'rowsPerPage', 'sort', 'sortColumn', 'statusValue', and 'value'. Either include them or remove the dependency array.",["4292"],"no-dupe-keys","Duplicate key 'sortField'.","ObjectExpression","unexpected","Duplicate key 'selector'.",["4293"],"'useNavigation' is defined but never used.","'setSearchValue' is assigned a value but never used.","'setFilteredData' is assigned a value but never used.","'history' is assigned a value but never used.","'IntlDropdown' is defined but never used.","'NavbarSearch' is defined but never used.","'NavItem' is defined but never used.","'NavLink' is defined but never used.","'classnames' is defined but never used.","'Autocomplete' is defined but never used.","'value' is assigned a value but never used.",["4294"],"'renderBookmarks' is assigned a value but never used.","'renderExtraBookmarksDropdown' is assigned a value but never used.","'onKeyDown' is assigned a value but never used.","'handleBookmarkUpdate' is assigned a value but never used.","'handleBookmarkVisibility' is assigned a value but never used.","'handleInputChange' is assigned a value but never used.","'handleExternalClick' is assigned a value but never used.","'handleClearInput' is assigned a value but never used.","'useRef' is defined but never used.","'MoreHorizontal' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'toast' is defined but never used.","'Breadcrumb' is defined but never used.","'Row' is defined but never used.","'Spinner' is defined but never used.","'active' is defined but never used.","'block' is defined but never used.","'userIcon' is defined but never used.","'Link' is defined but never used.","'Alert' is defined but never used.","'ToastContainer' is defined but never used.","'setParcelList' is assigned a value but never used.","'setAssignParcelList' is assigned a value but never used.","'setRiderList' is assigned a value but never used.","'Spinerr' is defined but never used.","'isLoading' is assigned a value but never used.",["4295"],["4296"],"React Hook useEffect has a missing dependency: 'getDataJob'. Either include it or remove the dependency array.",["4297"],["4298"],["4299"],"'useEffect' is defined but never used.","'selectState' is assigned a value but never used.","'selectStaus' is assigned a value but never used.","'InputGroup' is defined but never used.","'setValue' is assigned a value but never used.",["4300"],"'PieChart' is defined but never used.","'Menu' is defined but never used.","'EyeOff' is defined but never used.","'Folder' is defined but never used.","'LifeBuoy' is defined but never used.","'Shield' is defined but never used.","'Server' is defined but never used.","'Package' is defined but never used.","'RotateCw' is defined but never used.","'AlertTriangle' is defined but never used.","'Square' is defined but never used.",["4301"],["4302"],"React Hook useEffect has missing dependencies: 'dispatch' and 'store.selectedCalendars'. Either include them or remove the dependency array.",["4303"],["4304"],"'Facebook' is defined but never used.","'Twitter' is defined but never used.","'GitHub' is defined but never used.","React Hook useEffect has a missing dependency: 'searchTerm'. Either include it or remove the dependency array.",["4305"],"'CardSubtitle' is defined but never used.","'Flatpickr' is defined but never used.","React Hook useEffect has a missing dependency: 'store.selectedUser'. Either include it or remove the dependency array.",["4306"],"React Hook useEffect has a missing dependency: 'setCalendarApi'. Either include it or remove the dependency array.",["4307"],"Array.prototype.map() expects a return value from arrow function.","'useMemo' is defined but never used.","'axios' is defined but never used.","React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","MemberExpression","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.",{"range":"4308","text":"4274"},["4309"],"'Settings' is defined but never used.","'HelpCircle' is defined but never used.","'ReactDOM' is defined but never used.","'GoogleLogout' is defined but never used.","'CardText' is defined but never used.","'UncontrolledTooltip' is defined but never used.","'renderRole' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'scrollToBottom'. Either include it or remove the dependency array.",["4310"],{"range":"4311","text":"4274"},{"range":"4312","text":"4274"},{"range":"4313","text":"4274"},{"range":"4314","text":"4274"},"'Monitor' is defined but never used.","'Tablet' is defined but never used.","'ArrowDown' is defined but never used.","'ArrowUp' is defined but never used.","no-const-assign","'label' is constant.","const","no-global-assign","no-unsafe-negation",{"desc":"4315","fix":"4316"},{"desc":"4317","fix":"4318"},{"desc":"4319","fix":"4320"},{"desc":"4321","fix":"4322"},{"desc":"4323","fix":"4324"},[735,735]," rel=\"noreferrer\"",{"desc":"4325","fix":"4326"},{"desc":"4327","fix":"4328"},{"desc":"4329","fix":"4330"},{"desc":"4331","fix":"4332"},{"desc":"4333","fix":"4334"},{"desc":"4331","fix":"4335"},{"desc":"4336","fix":"4337"},{"desc":"4338","fix":"4339"},{"desc":"4340","fix":"4341"},{"desc":"4342","fix":"4343"},{"desc":"4344","fix":"4345"},{"desc":"4346","fix":"4347"},{"desc":"4348","fix":"4349"},{"desc":"4350","fix":"4351"},{"desc":"4352","fix":"4353"},{"desc":"4354","fix":"4355"},[4229,4229],{"desc":"4356","fix":"4357"},{"desc":"4356","fix":"4358"},{"desc":"4331","fix":"4359"},{"desc":"4360","fix":"4361"},{"desc":"4360","fix":"4362"},{"desc":"4363","fix":"4364"},{"desc":"4365","fix":"4366"},{"desc":"4367","fix":"4368"},{"desc":"4360","fix":"4369"},{"desc":"4370","fix":"4371"},{"desc":"4372","fix":"4373"},{"desc":"4374","fix":"4375"},{"desc":"4340","fix":"4376"},{"desc":"4377","fix":"4378"},{"desc":"4379","fix":"4380"},{"desc":"4381","fix":"4382"},[4517,4517],{"desc":"4350","fix":"4383"},{"desc":"4384","fix":"4385"},[763,763],[816,816],[791,791],[871,871],"Update the dependencies array to be: [coords, mounted]",{"range":"4386","text":"4387"},"Update the dependencies array to be: [isRippling, mounted]",{"range":"4388","text":"4389"},"Update the dependencies array to be: [cleanUp, dispatch, routeMeta]",{"range":"4390","text":"4391"},"Update the dependencies array to be: [navbarScrolled]",{"range":"4392","text":"4393"},"Update the dependencies array to be: [location, menuVisibility, windowWidth]",{"range":"4394","text":"4395"},"Update the dependencies array to be: [showOffset]",{"range":"4396","text":"4397"},"Update the dependencies array to be: [getData]",{"range":"4398","text":"4399"},"Update the dependencies array to be: [dispatch, id]",{"range":"4400","text":"4401"},"Update the dependencies array to be: [dispatch]",{"range":"4402","text":"4403"},"Update the dependencies array to be: [dispatch, productId]",{"range":"4404","text":"4405"},{"range":"4406","text":"4403"},"Update the dependencies array to be: [menuHover, menuCollapsed, setGroupOpen]",{"range":"4407","text":"4408"},"Update the dependencies array to be: [currentPage, dispatch, rowsPerPage, searchValue]",{"range":"4409","text":"4410"},"Update the dependencies array to be: [id]",{"range":"4411","text":"4412"},"Update the dependencies array to be: [assignedTo, currentPage, dispatch, rowsPerPage, searchTerm, store.data.length]",{"range":"4413","text":"4414"},"Update the dependencies array to be: [currentURL, groupActive, item, location, setCurrentActiveGroup, setGroupActive, setGroupOpen]",{"range":"4415","text":"4416"},"Update the dependencies array to be: [currentActiveItem, location, setActiveItem]",{"range":"4417","text":"4418"},"Update the dependencies array to be: [currentURL, groupActive, item, location, setGroupActive]",{"range":"4419","text":"4420"},"Update the dependencies array to be: [dispatch, store.data.length, sort, sortColumn, currentPage, searchTerm, rowsPerPage, currentRole.value, currentStatus.value, currentPlan.value]",{"range":"4421","text":"4422"},"Update the dependencies array to be: [currentPage, dispatch, plan, rowsPerPage, searchTerm, sort, sortColumn, store.data.length]",{"range":"4423","text":"4424"},"Update the dependencies array to be: [options]",{"range":"4425","text":"4426"},"Update the dependencies array to be: [currentPage, dispatch, rowsPerPage, sort, sortColumn, statusValue, store.data.length, value]",{"range":"4427","text":"4428"},{"range":"4429","text":"4428"},{"range":"4430","text":"4403"},"Update the dependencies array to be: [getData, selectedOption]",{"range":"4431","text":"4432"},{"range":"4433","text":"4432"},"Update the dependencies array to be: [getDataJob]",{"range":"4434","text":"4435"},"Update the dependencies array to be: [getData, id]",{"range":"4436","text":"4437"},"Update the dependencies array to be: [getData, selectedBranch]",{"range":"4438","text":"4439"},{"range":"4440","text":"4432"},"Update the dependencies array to be: [store.tasks.length, paramsURL.filter, paramsURL.tag, query, sort, dispatch]",{"range":"4441","text":"4442"},"Update the dependencies array to be: [query, params.folder, params.label, dispatch]",{"range":"4443","text":"4444"},"Update the dependencies array to be: [dispatch, store.selectedCalendars]",{"range":"4445","text":"4446"},{"range":"4447","text":"4412"},"Update the dependencies array to be: [searchTerm]",{"range":"4448","text":"4449"},"Update the dependencies array to be: [store.selectedUser]",{"range":"4450","text":"4451"},"Update the dependencies array to be: [calendarApi, setCalendarApi]",{"range":"4452","text":"4453"},{"range":"4454","text":"4422"},"Update the dependencies array to be: [chatRef, chatData.chat.chat.length, scrollToBottom]",{"range":"4455","text":"4456"},[914,922],"[coords, mounted]",[1068,1080],"[isRippling, mounted]",[1606,1608],"[cleanUp, dispatch, routeMeta]",[2660,2662],"[navbarScrolled]",[2856,2866],"[location, menuVisibility, windowWidth]",[563,565],"[showOffset]",[2820,2822],"[getData]",[780,790],"[dispatch, id]",[989,991],"[dispatch]",[1039,1041],"[dispatch, productId]",[894,896],[559,585],"[menuHover, menuCollapsed, setGroupOpen]",[1064,1074],"[currentPage, dispatch, rowsPerPage, searchValue]",[1128,1130],"[id]",[3914,3943],"[assignedTo, currentPage, dispatch, rowsPerPage, searchTerm, store.data.length]",[3496,3506],"[currentURL, groupActive, item, location, setCurrentActiveGroup, setGroupActive, setGroupOpen]",[753,763],"[currentActiveItem, location, setActiveItem]",[1249,1259],"[currentURL, groupActive, item, location, setGroupActive]",[6910,6970],"[dispatch, store.data.length, sort, sortColumn, currentPage, searchTerm, rowsPerPage, currentRole.value, currentStatus.value, currentPlan.value]",[3592,3621],"[currentPage, dispatch, plan, rowsPerPage, searchTerm, sort, sortColumn, store.data.length]",[2203,2205],"[options]",[1376,1405],"[currentPage, dispatch, rowsPerPage, sort, sortColumn, statusValue, store.data.length, value]",[3418,3447],[1065,1067],[3145,3161],"[getData, selectedOption]",[3667,3683],[1842,1844],"[getDataJob]",[1645,1649],"[getData, id]",[3535,3551],"[getData, selectedBranch]",[24637,24653],[1559,1625],"[store.tasks.length, paramsURL.filter, paramsURL.tag, query, sort, dispatch]",[1233,1269],"[query, params.folder, params.label, dispatch]",[1939,1941],"[dispatch, store.selectedCalendars]",[1212,1214],[745,747],"[searchTerm]",[1628,1630],"[store.selectedUser]",[1419,1432],"[calendarApi, setCalendarApi]",[5492,5552],[4386,4422],"[chatRef, chatData.chat.chat.length, scrollToBottom]"]