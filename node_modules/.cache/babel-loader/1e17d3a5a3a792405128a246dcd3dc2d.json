{"ast":null,"code":"// ** Redux Imports\nimport { createSlice } from '@reduxjs/toolkit';\n\n// ** ThemeConfig Import\nimport themeConfig from '@configs/themeConfig';\nconst initialMenuCollapsed = () => {\n  const item = window.localStorage.getItem('menuCollapsed');\n  //** Parse stored json or if none return initialValue\n  return item ? JSON.parse(item) : themeConfig.layout.menu.isCollapsed;\n};\nconst initialDirection = () => {\n  const item = window.localStorage.getItem('direction');\n  //** Parse stored json or if none return initialValue\n  return item ? JSON.parse(item) : themeConfig.layout.isRTL;\n};\nconst initialSkin = () => {\n  const item = window.localStorage.getItem('skin');\n  //** Parse stored json or if none return initialValue\n  return item ? JSON.parse(item) : themeConfig.layout.skin;\n};\nexport const layoutSlice = createSlice({\n  name: 'layout',\n  initialState: {\n    skin: initialSkin(),\n    isRTL: initialDirection(),\n    layout: themeConfig.layout.type,\n    lastLayout: themeConfig.layout.type,\n    menuCollapsed: initialMenuCollapsed(),\n    footerType: themeConfig.layout.footer.type,\n    navbarType: themeConfig.layout.navbar.type,\n    menuHidden: themeConfig.layout.menu.isHidden,\n    contentWidth: themeConfig.layout.contentWidth,\n    routerTransition: themeConfig.layout.routerTransition,\n    navbarColor: themeConfig.layout.navbar.backgroundColor\n  },\n  reducers: {\n    handleRTL: (state, action) => {\n      state.isRTL = action.payload;\n      window.localStorage.setItem('direction', JSON.stringify(action.payload));\n    },\n    handleSkin: (state, action) => {\n      state.skin = action.payload;\n      window.localStorage.setItem('skin', JSON.stringify(action.payload));\n    },\n    handleLayout: (state, action) => {\n      state.layout = action.payload;\n    },\n    handleFooterType: (state, action) => {\n      state.footerType = action.payload;\n    },\n    handleNavbarType: (state, action) => {\n      state.navbarType = action.payload;\n    },\n    handleMenuHidden: (state, action) => {\n      state.menuHidden = action.payload;\n    },\n    handleLastLayout: (state, action) => {\n      state.lastLayout = action.payload;\n    },\n    handleNavbarColor: (state, action) => {\n      state.navbarColor = action.payload;\n    },\n    handleContentWidth: (state, action) => {\n      state.contentWidth = action.payload;\n    },\n    handleMenuCollapsed: (state, action) => {\n      state.menuCollapsed = action.payload;\n      window.localStorage.setItem('menuCollapsed', JSON.stringify(action.payload));\n    },\n    handleRouterTransition: (state, action) => {\n      state.routerTransition = action.payload;\n    }\n  }\n});\nexport const {\n  handleRTL,\n  handleSkin,\n  handleLayout,\n  handleLastLayout,\n  handleMenuHidden,\n  handleNavbarType,\n  handleFooterType,\n  handleNavbarColor,\n  handleContentWidth,\n  handleMenuCollapsed,\n  handleRouterTransition\n} = layoutSlice.actions;\nexport default layoutSlice.reducer;","map":{"version":3,"names":["createSlice","themeConfig","initialMenuCollapsed","item","window","localStorage","getItem","JSON","parse","layout","menu","isCollapsed","initialDirection","isRTL","initialSkin","skin","layoutSlice","name","initialState","type","lastLayout","menuCollapsed","footerType","footer","navbarType","navbar","menuHidden","isHidden","contentWidth","routerTransition","navbarColor","backgroundColor","reducers","handleRTL","state","action","payload","setItem","stringify","handleSkin","handleLayout","handleFooterType","handleNavbarType","handleMenuHidden","handleLastLayout","handleNavbarColor","handleContentWidth","handleMenuCollapsed","handleRouterTransition","actions","reducer"],"sources":["D:/Utecho/Scaff-cert/src/redux/layout.js"],"sourcesContent":["// ** Redux Imports\r\nimport { createSlice } from '@reduxjs/toolkit'\r\n\r\n// ** ThemeConfig Import\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nconst initialMenuCollapsed = () => {\r\n  const item = window.localStorage.getItem('menuCollapsed')\r\n  //** Parse stored json or if none return initialValue\r\n  return item ? JSON.parse(item) : themeConfig.layout.menu.isCollapsed\r\n}\r\n\r\nconst initialDirection = () => {\r\n  const item = window.localStorage.getItem('direction')\r\n  //** Parse stored json or if none return initialValue\r\n  return item ? JSON.parse(item) : themeConfig.layout.isRTL\r\n}\r\n\r\nconst initialSkin = () => {\r\n  const item = window.localStorage.getItem('skin')\r\n  //** Parse stored json or if none return initialValue\r\n  return item ? JSON.parse(item) : themeConfig.layout.skin\r\n}\r\n\r\nexport const layoutSlice = createSlice({\r\n  name: 'layout',\r\n  initialState: {\r\n    skin: initialSkin(),\r\n    isRTL: initialDirection(),\r\n    layout: themeConfig.layout.type,\r\n    lastLayout: themeConfig.layout.type,\r\n    menuCollapsed: initialMenuCollapsed(),\r\n    footerType: themeConfig.layout.footer.type,\r\n    navbarType: themeConfig.layout.navbar.type,\r\n    menuHidden: themeConfig.layout.menu.isHidden,\r\n    contentWidth: themeConfig.layout.contentWidth,\r\n    routerTransition: themeConfig.layout.routerTransition,\r\n    navbarColor: themeConfig.layout.navbar.backgroundColor\r\n  },\r\n  reducers: {\r\n    handleRTL: (state, action) => {\r\n      state.isRTL = action.payload\r\n      window.localStorage.setItem('direction', JSON.stringify(action.payload))\r\n    },\r\n    handleSkin: (state, action) => {\r\n      state.skin = action.payload\r\n      window.localStorage.setItem('skin', JSON.stringify(action.payload))\r\n    },\r\n    handleLayout: (state, action) => {\r\n      state.layout = action.payload\r\n    },\r\n    handleFooterType: (state, action) => {\r\n      state.footerType = action.payload\r\n    },\r\n    handleNavbarType: (state, action) => {\r\n      state.navbarType = action.payload\r\n    },\r\n    handleMenuHidden: (state, action) => {\r\n      state.menuHidden = action.payload\r\n    },\r\n    handleLastLayout: (state, action) => {\r\n      state.lastLayout = action.payload\r\n    },\r\n    handleNavbarColor: (state, action) => {\r\n      state.navbarColor = action.payload\r\n    },\r\n    handleContentWidth: (state, action) => {\r\n      state.contentWidth = action.payload\r\n    },\r\n    handleMenuCollapsed: (state, action) => {\r\n      state.menuCollapsed = action.payload\r\n      window.localStorage.setItem('menuCollapsed', JSON.stringify(action.payload))\r\n    },\r\n    handleRouterTransition: (state, action) => {\r\n      state.routerTransition = action.payload\r\n    }\r\n  }\r\n})\r\n\r\nexport const {\r\n  handleRTL,\r\n  handleSkin,\r\n  handleLayout,\r\n  handleLastLayout,\r\n  handleMenuHidden,\r\n  handleNavbarType,\r\n  handleFooterType,\r\n  handleNavbarColor,\r\n  handleContentWidth,\r\n  handleMenuCollapsed,\r\n  handleRouterTransition\r\n} = layoutSlice.actions\r\n\r\nexport default layoutSlice.reducer\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}