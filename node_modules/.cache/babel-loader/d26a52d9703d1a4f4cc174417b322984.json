{"ast":null,"code":"var _jsxFileName = \"D:\\\\Utecho\\\\Scaff-cert\\\\src\\\\@core\\\\layouts\\\\components\\\\menu\\\\vertical-menu\\\\VerticalNavMenuLink.js\",\n  _s = $RefreshSig$();\n// ** React Imports\nimport { useEffect } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\n\n// ** Third Party Components\nimport classnames from 'classnames';\nimport { useTranslation } from 'react-i18next';\n\n// ** Reactstrap Imports\nimport { Badge } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerticalNavMenuLink = _ref => {\n  _s();\n  let {\n    item,\n    activeItem,\n    setActiveItem,\n    currentActiveItem\n  } = _ref;\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\n  const LinkTag = item.externalLink ? 'a' : NavLink;\n\n  // ** Hooks\n  const {\n    t\n  } = useTranslation();\n  const location = useLocation();\n  useEffect(() => {\n    if (currentActiveItem !== null) {\n      setActiveItem(currentActiveItem);\n    }\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: classnames({\n      'nav-item mt-2': !item.children,\n      disabled: item.disabled,\n      active: item.navLink === activeItem\n    }),\n    children: /*#__PURE__*/_jsxDEV(LinkTag, {\n      className: \"d-flex align-items-center\",\n      target: item.newTab ? '_blank' : undefined\n      /*eslint-disable */,\n      ...(item.externalLink === true ? {\n        href: item.navLink || '/'\n      } : {\n        to: item.navLink || '/',\n        isActive: match => {\n          if (!match) {\n            return false;\n          }\n          if (match.url && match.url !== '' && match.url === item.navLink) {\n            currentActiveItem = item.navLink;\n          }\n        }\n      }),\n      onClick: e => {\n        if (item.navLink.length === 0 || item.navLink === '#' || item.disabled === true) {\n          e.preventDefault();\n        }\n      },\n      children: [item.icon, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"menu-item text-truncate\",\n        children: t(item.title)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), item.badge && item.badgeText ? /*#__PURE__*/_jsxDEV(Badge, {\n        className: \"ms-auto me-1\",\n        color: item.badge,\n        pill: true,\n        children: item.badgeText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(VerticalNavMenuLink, \"bKCvMKVdRRGLi8ctdidDVb91M6Q=\", false, function () {\n  return [useTranslation, useLocation];\n});\n_c = VerticalNavMenuLink;\nexport default VerticalNavMenuLink;\nvar _c;\n$RefreshReg$(_c, \"VerticalNavMenuLink\");","map":{"version":3,"names":["useEffect","NavLink","useLocation","classnames","useTranslation","Badge","jsxDEV","_jsxDEV","VerticalNavMenuLink","_ref","_s","item","activeItem","setActiveItem","currentActiveItem","LinkTag","externalLink","t","location","className","children","disabled","active","navLink","target","newTab","undefined","href","to","isActive","match","url","onClick","e","length","preventDefault","icon","title","fileName","_jsxFileName","lineNumber","columnNumber","badge","badgeText","color","pill","_c","$RefreshReg$"],"sources":["D:/Utecho/Scaff-cert/src/@core/layouts/components/menu/vertical-menu/VerticalNavMenuLink.js"],"sourcesContent":["// ** React Imports\r\nimport { useEffect } from 'react'\r\nimport { NavLink, useLocation } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst VerticalNavMenuLink = ({\r\n  item,\r\n  activeItem,\r\n  setActiveItem,\r\n  currentActiveItem\r\n}) => {\r\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\r\n  const LinkTag = item.externalLink ? 'a' : NavLink\r\n\r\n  // ** Hooks\r\n  const { t } = useTranslation()\r\n  const location = useLocation()\r\n\r\n  useEffect(() => {\r\n    if (currentActiveItem !== null) {\r\n      setActiveItem(currentActiveItem)\r\n    }\r\n  }, [location])\r\n\r\n  return (\r\n    <li\r\n      className={classnames({\r\n        'nav-item mt-2': !item.children,\r\n        disabled: item.disabled,\r\n        active: item.navLink === activeItem\r\n      })}\r\n    >\r\n      <LinkTag\r\n        className='d-flex align-items-center'\r\n        target={item.newTab ? '_blank' : undefined}\r\n        /*eslint-disable */\r\n        {...(item.externalLink === true\r\n          ? {\r\n              href: item.navLink || '/'\r\n            }\r\n          : {\r\n              to: item.navLink || '/',\r\n              isActive: match => {\r\n                if (!match) {\r\n                  return false\r\n                }\r\n\r\n                if (\r\n                  match.url &&\r\n                  match.url !== '' &&\r\n                  match.url === item.navLink\r\n                ) {\r\n                  currentActiveItem = item.navLink\r\n                }\r\n              }\r\n            })}\r\n        onClick={e => {\r\n          if (\r\n            item.navLink.length === 0 ||\r\n            item.navLink === '#' ||\r\n            item.disabled === true\r\n          ) {\r\n            e.preventDefault()\r\n          }\r\n        }}\r\n      >\r\n        {item.icon}\r\n        <span className='menu-item text-truncate'>{t(item.title)}</span>\r\n\r\n        {item.badge && item.badgeText ? (\r\n          <Badge className='ms-auto me-1' color={item.badge} pill>\r\n            {item.badgeText}\r\n          </Badge>\r\n        ) : null}\r\n      </LinkTag>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default VerticalNavMenuLink\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}