{"ast":null,"code":"var _jsxFileName = \"D:\\\\Utecho\\\\Scaff-cert\\\\src\\\\router\\\\Router.js\",\n  _s = $RefreshSig$();\n// ** React Imports\nimport { Suspense, useContext, lazy, Fragment } from 'react';\n\n// ** Utils\nimport { isUserLoggedIn } from '@utils';\nimport { useLayout } from '@hooks/useLayout';\nimport { AbilityContext } from '@src/utility/context/Can';\nimport { useRouterTransition } from '@hooks/useRouterTransition';\n\n// ** Custom Components\nimport LayoutWrapper from '@layouts/components/layout-wrapper';\n\n// ** Router Components\nimport { HashRouter as AppRouter, Route, Switch, Redirect } from 'react-router-dom';\n\n// ** Routes & Default Routes\nimport { DefaultRoute, Routes } from './routes';\n\n// ** Layouts\nimport BlankLayout from '@layouts/BlankLayout';\nimport VerticalLayout from '@src/layouts/VerticalLayout';\nimport HorizontalLayout from '@src/layouts/HorizontalLayout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Router = () => {\n  _s();\n  // ** Hooks\n  const {\n    layout,\n    setLayout,\n    setLastLayout\n  } = useLayout();\n  const {\n    transition,\n    setTransition\n  } = useRouterTransition();\n\n  // ** ACL Ability Context\n  const ability = useContext(AbilityContext);\n\n  // ** Default Layout\n  const DefaultLayout = layout === 'horizontal' ? 'HorizontalLayout' : 'VerticalLayout';\n\n  // ** All of the available layouts\n  const Layouts = {\n    BlankLayout,\n    VerticalLayout,\n    HorizontalLayout\n  };\n\n  // ** Current Active Item\n  const currentActiveItem = null;\n\n  // ** Return Filtered Array of Routes & Paths\n  const LayoutRoutesAndPaths = layout => {\n    const LayoutRoutes = [];\n    const LayoutPaths = [];\n    if (Routes) {\n      Routes.filter(route => {\n        // ** Checks if Route layout or Default layout matches current layout\n        if (route.layout === layout || route.layout === undefined && DefaultLayout === layout) {\n          LayoutRoutes.push(route);\n          LayoutPaths.push(route.path);\n        }\n      });\n    }\n    return {\n      LayoutRoutes,\n      LayoutPaths\n    };\n  };\n  const NotAuthorized = /*#__PURE__*/lazy(() => import('@src/views/pages/misc/NotAuthorized'));\n\n  // ** Init Error Component\n  const Error = /*#__PURE__*/lazy(() => import('@src/views/pages/misc/Error'));\n\n  /**\r\n   ** Final Route Component Checks for Login & User Role and then redirects to the route\r\n   */\n  const FinalRoute = props => {\n    const route = props.route;\n    let action, resource;\n\n    // ** Assign vars based on route meta\n    if (route.meta) {\n      action = route.meta.action ? route.meta.action : null;\n      resource = route.meta.resource ? route.meta.resource : null;\n    }\n    if (!isUserLoggedIn() && route.meta === undefined || !isUserLoggedIn() && route.meta && !route.meta.authRoute && !route.meta.publicRoute) {\n      /**\r\n       ** If user is not Logged in & route meta is undefined\r\n       ** OR\r\n       ** If user is not Logged in & route.meta.authRoute, !route.meta.publicRoute are undefined\r\n       ** Then redirect user to login\r\n       */\n\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 14\n      }, this);\n    } else if (route.meta && route.meta.authRoute && isUserLoggedIn()) {\n      // ** If route has meta and authRole and user is Logged in then redirect user to home page (DefaultRoute)\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 14\n      }, this);\n    } else if (isUserLoggedIn() && !ability.can(action || 'read', resource)) {\n      // ** If user is Logged in and doesn't have ability to visit the page redirect the user to Not Authorized\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/misc/not-authorized\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 14\n      }, this);\n    } else {\n      // ** If none of the above render component\n      return /*#__PURE__*/_jsxDEV(route.component, {\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  // ** Return Route to Render\n  const ResolveRoutes = () => {\n    return Object.keys(Layouts).map((layout, index) => {\n      // ** Convert Layout parameter to Layout Component\n      // ? Note: make sure to keep layout and component name equal\n\n      const LayoutTag = Layouts[layout];\n\n      // ** Get Routes and Paths of the Layout\n      const {\n        LayoutRoutes,\n        LayoutPaths\n      } = LayoutRoutesAndPaths(layout);\n\n      // ** We have freedom to display different layout for different route\n      // ** We have made LayoutTag dynamic based on layout, we can also replace it with the only layout component,\n      // ** that we want to implement like VerticalLayout or HorizontalLayout\n      // ** We segregated all the routes based on the layouts and Resolved all those routes inside layouts\n\n      // ** RouterProps to pass them to Layouts\n      const routerProps = {};\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: LayoutPaths,\n        children: /*#__PURE__*/_jsxDEV(LayoutTag, {\n          layout: layout,\n          setLayout: setLayout,\n          transition: transition,\n          routerProps: routerProps,\n          setLastLayout: setLastLayout,\n          setTransition: setTransition,\n          currentActiveItem: currentActiveItem,\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: LayoutRoutes.map(route => {\n              return /*#__PURE__*/_jsxDEV(Route, {\n                path: route.path,\n                exact: route.exact === true,\n                render: props => {\n                  // ** Assign props to routerProps\n                  Object.assign(routerProps, {\n                    ...props,\n                    meta: route.meta\n                  });\n                  return /*#__PURE__*/_jsxDEV(Fragment, {\n                    children: route.layout === 'BlankLayout' ? /*#__PURE__*/_jsxDEV(Fragment, {\n                      children: /*#__PURE__*/_jsxDEV(FinalRoute, {\n                        route: route,\n                        ...props\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 151,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 150,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(LayoutWrapper, {\n                      layout: DefaultLayout,\n                      transition: transition,\n                      setTransition: setTransition\n                      /* Conditional props */\n                      /*eslint-disable */,\n                      ...(route.appLayout ? {\n                        appLayout: route.appLayout\n                      } : {}),\n                      ...(route.meta ? {\n                        routeMeta: route.meta\n                      } : {}),\n                      ...(route.className ? {\n                        wrapperClass: route.className\n                      } : {}),\n                      children: /*#__PURE__*/_jsxDEV(Suspense, {\n                        fallback: null,\n                        children: /*#__PURE__*/_jsxDEV(FinalRoute, {\n                          route: route,\n                          ...props\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 178,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 177,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 154,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 25\n                  }, this);\n                }\n              }, route.path, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AppRouter, {\n    basename: process.env.REACT_APP_BASENAME,\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        render: () => {\n          return isUserLoggedIn() ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: DefaultRoute\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 39\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 72\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/misc/not-authorized\",\n        render: () => /*#__PURE__*/_jsxDEV(Layouts.BlankLayout, {\n          children: /*#__PURE__*/_jsxDEV(NotAuthorized, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), ResolveRoutes(), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        component: Error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n};\n_s(Router, \"AkDaFvcKF4CUBH2l45FzToK/xCs=\", false, function () {\n  return [useLayout, useRouterTransition];\n});\n_c = Router;\nexport default Router;\nvar _c;\n$RefreshReg$(_c, \"Router\");","map":{"version":3,"names":["Suspense","useContext","lazy","Fragment","isUserLoggedIn","useLayout","AbilityContext","useRouterTransition","LayoutWrapper","HashRouter","AppRouter","Route","Switch","Redirect","DefaultRoute","Routes","BlankLayout","VerticalLayout","HorizontalLayout","jsxDEV","_jsxDEV","Router","_s","layout","setLayout","setLastLayout","transition","setTransition","ability","DefaultLayout","Layouts","currentActiveItem","LayoutRoutesAndPaths","LayoutRoutes","LayoutPaths","filter","route","undefined","push","path","NotAuthorized","Error","FinalRoute","props","action","resource","meta","authRoute","publicRoute","to","fileName","_jsxFileName","lineNumber","columnNumber","can","component","ResolveRoutes","Object","keys","map","index","LayoutTag","routerProps","children","exact","render","assign","appLayout","routeMeta","className","wrapperClass","fallback","basename","process","env","REACT_APP_BASENAME","_c","$RefreshReg$"],"sources":["D:/Utecho/Scaff-cert/src/router/Router.js"],"sourcesContent":["// ** React Imports\r\nimport { Suspense, useContext, lazy, Fragment } from 'react'\r\n\r\n// ** Utils\r\nimport { isUserLoggedIn } from '@utils'\r\nimport { useLayout } from '@hooks/useLayout'\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\nimport { useRouterTransition } from '@hooks/useRouterTransition'\r\n\r\n// ** Custom Components\r\nimport LayoutWrapper from '@layouts/components/layout-wrapper'\r\n\r\n// ** Router Components\r\nimport { HashRouter as AppRouter, Route, Switch, Redirect } from 'react-router-dom'\r\n\r\n// ** Routes & Default Routes\r\nimport { DefaultRoute, Routes } from './routes'\r\n\r\n// ** Layouts\r\nimport BlankLayout from '@layouts/BlankLayout'\r\nimport VerticalLayout from '@src/layouts/VerticalLayout'\r\nimport HorizontalLayout from '@src/layouts/HorizontalLayout'\r\n\r\nconst Router = () => {\r\n  // ** Hooks\r\n  const { layout, setLayout, setLastLayout } = useLayout()\r\n  const { transition, setTransition } = useRouterTransition()\r\n\r\n  // ** ACL Ability Context\r\n  const ability = useContext(AbilityContext)\r\n\r\n  // ** Default Layout\r\n  const DefaultLayout = layout === 'horizontal' ? 'HorizontalLayout' : 'VerticalLayout'\r\n\r\n  // ** All of the available layouts\r\n  const Layouts = { BlankLayout, VerticalLayout, HorizontalLayout }\r\n\r\n  // ** Current Active Item\r\n  const currentActiveItem = null\r\n\r\n  // ** Return Filtered Array of Routes & Paths\r\n  const LayoutRoutesAndPaths = layout => {\r\n    const LayoutRoutes = []\r\n    const LayoutPaths = []\r\n\r\n    if (Routes) {\r\n      Routes.filter(route => {\r\n        // ** Checks if Route layout or Default layout matches current layout\r\n        if (route.layout === layout || (route.layout === undefined && DefaultLayout === layout)) {\r\n          LayoutRoutes.push(route)\r\n          LayoutPaths.push(route.path)\r\n        }\r\n      })\r\n    }\r\n\r\n    return { LayoutRoutes, LayoutPaths }\r\n  }\r\n\r\n  const NotAuthorized = lazy(() => import('@src/views/pages/misc/NotAuthorized'))\r\n\r\n  // ** Init Error Component\r\n  const Error = lazy(() => import('@src/views/pages/misc/Error'))\r\n\r\n  /**\r\n   ** Final Route Component Checks for Login & User Role and then redirects to the route\r\n   */\r\n  const FinalRoute = props => {\r\n    const route = props.route\r\n    let action, resource\r\n\r\n    // ** Assign vars based on route meta\r\n    if (route.meta) {\r\n      action = route.meta.action ? route.meta.action : null\r\n      resource = route.meta.resource ? route.meta.resource : null\r\n    }\r\n\r\n    if (\r\n      (!isUserLoggedIn() && route.meta === undefined) ||\r\n      (!isUserLoggedIn() && route.meta && !route.meta.authRoute && !route.meta.publicRoute)\r\n    ) {\r\n      /**\r\n       ** If user is not Logged in & route meta is undefined\r\n       ** OR\r\n       ** If user is not Logged in & route.meta.authRoute, !route.meta.publicRoute are undefined\r\n       ** Then redirect user to login\r\n       */\r\n\r\n      return <Redirect to='/login' />\r\n    } else if (route.meta && route.meta.authRoute && isUserLoggedIn()) {\r\n      // ** If route has meta and authRole and user is Logged in then redirect user to home page (DefaultRoute)\r\n      return <Redirect to='/' />\r\n    } else if (isUserLoggedIn() && !ability.can(action || 'read', resource)) {\r\n      // ** If user is Logged in and doesn't have ability to visit the page redirect the user to Not Authorized\r\n      return <Redirect to='/misc/not-authorized' />\r\n    } else {\r\n      // ** If none of the above render component\r\n      return <route.component {...props} />\r\n    }\r\n  }\r\n\r\n  // ** Return Route to Render\r\n  const ResolveRoutes = () => {\r\n    return Object.keys(Layouts).map((layout, index) => {\r\n      // ** Convert Layout parameter to Layout Component\r\n      // ? Note: make sure to keep layout and component name equal\r\n\r\n      const LayoutTag = Layouts[layout]\r\n\r\n      // ** Get Routes and Paths of the Layout\r\n      const { LayoutRoutes, LayoutPaths } = LayoutRoutesAndPaths(layout)\r\n\r\n      // ** We have freedom to display different layout for different route\r\n      // ** We have made LayoutTag dynamic based on layout, we can also replace it with the only layout component,\r\n      // ** that we want to implement like VerticalLayout or HorizontalLayout\r\n      // ** We segregated all the routes based on the layouts and Resolved all those routes inside layouts\r\n\r\n      // ** RouterProps to pass them to Layouts\r\n      const routerProps = {}\r\n\r\n      return (\r\n        <Route path={LayoutPaths} key={index}>\r\n          <LayoutTag\r\n            layout={layout}\r\n            setLayout={setLayout}\r\n            transition={transition}\r\n            routerProps={routerProps}\r\n            setLastLayout={setLastLayout}\r\n            setTransition={setTransition}\r\n            currentActiveItem={currentActiveItem}\r\n          >\r\n            <Switch>\r\n              {LayoutRoutes.map(route => {\r\n                return (\r\n                  <Route\r\n                    key={route.path}\r\n                    path={route.path}\r\n                    exact={route.exact === true}\r\n                    render={props => {\r\n                      // ** Assign props to routerProps\r\n                      Object.assign(routerProps, {\r\n                        ...props,\r\n                        meta: route.meta\r\n                      })\r\n\r\n                      return (\r\n                        <Fragment>\r\n                          {/* Layout Wrapper to add classes based on route's layout, appLayout and className */}\r\n\r\n                          {route.layout === 'BlankLayout' ? (\r\n                            <Fragment>\r\n                              <FinalRoute route={route} {...props} />\r\n                            </Fragment>\r\n                          ) : (\r\n                            <LayoutWrapper\r\n                              layout={DefaultLayout}\r\n                              transition={transition}\r\n                              setTransition={setTransition}\r\n                              /* Conditional props */\r\n                              /*eslint-disable */\r\n                              {...(route.appLayout\r\n                                ? {\r\n                                    appLayout: route.appLayout\r\n                                  }\r\n                                : {})}\r\n                              {...(route.meta\r\n                                ? {\r\n                                    routeMeta: route.meta\r\n                                  }\r\n                                : {})}\r\n                              {...(route.className\r\n                                ? {\r\n                                    wrapperClass: route.className\r\n                                  }\r\n                                : {})}\r\n                              /*eslint-enable */\r\n                            >\r\n                              <Suspense fallback={null}>\r\n                                <FinalRoute route={route} {...props} />\r\n                              </Suspense>\r\n                            </LayoutWrapper>\r\n                          )}\r\n                        </Fragment>\r\n                      )\r\n                    }}\r\n                  />\r\n                )\r\n              })}\r\n            </Switch>\r\n          </LayoutTag>\r\n        </Route>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <AppRouter basename={process.env.REACT_APP_BASENAME}>\r\n      <Switch>\r\n        {/* If user is logged in Redirect user to DefaultRoute else to login */}\r\n        <Route\r\n          exact\r\n          path='/'\r\n          render={() => {\r\n            return isUserLoggedIn() ? <Redirect to={DefaultRoute} /> : <Redirect to='/login' />\r\n          }}\r\n        />\r\n        {/* Not Auth Route */}\r\n        <Route\r\n          exact\r\n          path='/misc/not-authorized'\r\n          render={() => (\r\n            <Layouts.BlankLayout>\r\n              <NotAuthorized />\r\n            </Layouts.BlankLayout>\r\n          )}\r\n        />\r\n        {ResolveRoutes()}\r\n\r\n        {/* NotFound Error page */}\r\n        <Route path='*' component={Error} />\r\n      </Switch>\r\n    </AppRouter>\r\n  )\r\n}\r\n\r\nexport default Router\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}