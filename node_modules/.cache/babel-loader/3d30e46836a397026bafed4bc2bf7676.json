{"ast":null,"code":"var _jsxFileName = \"D:\\\\Utecho\\\\Scaff-cert\\\\src\\\\@core\\\\components\\\\autocomplete\\\\index.js\",\n  _s = $RefreshSig$();\n// ** React Imports\nimport ReactDOM from 'react-dom';\nimport { useHistory } from 'react-router-dom';\nimport { Fragment, useEffect, useState, useRef } from 'react';\n\n// ** Third Party Components\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { AlertCircle } from 'react-feather';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\n// ** Hooks Imports\nimport { useOnClickOutside } from '@hooks/useOnClickOutside';\n\n// ** Styles Imports\nimport '@styles/base/bootstrap-extended/_include.scss';\nimport './autocomplete.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Autocomplete = props => {\n  _s();\n  // ** Refs\n  const container = useRef(null);\n  const inputElRef = useRef(null);\n  const suggestionsListRef = useRef(null);\n\n  // ** States\n  const [focused, setFocused] = useState(false);\n  const [activeSuggestion, setActiveSuggestion] = useState(0);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [userInput, setUserInput] = useState(props.value ? props.value : '');\n\n  // ** Vars\n  const history = useHistory();\n  let filteredData = [];\n\n  // ** Suggestion Item Click Event\n  const onSuggestionItemClick = (url, e) => {\n    setActiveSuggestion(0);\n    setShowSuggestions(false);\n    setUserInput(filteredData[activeSuggestion][props.filterKey]);\n    if (url !== undefined && url !== null) {\n      history.push(url);\n    }\n    if (props.onSuggestionClick) {\n      props.onSuggestionClick(url, e);\n    }\n  };\n\n  // ** Suggestion Hover Event\n  const onSuggestionItemHover = index => {\n    setActiveSuggestion(index);\n  };\n\n  // ** Input On Change Event\n  const onChange = e => {\n    const userInput = e.currentTarget.value;\n    setActiveSuggestion(0);\n    setShowSuggestions(true);\n    setUserInput(userInput);\n    if (e.target.value < 1) {\n      setShowSuggestions(false);\n    }\n  };\n\n  // ** Input Click Event\n  const onInputClick = e => {\n    e.stopPropagation();\n  };\n\n  // ** Input's Keydown Event\n  const onKeyDown = e => {\n    const filterKey = props.filterKey;\n    const suggestionList = ReactDOM.findDOMNode(suggestionsListRef.current);\n\n    // ** User pressed the up arrow\n    if (e.keyCode === 38 && activeSuggestion !== 0) {\n      setActiveSuggestion(activeSuggestion - 1);\n      if (e.target.value.length > -1 && suggestionList !== null && activeSuggestion <= filteredData.length / 2) {\n        suggestionList.scrollTop = 0;\n      }\n    } else if (e.keyCode === 40 && activeSuggestion < filteredData.length - 1) {\n      // ** User pressed the down arrow\n      setActiveSuggestion(activeSuggestion + 1);\n      if (e.target.value.length > -1 && suggestionList !== null && activeSuggestion >= filteredData.length / 2) {\n        suggestionList.scrollTop = suggestionList.scrollHeight;\n      }\n    } else if (e.keyCode === 27) {\n      // ** User Pressed ESC\n      setShowSuggestions(false);\n      setUserInput('');\n    } else if (e.keyCode === 13 && showSuggestions) {\n      // ** User Pressed ENTER\n      onSuggestionItemClick(filteredData[activeSuggestion].link, e);\n      setUserInput(filteredData[activeSuggestion][filterKey]);\n      setShowSuggestions(false);\n    } else {\n      return;\n    }\n\n    // ** Custom Keydown Event\n    if (props.onKeyDown !== undefined && props.onKeyDown !== null) {\n      props.onKeyDown(e, userInput);\n    }\n  };\n\n  // ** Function To Render Grouped Suggestions\n  const renderGroupedSuggestion = arr => {\n    const {\n      filterKey,\n      customRender\n    } = props;\n    const renderSuggestion = (item, i) => {\n      if (!customRender) {\n        const suggestionURL = item.link !== undefined && item.link !== null ? item.link : null;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: classnames('suggestion-item', {\n            active: filteredData.indexOf(item) === activeSuggestion\n          }),\n          onClick: e => onSuggestionItemClick(suggestionURL, e),\n          onMouseEnter: () => {\n            onSuggestionItemHover(filteredData.indexOf(item));\n          },\n          children: item[filterKey]\n        }, item[filterKey], false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this);\n      } else if (customRender) {\n        return customRender(item, i, filteredData, activeSuggestion, onSuggestionItemClick, onSuggestionItemHover, userInput);\n      } else {\n        return null;\n      }\n    };\n    return arr.map((item, i) => {\n      return renderSuggestion(item, i);\n    });\n  };\n\n  // ** Function To Render Ungrouped Suggestions\n  const renderUngroupedSuggestions = () => {\n    const {\n      filterKey,\n      suggestions,\n      customRender,\n      suggestionLimit\n    } = props;\n    filteredData = [];\n    const sortSingleData = suggestions.filter(i => {\n      const startCondition = i[filterKey].toLowerCase().startsWith(userInput.toLowerCase()),\n        includeCondition = i[filterKey].toLowerCase().includes(userInput.toLowerCase());\n      if (startCondition) {\n        return startCondition;\n      } else if (!startCondition && includeCondition) {\n        return includeCondition;\n      } else {\n        return null;\n      }\n    }).slice(0, suggestionLimit);\n    filteredData.push(...sortSingleData);\n    if (sortSingleData.length) {\n      return sortSingleData.map((suggestion, index) => {\n        const suggestionURL = suggestion.link !== undefined && suggestion.link !== null ? suggestion.link : null;\n        if (!customRender) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: classnames('suggestion-item', {\n              active: filteredData.indexOf(suggestion) === activeSuggestion\n            }),\n            onClick: e => onSuggestionItemClick(suggestionURL, e),\n            onMouseEnter: () => onSuggestionItemHover(filteredData.indexOf(suggestion)),\n            children: suggestion[filterKey]\n          }, suggestion[filterKey], false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this);\n        } else if (customRender) {\n          return customRender(suggestion, index, filteredData, activeSuggestion, onSuggestionItemClick, onSuggestionItemHover, userInput);\n        } else {\n          return null;\n        }\n      });\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"suggestion-item no-result\",\n        children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n          size: 15\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"align-middle ms-50\",\n          children: \"No Result\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  // ** Function To Render Suggestions\n  const renderSuggestions = () => {\n    const {\n      filterKey,\n      grouped,\n      filterHeaderKey,\n      suggestions\n    } = props;\n\n    // ** Checks if suggestions are grouped or not.\n    if (grouped === undefined || grouped === null || !grouped) {\n      return renderUngroupedSuggestions();\n    } else {\n      filteredData = [];\n      return suggestions.map(suggestion => {\n        const sortData = suggestion.data.filter(i => {\n          const startCondition = i[filterKey].toLowerCase().startsWith(userInput.toLowerCase()),\n            includeCondition = i[filterKey].toLowerCase().includes(userInput.toLowerCase());\n          if (startCondition) {\n            return startCondition;\n          } else if (!startCondition && includeCondition) {\n            return includeCondition;\n          } else {\n            return null;\n          }\n        }).slice(0, suggestion.searchLimit);\n        filteredData.push(...sortData);\n        return /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"suggestion-item suggestion-title-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"suggestion-title\",\n              children: suggestion[filterHeaderKey]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), sortData.length ? renderGroupedSuggestion(sortData) : /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"suggestion-item no-result\",\n            children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n              size: 15\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"align-middle ms-50\",\n              children: \"No Result\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this)]\n        }, suggestion[filterHeaderKey], true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this);\n      });\n    }\n  };\n\n  //** ComponentDidMount\n  useEffect(() => {\n    if (props.defaultSuggestions && focused) {\n      setShowSuggestions(true);\n    }\n  }, [focused, props.defaultSuggestions]);\n\n  //** ComponentDidUpdate\n  useEffect(() => {\n    const textInput = ReactDOM.findDOMNode(inputElRef.current);\n\n    // ** For searchbar focus\n    if (textInput !== null && props.autoFocus) {\n      inputElRef.current.focus();\n    }\n\n    // ** If user has passed default suggestions & focus then show default suggestions\n    if (props.defaultSuggestions && focused) {\n      setShowSuggestions(true);\n    }\n\n    // ** Function to run on user passed Clear Input\n    if (props.clearInput) {\n      props.clearInput(userInput, setUserInput);\n    }\n\n    // ** Function on Suggestions Shown\n    if (props.onSuggestionsShown && showSuggestions) {\n      props.onSuggestionsShown(userInput);\n    }\n  }, [setShowSuggestions, focused, userInput, showSuggestions, props]);\n\n  // ** On External Click Close The Search & Call Passed Function\n  useOnClickOutside(container, () => {\n    setShowSuggestions(false);\n    if (props.externalClick) {\n      props.externalClick();\n    }\n  });\n  let suggestionsListComponent;\n  if (showSuggestions) {\n    suggestionsListComponent = /*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n      className: classnames('suggestions-list', {\n        [props.wrapperClass]: props.wrapperClass\n      }),\n      ref: suggestionsListRef,\n      component: \"ul\",\n      options: {\n        wheelPropagation: false\n      },\n      children: renderSuggestions()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"autocomplete-container\",\n    ref: container,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => {\n        onChange(e);\n        if (props.onChange) {\n          props.onChange(e);\n        }\n      },\n      onKeyDown: e => onKeyDown(e),\n      value: userInput,\n      className: `autocomplete-search ${props.className ? props.className : ''}`,\n      placeholder: props.placeholder,\n      onClick: onInputClick,\n      ref: inputElRef,\n      onFocus: () => setFocused(true),\n      autoFocus: props.autoFocus,\n      onBlur: e => {\n        if (props.onBlur) props.onBlur(e);\n        setFocused(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), suggestionsListComponent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 5\n  }, this);\n};\n_s(Autocomplete, \"4YsdX+zrpiakL4GAtwQdKolmq6k=\", false, function () {\n  return [useHistory, useOnClickOutside];\n});\n_c = Autocomplete;\nexport default Autocomplete;\n\n// ** PropTypes\nAutocomplete.propTypes = {\n  grouped: PropTypes.bool,\n  autoFocus: PropTypes.bool,\n  onKeyDown: PropTypes.func,\n  onChange: PropTypes.func,\n  clearInput: PropTypes.func,\n  placeholder: PropTypes.string,\n  externalClick: PropTypes.func,\n  defaultValue: PropTypes.string,\n  wrapperClass: PropTypes.string,\n  filterHeaderKey: PropTypes.string,\n  suggestionLimit: PropTypes.number,\n  onSuggestionsShown: PropTypes.func,\n  onSuggestionItemClick: PropTypes.func,\n  filterKey: PropTypes.string.isRequired,\n  suggestions: PropTypes.array.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"Autocomplete\");","map":{"version":3,"names":["ReactDOM","useHistory","Fragment","useEffect","useState","useRef","PropTypes","classnames","AlertCircle","PerfectScrollbar","useOnClickOutside","jsxDEV","_jsxDEV","Autocomplete","props","_s","container","inputElRef","suggestionsListRef","focused","setFocused","activeSuggestion","setActiveSuggestion","showSuggestions","setShowSuggestions","userInput","setUserInput","value","history","filteredData","onSuggestionItemClick","url","e","filterKey","undefined","push","onSuggestionClick","onSuggestionItemHover","index","onChange","currentTarget","target","onInputClick","stopPropagation","onKeyDown","suggestionList","findDOMNode","current","keyCode","length","scrollTop","scrollHeight","link","renderGroupedSuggestion","arr","customRender","renderSuggestion","item","i","suggestionURL","className","active","indexOf","onClick","onMouseEnter","children","fileName","_jsxFileName","lineNumber","columnNumber","map","renderUngroupedSuggestions","suggestions","suggestionLimit","sortSingleData","filter","startCondition","toLowerCase","startsWith","includeCondition","includes","slice","suggestion","size","renderSuggestions","grouped","filterHeaderKey","sortData","data","searchLimit","defaultSuggestions","textInput","autoFocus","focus","clearInput","onSuggestionsShown","externalClick","suggestionsListComponent","wrapperClass","ref","component","options","wheelPropagation","type","placeholder","onFocus","onBlur","_c","propTypes","bool","func","string","defaultValue","number","isRequired","array","$RefreshReg$"],"sources":["D:/Utecho/Scaff-cert/src/@core/components/autocomplete/index.js"],"sourcesContent":["// ** React Imports\r\nimport ReactDOM from 'react-dom'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Fragment, useEffect, useState, useRef } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { AlertCircle } from 'react-feather'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\n\r\n// ** Hooks Imports\r\nimport { useOnClickOutside } from '@hooks/useOnClickOutside'\r\n\r\n// ** Styles Imports\r\nimport '@styles/base/bootstrap-extended/_include.scss'\r\nimport './autocomplete.scss'\r\n\r\nconst Autocomplete = props => {\r\n  // ** Refs\r\n  const container = useRef(null)\r\n  const inputElRef = useRef(null)\r\n  const suggestionsListRef = useRef(null)\r\n\r\n  // ** States\r\n  const [focused, setFocused] = useState(false)\r\n  const [activeSuggestion, setActiveSuggestion] = useState(0)\r\n  const [showSuggestions, setShowSuggestions] = useState(false)\r\n  const [userInput, setUserInput] = useState(props.value ? props.value : '')\r\n\r\n  // ** Vars\r\n  const history = useHistory()\r\n  let filteredData = []\r\n\r\n  // ** Suggestion Item Click Event\r\n  const onSuggestionItemClick = (url, e) => {\r\n    setActiveSuggestion(0)\r\n    setShowSuggestions(false)\r\n    setUserInput(filteredData[activeSuggestion][props.filterKey])\r\n    if (url !== undefined && url !== null) {\r\n      history.push(url)\r\n    }\r\n\r\n    if (props.onSuggestionClick) {\r\n      props.onSuggestionClick(url, e)\r\n    }\r\n  }\r\n\r\n  // ** Suggestion Hover Event\r\n  const onSuggestionItemHover = index => {\r\n    setActiveSuggestion(index)\r\n  }\r\n\r\n  // ** Input On Change Event\r\n  const onChange = e => {\r\n    const userInput = e.currentTarget.value\r\n    setActiveSuggestion(0)\r\n    setShowSuggestions(true)\r\n    setUserInput(userInput)\r\n    if (e.target.value < 1) {\r\n      setShowSuggestions(false)\r\n    }\r\n  }\r\n\r\n  // ** Input Click Event\r\n  const onInputClick = e => {\r\n    e.stopPropagation()\r\n  }\r\n\r\n  // ** Input's Keydown Event\r\n  const onKeyDown = e => {\r\n    const filterKey = props.filterKey\r\n    const suggestionList = ReactDOM.findDOMNode(suggestionsListRef.current)\r\n\r\n    // ** User pressed the up arrow\r\n    if (e.keyCode === 38 && activeSuggestion !== 0) {\r\n      setActiveSuggestion(activeSuggestion - 1)\r\n\r\n      if (e.target.value.length > -1 && suggestionList !== null && activeSuggestion <= filteredData.length / 2) {\r\n        suggestionList.scrollTop = 0\r\n      }\r\n    } else if (e.keyCode === 40 && activeSuggestion < filteredData.length - 1) {\r\n      // ** User pressed the down arrow\r\n      setActiveSuggestion(activeSuggestion + 1)\r\n\r\n      if (e.target.value.length > -1 && suggestionList !== null && activeSuggestion >= filteredData.length / 2) {\r\n        suggestionList.scrollTop = suggestionList.scrollHeight\r\n      }\r\n    } else if (e.keyCode === 27) {\r\n      // ** User Pressed ESC\r\n      setShowSuggestions(false)\r\n      setUserInput('')\r\n    } else if (e.keyCode === 13 && showSuggestions) {\r\n      // ** User Pressed ENTER\r\n      onSuggestionItemClick(filteredData[activeSuggestion].link, e)\r\n      setUserInput(filteredData[activeSuggestion][filterKey])\r\n      setShowSuggestions(false)\r\n    } else {\r\n      return\r\n    }\r\n\r\n    // ** Custom Keydown Event\r\n    if (props.onKeyDown !== undefined && props.onKeyDown !== null) {\r\n      props.onKeyDown(e, userInput)\r\n    }\r\n  }\r\n\r\n  // ** Function To Render Grouped Suggestions\r\n  const renderGroupedSuggestion = arr => {\r\n    const { filterKey, customRender } = props\r\n\r\n    const renderSuggestion = (item, i) => {\r\n      if (!customRender) {\r\n        const suggestionURL = item.link !== undefined && item.link !== null ? item.link : null\r\n        return (\r\n          <li\r\n            className={classnames('suggestion-item', {\r\n              active: filteredData.indexOf(item) === activeSuggestion\r\n            })}\r\n            key={item[filterKey]}\r\n            onClick={e => onSuggestionItemClick(suggestionURL, e)}\r\n            onMouseEnter={() => {\r\n              onSuggestionItemHover(filteredData.indexOf(item))\r\n            }}\r\n          >\r\n            {item[filterKey]}\r\n          </li>\r\n        )\r\n      } else if (customRender) {\r\n        return customRender(\r\n          item,\r\n          i,\r\n          filteredData,\r\n          activeSuggestion,\r\n          onSuggestionItemClick,\r\n          onSuggestionItemHover,\r\n          userInput\r\n        )\r\n      } else {\r\n        return null\r\n      }\r\n    }\r\n\r\n    return arr.map((item, i) => {\r\n      return renderSuggestion(item, i)\r\n    })\r\n  }\r\n\r\n  // ** Function To Render Ungrouped Suggestions\r\n  const renderUngroupedSuggestions = () => {\r\n    const { filterKey, suggestions, customRender, suggestionLimit } = props\r\n\r\n    filteredData = []\r\n    const sortSingleData = suggestions\r\n      .filter(i => {\r\n        const startCondition = i[filterKey].toLowerCase().startsWith(userInput.toLowerCase()),\r\n          includeCondition = i[filterKey].toLowerCase().includes(userInput.toLowerCase())\r\n        if (startCondition) {\r\n          return startCondition\r\n        } else if (!startCondition && includeCondition) {\r\n          return includeCondition\r\n        } else {\r\n          return null\r\n        }\r\n      })\r\n      .slice(0, suggestionLimit)\r\n    filteredData.push(...sortSingleData)\r\n    if (sortSingleData.length) {\r\n      return sortSingleData.map((suggestion, index) => {\r\n        const suggestionURL = suggestion.link !== undefined && suggestion.link !== null ? suggestion.link : null\r\n        if (!customRender) {\r\n          return (\r\n            <li\r\n              className={classnames('suggestion-item', {\r\n                active: filteredData.indexOf(suggestion) === activeSuggestion\r\n              })}\r\n              key={suggestion[filterKey]}\r\n              onClick={e => onSuggestionItemClick(suggestionURL, e)}\r\n              onMouseEnter={() => onSuggestionItemHover(filteredData.indexOf(suggestion))}\r\n            >\r\n              {suggestion[filterKey]}\r\n            </li>\r\n          )\r\n        } else if (customRender) {\r\n          return customRender(\r\n            suggestion,\r\n            index,\r\n            filteredData,\r\n            activeSuggestion,\r\n            onSuggestionItemClick,\r\n            onSuggestionItemHover,\r\n            userInput\r\n          )\r\n        } else {\r\n          return null\r\n        }\r\n      })\r\n    } else {\r\n      return (\r\n        <li className='suggestion-item no-result'>\r\n          <AlertCircle size={15} /> <span className='align-middle ms-50'>No Result</span>\r\n        </li>\r\n      )\r\n    }\r\n  }\r\n\r\n  // ** Function To Render Suggestions\r\n  const renderSuggestions = () => {\r\n    const { filterKey, grouped, filterHeaderKey, suggestions } = props\r\n\r\n    // ** Checks if suggestions are grouped or not.\r\n    if (grouped === undefined || grouped === null || !grouped) {\r\n      return renderUngroupedSuggestions()\r\n    } else {\r\n      filteredData = []\r\n      return suggestions.map(suggestion => {\r\n        const sortData = suggestion.data\r\n          .filter(i => {\r\n            const startCondition = i[filterKey].toLowerCase().startsWith(userInput.toLowerCase()),\r\n              includeCondition = i[filterKey].toLowerCase().includes(userInput.toLowerCase())\r\n            if (startCondition) {\r\n              return startCondition\r\n            } else if (!startCondition && includeCondition) {\r\n              return includeCondition\r\n            } else {\r\n              return null\r\n            }\r\n          })\r\n          .slice(0, suggestion.searchLimit)\r\n\r\n        filteredData.push(...sortData)\r\n        return (\r\n          <Fragment key={suggestion[filterHeaderKey]}>\r\n            <li className='suggestion-item suggestion-title-wrapper'>\r\n              <h6 className='suggestion-title'>{suggestion[filterHeaderKey]}</h6>\r\n            </li>\r\n            {sortData.length ? (\r\n              renderGroupedSuggestion(sortData)\r\n            ) : (\r\n              <li className='suggestion-item no-result'>\r\n                <AlertCircle size={15} /> <span className='align-middle ms-50'>No Result</span>\r\n              </li>\r\n            )}\r\n          </Fragment>\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  //** ComponentDidMount\r\n  useEffect(() => {\r\n    if (props.defaultSuggestions && focused) {\r\n      setShowSuggestions(true)\r\n    }\r\n  }, [focused, props.defaultSuggestions])\r\n\r\n  //** ComponentDidUpdate\r\n  useEffect(() => {\r\n    const textInput = ReactDOM.findDOMNode(inputElRef.current)\r\n\r\n    // ** For searchbar focus\r\n    if (textInput !== null && props.autoFocus) {\r\n      inputElRef.current.focus()\r\n    }\r\n\r\n    // ** If user has passed default suggestions & focus then show default suggestions\r\n    if (props.defaultSuggestions && focused) {\r\n      setShowSuggestions(true)\r\n    }\r\n\r\n    // ** Function to run on user passed Clear Input\r\n    if (props.clearInput) {\r\n      props.clearInput(userInput, setUserInput)\r\n    }\r\n\r\n    // ** Function on Suggestions Shown\r\n    if (props.onSuggestionsShown && showSuggestions) {\r\n      props.onSuggestionsShown(userInput)\r\n    }\r\n  }, [setShowSuggestions, focused, userInput, showSuggestions, props])\r\n\r\n  // ** On External Click Close The Search & Call Passed Function\r\n  useOnClickOutside(container, () => {\r\n    setShowSuggestions(false)\r\n    if (props.externalClick) {\r\n      props.externalClick()\r\n    }\r\n  })\r\n\r\n  let suggestionsListComponent\r\n\r\n  if (showSuggestions) {\r\n    suggestionsListComponent = (\r\n      <PerfectScrollbar\r\n        className={classnames('suggestions-list', {\r\n          [props.wrapperClass]: props.wrapperClass\r\n        })}\r\n        ref={suggestionsListRef}\r\n        component='ul'\r\n        options={{ wheelPropagation: false }}\r\n      >\r\n        {renderSuggestions()}\r\n      </PerfectScrollbar>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className='autocomplete-container' ref={container}>\r\n      <input\r\n        type='text'\r\n        onChange={e => {\r\n          onChange(e)\r\n          if (props.onChange) {\r\n            props.onChange(e)\r\n          }\r\n        }}\r\n        onKeyDown={e => onKeyDown(e)}\r\n        value={userInput}\r\n        className={`autocomplete-search ${props.className ? props.className : ''}`}\r\n        placeholder={props.placeholder}\r\n        onClick={onInputClick}\r\n        ref={inputElRef}\r\n        onFocus={() => setFocused(true)}\r\n        autoFocus={props.autoFocus}\r\n        onBlur={e => {\r\n          if (props.onBlur) props.onBlur(e)\r\n          setFocused(false)\r\n        }}\r\n      />\r\n      {suggestionsListComponent}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Autocomplete\r\n\r\n// ** PropTypes\r\nAutocomplete.propTypes = {\r\n  grouped: PropTypes.bool,\r\n  autoFocus: PropTypes.bool,\r\n  onKeyDown: PropTypes.func,\r\n  onChange: PropTypes.func,\r\n  clearInput: PropTypes.func,\r\n  placeholder: PropTypes.string,\r\n  externalClick: PropTypes.func,\r\n  defaultValue: PropTypes.string,\r\n  wrapperClass: PropTypes.string,\r\n  filterHeaderKey: PropTypes.string,\r\n  suggestionLimit: PropTypes.number,\r\n  onSuggestionsShown: PropTypes.func,\r\n  onSuggestionItemClick: PropTypes.func,\r\n  filterKey: PropTypes.string.isRequired,\r\n  suggestions: PropTypes.array.isRequired\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}